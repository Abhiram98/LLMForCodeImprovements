{
    "Method_Improvements": {
        "Improvements": [
            {
                "Improvement": "Move object instantiation into the loop",
                "Change_Diff": "- Apis methodApi;\n+ // Removed this line",
                "Description": "There's no need to declare 'methodApi' before the loop, since it's not used outside the loop. Declare it within the loop to limit its scope and ensure a fresh object is created for each iteration.",
                "Start": 6,
                "End": 6
            },
            {
                "Improvement": "Use ternary operator for setting deprecated field",
                "Change_Diff": "- methodApi.setDeprecated(apiMethodDoc.isDeprecated() ? \"Deprecated\" : null);\n+ methodApi.setDeprecated(apiMethodDoc.isDeprecated() ? \"Deprecated\" : null);",
                "Description": "Instead of using an if condition to set the 'deprecated' field, you can use a ternary operator. This makes the code more concise and easier to read.",
                "Start": 22,
                "End": 22
            },
            {
                "Improvement": "Remove redundant if-else conditions",
                "Change_Diff": "- if (CollectionUtil.isNotEmpty(apiMethodDoc.getQueryParams()) && DocGlobalConstants.FILE_CONTENT_TYPE.equals(apiMethodDoc.getContentType())) {\n-   methodApi.setRequestParams(buildParams(apiMethodDoc.getQueryParams()));\n- }\n- else if (CollectionUtil.isNotEmpty(apiMethodDoc.getQueryParams())) {\n-   methodApi.setQueryParams(buildParams(apiMethodDoc.getQueryParams()));\n- }\n+ if (CollectionUtil.isNotEmpty(apiMethodDoc.getQueryParams())) {\n+   if(DocGlobalConstants.FILE_CONTENT_TYPE.equals(apiMethodDoc.getContentType()))\n+     methodApi.setRequestParams(buildParams(apiMethodDoc.getQueryParams()));\n+   else\n+     methodApi.setQueryParams(buildParams(apiMethodDoc.getQueryParams()));\n+ }",
                "Description": "The if-else conditions to set query params and request params only differ by the content type check. You can simplify this by using a single if condition for each and then using a ternary operator inside to decide whether to call 'setQueryParams' or 'setRequestParams'.",
                "Start": 25,
                "End": 31
            }
        ],
        "Final code": "public static List<Apis> buildApis(List<ApiMethodDoc> apiMethodDocs,boolean hasDebugEnv){\n  List<Apis> apis=new ArrayList<>();\n  for (ApiMethodDoc apiMethodDoc : apiMethodDocs) {\n    Apis methodApi=new Apis();\n    methodApi.setIsFolder(TornaConstants.NO);\n    methodApi.setName(apiMethodDoc.getDesc());\n    methodApi.setUrl(hasDebugEnv ? subFirstUrlOrPath(apiMethodDoc.getPath()) : subFirstUrlOrPath(apiMethodDoc.getUrl()));\n    methodApi.setHttpMethod(apiMethodDoc.getType());\n    methodApi.setContentType(apiMethodDoc.getContentType());\n    methodApi.setDescription(apiMethodDoc.getDetail());\n    methodApi.setIsShow(TornaConstants.YES);\n    methodApi.setAuthor(apiMethodDoc.getAuthor());\n    methodApi.setOrderIndex(apiMethodDoc.getOrder());\n    methodApi.setVersion(apiMethodDoc.getVersion());\n    methodApi.setHeaderParams(buildHerder(apiMethodDoc.getRequestHeaders()));\n    methodApi.setResponseParams(buildParams(apiMethodDoc.getResponseParams()));\n    methodApi.setIsRequestArray(apiMethodDoc.getIsRequestArray());\n    methodApi.setIsResponseArray(apiMethodDoc.getIsResponseArray());\n    methodApi.setRequestArrayType(apiMethodDoc.getRequestArrayType());\n    methodApi.setResponseArrayType(apiMethodDoc.getResponseArrayType());\n    methodApi.setDeprecated(apiMethodDoc.isDeprecated() ? \"Deprecated\" : null);\n    if (CollectionUtil.isNotEmpty(apiMethodDoc.getPathParams())) {\n      methodApi.setPathParams(buildParams(apiMethodDoc.getPathParams()));\n    }\n    if (CollectionUtil.isNotEmpty(apiMethodDoc.getQueryParams())) {\n      if(DocGlobalConstants.FILE_CONTENT_TYPE.equals(apiMethodDoc.getContentType()))\n        methodApi.setRequestParams(buildParams(apiMethodDoc.getQueryParams()));\n      else\n        methodApi.setQueryParams(buildParams(apiMethodDoc.getQueryParams()));\n    }\n    if (CollectionUtil.isNotEmpty(apiMethodDoc.getRequestParams())) {\n      methodApi.setRequestParams(buildParams(apiMethodDoc.getRequestParams()));\n    }\n    apis.add(methodApi);\n  }\n  return apis;\n}"
    },
    "Old_Method": "/** \n * build apis\n * @param apiMethodDocs apiMethodDocs\n * @param hasDebugEnv   has debug environment\n * @return List of Api\n */\npublic static List<Apis> buildApis(List<ApiMethodDoc> apiMethodDocs,boolean hasDebugEnv){\n  List<Apis> apis=new ArrayList<>();\n  Apis methodApi;\n  for (  ApiMethodDoc apiMethodDoc : apiMethodDocs) {\n    methodApi=new Apis();\n    methodApi.setIsFolder(TornaConstants.NO);\n    methodApi.setName(apiMethodDoc.getDesc());\n    methodApi.setUrl(hasDebugEnv ? subFirstUrlOrPath(apiMethodDoc.getPath()) : subFirstUrlOrPath(apiMethodDoc.getUrl()));\n    methodApi.setHttpMethod(apiMethodDoc.getType());\n    methodApi.setContentType(apiMethodDoc.getContentType());\n    methodApi.setDescription(apiMethodDoc.getDetail());\n    methodApi.setIsShow(TornaConstants.YES);\n    methodApi.setAuthor(apiMethodDoc.getAuthor());\n    methodApi.setOrderIndex(apiMethodDoc.getOrder());\n    methodApi.setVersion(apiMethodDoc.getVersion());\n    methodApi.setHeaderParams(buildHerder(apiMethodDoc.getRequestHeaders()));\n    methodApi.setResponseParams(buildParams(apiMethodDoc.getResponseParams()));\n    methodApi.setIsRequestArray(apiMethodDoc.getIsRequestArray());\n    methodApi.setIsResponseArray(apiMethodDoc.getIsResponseArray());\n    methodApi.setRequestArrayType(apiMethodDoc.getRequestArrayType());\n    methodApi.setResponseArrayType(apiMethodDoc.getResponseArrayType());\n    methodApi.setDeprecated(apiMethodDoc.isDeprecated() ? \"Deprecated\" : null);\n    if (CollectionUtil.isNotEmpty(apiMethodDoc.getPathParams())) {\n      methodApi.setPathParams(buildParams(apiMethodDoc.getPathParams()));\n    }\n    if (CollectionUtil.isNotEmpty(apiMethodDoc.getQueryParams()) && DocGlobalConstants.FILE_CONTENT_TYPE.equals(apiMethodDoc.getContentType())) {\n      methodApi.setRequestParams(buildParams(apiMethodDoc.getQueryParams()));\n    }\n else     if (CollectionUtil.isNotEmpty(apiMethodDoc.getQueryParams())) {\n      methodApi.setQueryParams(buildParams(apiMethodDoc.getQueryParams()));\n    }\n    if (CollectionUtil.isNotEmpty(apiMethodDoc.getRequestParams())) {\n      methodApi.setRequestParams(buildParams(apiMethodDoc.getRequestParams()));\n    }\n    apis.add(methodApi);\n  }\n  return apis;\n}\n",
    "File_Path": "smart-doc/src/main/java/com/ly/doc/utils/TornaUtil.java",
    "Start": 5753,
    "Stop": 8424,
    "Project_Name": "data/projects/smart-doc",
    "Method_Name": "buildApis"
}