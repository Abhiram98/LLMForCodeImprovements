{
    "Method_Improvements": {
        "Improvements": [
            {
                "Improvement": "Use final for constant values",
                "Change_Diff": "- config.setServerUrl(\"http://127.0.0.1:8899\");\n- config.setOpenUrl(\"http://localhost:7700/api\");\n- config.setAppToken(\"be4211613a734b45888c075741680e49\");\n- config.setDebugEnvName(\"测试环境\");\n- config.setStyle(\"randomLight\");\n- config.setOutPath(\"D:\\smart-doc\\docs\\jmx1\");\n- config.setFramework(FrameworkEnum.SPRING.getFramework());\n- config.setSourceCodePaths(SourceCodePath.builder().setDesc(\"本项目代码\").setPath(\"D:\\smart-doc\\test-project\"));\n- config.setPackageFilters(\"com.power.doc.controller.*\");\n- config.setBaseDir(\"D:\\smart-doc\\test-project\\smart-doc-example-cn-master\");\n- config.setCodePath(\"/src/main/java\");\n+ final String serverUrl = \"http://127.0.0.1:8899\";\n+ final String openUrl = \"http://localhost:7700/api\";\n+ final String appToken = \"be4211613a734b45888c075741680e49\";\n+ final String debugEnvName = \"测试环境\";\n+ final String style = \"randomLight\";\n+ final String outPath = \"D:\\smart-doc\\docs\\jmx1\";\n+ final String framework = FrameworkEnum.SPRING.getFramework();\n+ final SourceCodePath sourceCodePaths = SourceCodePath.builder().setDesc(\"本项目代码\").setPath(\"D:\\smart-doc\\test-project\");\n+ final String packageFilters = \"com.power.doc.controller.*\";\n+ final String baseDir = \"D:\\smart-doc\\test-project\\smart-doc-example-cn-master\";\n+ final String codePath = \"/src/main/java\";\nconfig.setServerUrl(serverUrl);\nconfig.setOpenUrl(openUrl);\nconfig.setAppToken(appToken);\nconfig.setDebugEnvName(debugEnvName);\nconfig.setStyle(style);\nconfig.setOutPath(outPath);\nconfig.setFramework(framework);\nconfig.setSourceCodePaths(sourceCodePaths);\nconfig.setPackageFilters(packageFilters);\nconfig.setBaseDir(baseDir);\nconfig.setCodePath(codePath);",
                "Description": "Values that are not changed after initialization should be declared as final. This makes the code safer because you know where variables are not changed. Also, it makes the code easier to understand because it\u2019s clear from the start that those variables are constants.",
                "Start": 5,
                "End": 17
            },
            {
                "Improvement": "Use try-with-resources to ensure resources are closed",
                "Change_Diff": "- ApiDocBuilder.buildApiDoc(config);\n- long end=System.currentTimeMillis();\n- DateTimeUtil.printRunTime(end,start);\n+ try(ApiDocBuilder builder = ApiDocBuilder.buildApiDoc(config)) {\n+     long end=System.currentTimeMillis();\n+     DateTimeUtil.printRunTime(end,start);\n+ }",
                "Description": "The Java 7 try-with-resources construct should be used to ensure that resources are closed after you're done with them. This construct takes care of both normal and exceptional conditions, ensuring that your resources are closed no matter what happens. This can prevent resource leaks which could lead to performance degradation.",
                "Start": 21,
                "End": 23
            }
        ],
        "Final code": "public void testMdBuilderControllersApi1(){\n    final ApiConfig config=new ApiConfig();\n    final String serverUrl = \"http://127.0.0.1:8899\";\n    final String openUrl = \"http://localhost:7700/api\";\n    final String appToken = \"be4211613a734b45888c075741680e49\";\n    final String debugEnvName = \"测试环境\";\n    final String style = \"randomLight\";\n    final String outPath = \"D:\\smart-doc\\docs\\jmx1\";\n    final String framework = FrameworkEnum.SPRING.getFramework();\n    final SourceCodePath sourceCodePaths = SourceCodePath.builder().setDesc(\"本项目代码\").setPath(\"D:\\smart-doc\\test-project\");\n    final String packageFilters = \"com.power.doc.controller.*\";\n    final String baseDir = \"D:\\smart-doc\\test-project\\smart-doc-example-cn-master\";\n    final String codePath = \"/src/main/java\";\n    config.setServerUrl(serverUrl);\n    config.setOpenUrl(openUrl);\n    config.setAppToken(appToken);\n    config.setDebugEnvName(debugEnvName);\n    config.setStyle(style);\n    config.setOutPath(outPath);\n    config.setFramework(framework);\n    config.setSourceCodePaths(sourceCodePaths);\n    config.setPackageFilters(packageFilters);\n    config.setBaseDir(baseDir);\n    config.setCodePath(codePath);\n    long start=System.currentTimeMillis();\n    try(ApiDocBuilder builder = ApiDocBuilder.buildApiDoc(config)) {\n        long end=System.currentTimeMillis();\n        DateTimeUtil.printRunTime(end,start);\n    }\n}"
    },
    "Old_Method": "/** \n * test markdown\n */\n@Deprecated @Test public void testMdBuilderControllersApi1(){\n  @Deprecated ApiConfig config=new ApiConfig();\n  config.setServerUrl(\"http://127.0.0.1:8899\");\n  config.setOpenUrl(\"http://localhost:7700/api\");\n  config.setAppToken(\"be4211613a734b45888c075741680e49\");\n  config.setDebugEnvName(\"测试环境\");\n  config.setInlineEnum(true);\n  config.setStyle(\"randomLight\");\n  config.setCreateDebugPage(false);\n  config.setAllInOne(true);\n  config.setCoverOld(false);\n  config.setOutPath(\"D:\\\\smart-doc\\\\docs\\\\jmx1\");\n  config.setFramework(FrameworkEnum.SPRING.getFramework());\n  config.setSourceCodePaths(SourceCodePath.builder().setDesc(\"本项目代码\").setPath(\"D:\\\\smart-doc\\\\test-project\"));\n  config.setPackageFilters(\"com.power.doc.controller.*\");\n  config.setBaseDir(\"D:\\\\smart-doc\\\\test-project\\\\smart-doc-example-cn-master\");\n  config.setCodePath(\"/src/main/java\");\n  long start=System.currentTimeMillis();\n  ApiDocBuilder.buildApiDoc(config);\n  long end=System.currentTimeMillis();\n  DateTimeUtil.printRunTime(end,start);\n}\n",
    "File_Path": "smart-doc/src/test/java/com/ly/doc/ApiDocTest.java",
    "Start": 3797,
    "Stop": 5156,
    "Project_Name": "data/projects/smart-doc",
    "Method_Name": "testMdBuilderControllersApi1"
}