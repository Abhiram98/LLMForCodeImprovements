{
    "Method_Improvements": {
        "Improvements": [
            {
                "Improvement": "Use a separate method for the Runnable implementation",
                "Change_Diff": "- Runnable publishAndCheck=new Runnable(){\n-    @Override public void run(){\n-      StandardMessage standardMessage=new StandardMessage();\n-      MultipartMessage multipartMessage=new MultipartMessage();\n-      bus.post(standardMessage).now();\n-      bus.post(multipartMessage).now();\n-      bus.post(MessageTypes.Simple).now();\n-      assertEquals(InstancesPerListener,standardMessage.getTimesHandled(IMessageListener.DefaultListener.class));\n-      assertEquals(InstancesPerListener,multipartMessage.getTimesHandled(IMessageListener.DefaultListener.class));\n-    }\n-  }\n; \n+ publishAndCheck(bus);",
                "Description": "The Runnable implementation is embedded inside the test method. This could make the method difficult to understand. It's better to move this implementation to a separate method.",
                "Start": 5,
                "End": 16
            },
            {
                "Improvement": "Remove redundant pause",
                "Change_Diff": "- pause(200);",
                "Description": "The pause at the end of the test does not serve any purpose and could slow the test. It should be removed.",
                "Start": 30,
                "End": 30
            }
        ],
        "Final code": "@Test\npublic void testSyncPublicationSyncHandlers() throws Exception {\n  ListenerFactory listeners=new ListenerFactory().create(InstancesPerListener,Listeners.synchronous()).create(InstancesPerListener,Listeners.noHandlers());\n  final MBassador bus=createBus(SyncAsync(),listeners);\n  publishAndCheck(bus);\n  ConcurrentExecutor.runConcurrent(() -> publishAndCheck(bus),1);\n  MessageTypes.resetAll();\n  ConcurrentExecutor.runConcurrent(() -> publishAndCheck(bus),ConcurrentUnits);\n  assertEquals(InstancesPerListener * ConcurrentUnits,MessageTypes.Simple.getTimesHandled(IMessageListener.DefaultListener.class));\n  assertEquals(InstancesPerListener * ConcurrentUnits,MessageTypes.Simple.getTimesHandled(MessagesTypeListener.DefaultListener.class));\n  bus.shutdown();\n}\n\nprivate void publishAndCheck(MBassador bus) {\n  StandardMessage standardMessage=new StandardMessage();\n  MultipartMessage multipartMessage=new MultipartMessage();\n  bus.post(standardMessage).now();\n  bus.post(multipartMessage).now();\n  bus.post(MessageTypes.Simple).now();\n  assertEquals(InstancesPerListener,standardMessage.getTimesHandled(IMessageListener.DefaultListener.class));\n  assertEquals(InstancesPerListener,multipartMessage.getTimesHandled(IMessageListener.DefaultListener.class));\n}"
    },
    "Old_Method": "@Test public void testSyncPublicationSyncHandlers() throws Exception {\n  ListenerFactory listeners=new ListenerFactory().create(InstancesPerListener,Listeners.synchronous()).create(InstancesPerListener,Listeners.noHandlers());\n  final MBassador bus=createBus(SyncAsync(),listeners);\n  Runnable publishAndCheck=new Runnable(){\n    @Override public void run(){\n      StandardMessage standardMessage=new StandardMessage();\n      MultipartMessage multipartMessage=new MultipartMessage();\n      bus.post(standardMessage).now();\n      bus.post(multipartMessage).now();\n      bus.post(MessageTypes.Simple).now();\n      assertEquals(InstancesPerListener,standardMessage.getTimesHandled(IMessageListener.DefaultListener.class));\n      assertEquals(InstancesPerListener,multipartMessage.getTimesHandled(IMessageListener.DefaultListener.class));\n    }\n  }\n;\n  ConcurrentExecutor.runConcurrent(publishAndCheck,1);\n  MessageTypes.resetAll();\n  ConcurrentExecutor.runConcurrent(publishAndCheck,ConcurrentUnits);\n  assertEquals(InstancesPerListener * ConcurrentUnits,MessageTypes.Simple.getTimesHandled(IMessageListener.DefaultListener.class));\n  assertEquals(InstancesPerListener * ConcurrentUnits,MessageTypes.Simple.getTimesHandled(MessagesTypeListener.DefaultListener.class));\n  bus.shutdown();\n  pause(200);\n}\n",
    "File_Path": "mbassador/src/test/java/net/engio/mbassy/SyncAsyncTest.java",
    "Start": 762,
    "Stop": 2358,
    "Project_Name": "data/projects/mbassador",
    "Method_Name": "testSyncPublicationSyncHandlers"
}