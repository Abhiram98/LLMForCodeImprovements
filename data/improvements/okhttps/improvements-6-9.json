{
    "Method_Improvements": {
        "Improvements": [
            {
                "Improvement": "Reduce Multiple Returns",
                "Change_Diff": "- return builder.build();\n- return toRequestBody(requestBody);\n- return emptyRequestBody();\n- return builder.build();\n- return toRequestBody(bodyParams);\n+ RequestBody result = null;\n... assign result instead of returning ...\n+ return result;",
                "Description": "Having multiple return statements in a method can make it harder to debug. Try to refactor the code so there's only one return statement at the end.",
                "Start": 6,
                "End": 40
            },
            {
                "Improvement": "Avoid Null Checks in Lambda",
                "Change_Diff": "- if (value == null) return;\n+ if (value != null) {...}",
                "Description": "Checking for null inside a lambda expression can be avoided by using the Optional class or by filtering out null values before the forEach.",
                "Start": 8,
                "End": 13
            },
            {
                "Improvement": "Use Else If for Multiple Conditions",
                "Change_Diff": "- if (bodyParams != null && (OkHttps.FORM_DATA.equals(bodyType) || bodyType.startsWith(MULTIPART)) || files != null) {...}\n- if (requestBody != null) {...}\n- if (bodyParams == null) {...}\n- if (OkHttps.FORM.equals(bodyType) || bodyType.endsWith(FORM)) {...}\n+ if (bodyParams != null && (OkHttps.FORM_DATA.equals(bodyType) || bodyType.startsWith(MULTIPART)) || files != null) {...} else if (requestBody != null) {...} else if (bodyParams == null) {...} else if (OkHttps.FORM.equals(bodyType) || bodyType.endsWith(FORM)) {...}",
                "Description": "Instead of using multiple if statements, use else if for better readability and performance.",
                "Start": 3,
                "End": 32
            }
        ],
        "Final code": "private RequestBody buildRequestBody(){\n  RequestBody result = null;\n  if (bodyParams != null && (OkHttps.FORM_DATA.equals(bodyType) || bodyType.startsWith(MULTIPART)) || files != null) {\n    MultipartBody.Builder builder=multipartBodyBuilder();\n    if (bodyParams != null) {\n      bodyParams.forEach((key,value) -> {\n        if (value != null) {\n          byte[] content=value.toString().getBytes(charset);\n          RequestBody body=RequestBody.create(null,content);\n          builder.addPart(MultipartBody.Part.createFormData(key,null,body));\n        }\n      });\n    }\n    if (files != null) {\n      files.forEach((name,file) -> {\n        MediaType type=httpClient.mediaType(file.getType());\n        builder.addFormDataPart(name,file.getFileName(),file.toRequestBody(type));\n      });\n    }\n    result = builder.build();\n  } else if (requestBody != null) {\n    result = toRequestBody(requestBody);\n  } else if (bodyParams == null) {\n    result = emptyRequestBody();\n  } else if (OkHttps.FORM.equals(bodyType) || bodyType.endsWith(FORM)) {\n    FormBody.Builder builder=new FormBody.Builder(charset);\n    bodyParams.forEach((key,value) -> {\n      if (value != null) {\n        builder.add(key,value.toString());\n      }\n    });\n    result = builder.build();\n  } else {\n    result = toRequestBody(bodyParams);\n  }\n  return result;\n}"
    },
    "Old_Method": "private RequestBody buildRequestBody(){\n  if (bodyParams != null && (OkHttps.FORM_DATA.equals(bodyType) || bodyType.startsWith(MULTIPART)) || files != null) {\n    MultipartBody.Builder builder=multipartBodyBuilder();\n    if (bodyParams != null) {\n      bodyParams.forEach((key,value) -> {\n        if (value == null)         return;\n        byte[] content=value.toString().getBytes(charset);\n        RequestBody body=RequestBody.create(null,content);\n        builder.addPart(MultipartBody.Part.createFormData(key,null,body));\n      }\n);\n    }\n    if (files != null) {\n      files.forEach((name,file) -> {\n        MediaType type=httpClient.mediaType(file.getType());\n        builder.addFormDataPart(name,file.getFileName(),file.toRequestBody(type));\n      }\n);\n    }\n    return builder.build();\n  }\n  if (requestBody != null) {\n    return toRequestBody(requestBody);\n  }\n  if (bodyParams == null) {\n    return emptyRequestBody();\n  }\n  if (OkHttps.FORM.equals(bodyType) || bodyType.endsWith(FORM)) {\n    FormBody.Builder builder=new FormBody.Builder(charset);\n    bodyParams.forEach((key,value) -> {\n      if (value == null)       return;\n      builder.add(key,value.toString());\n    }\n);\n    return builder.build();\n  }\n  return toRequestBody(bodyParams);\n}\n",
    "File_Path": "okhttps/okhttps/src/main/java/cn/zhxu/okhttps/HttpTask.java",
    "Start": 19603,
    "Stop": 21270,
    "Project_Name": "data/projects/okhttps",
    "Method_Name": "buildRequestBody"
}