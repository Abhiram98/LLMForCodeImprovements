{
    "Method_Improvements": {
        "Improvements": [
            {
                "Improvement": "Use String.format instead of concatenation",
                "Change_Diff": "- throw new OkHttpsException(\"PathPara [ \" + name + \" ] 不存在于 url [ \"+ urlPath+ \" ]\");\n+ throw new OkHttpsException(String.format(\"PathPara [ %s ] 不存在于 url [ %s ]\", name, urlPath));",
                "Description": "Using String.format instead of concatenation for the error message will make the code cleaner and easier to read.",
                "Start": 7,
                "End": 7
            },
            {
                "Improvement": "Add null check for `name` in `pathParams` forEach loop",
                "Change_Diff": "- pathParams.forEach((name,value) -> {\n+ pathParams.forEach((name, value) -> {\n+ if (name == null) return;",
                "Description": "A null check should be added for `name` to prevent NullPointerException, since it's used to build a `target` string.",
                "Start": 5,
                "End": 5
            },
            {
                "Improvement": "Use ternary operator for the `newValue` assignment",
                "Change_Diff": "- String newValue=value != null ? value.toString() : \"\";\n+ String newValue = (value != null) ? value.toString() : \"\";",
                "Description": "Using a ternary operator for the `newValue` assignment will make the code cleaner and more concise.",
                "Start": 6,
                "End": 6
            }
        ],
        "Final code": "private String buildUrlPath(){\n  if (Platform.isBlank(urlPath)) {\n    throw new OkHttpsException(\"url 不能为空！\");\n  }\n  StringBuilder sb=new StringBuilder(urlPath);\n  if (pathParams != null) {\n    pathParams.forEach((name,value) -> {\n      if (name == null) return;\n      String target=\"{\" + name + \"}\";\n      int start=sb.indexOf(target);\n      if (start >= 0) {\n        String newValue = (value != null) ? value.toString() : \"\";\n        sb.replace(start,start + target.length(),newValue);\n      }\n else {\n        throw new OkHttpsException(String.format(\"PathPara [ %s ] 不存在于 url [ %s ]\", name, urlPath));\n      }\n    }\n);\n  }\n  if (urlParams != null) {\n    if (sb.indexOf(\"?\") >= 0) {\n      int lastIndex=sb.length() - 1;\n      if (sb.lastIndexOf(\"?\") < lastIndex) {\n        if (sb.lastIndexOf(\"=\") < sb.lastIndexOf(\"?\") + 2) {\n          throw new OkHttpsException(\"url 格式错误，'?' 后没有发现 '='\");\n        }\n        if (sb.lastIndexOf(\"&\") < lastIndex) {\n          sb.append('&');\n        }\n      }\n    }\n else {\n      sb.append('?');\n    }\n    urlParams.forEach((name,value) -> {\n      if (value == null)       return;\n      sb.append(name).append('=').append(value).append('&');\n    }\n);\n    sb.delete(sb.length() - 1,sb.length());\n  }\n  return sb.toString();\n}"
    },
    "Old_Method": "private String buildUrlPath(){\n  if (Platform.isBlank(urlPath)) {\n    throw new OkHttpsException(\"url 不能为空！\");\n  }\n  StringBuilder sb=new StringBuilder(urlPath);\n  if (pathParams != null) {\n    pathParams.forEach((name,value) -> {\n      String target=\"{\" + name + \"}\";\n      int start=sb.indexOf(target);\n      if (start >= 0) {\n        String newValue=value != null ? value.toString() : \"\";\n        sb.replace(start,start + target.length(),newValue);\n      }\n else {\n        throw new OkHttpsException(\"PathPara [ \" + name + \" ] 不存在于 url [ \"+ urlPath+ \" ]\");\n      }\n    }\n);\n  }\n  if (urlParams != null) {\n    if (sb.indexOf(\"?\") >= 0) {\n      int lastIndex=sb.length() - 1;\n      if (sb.lastIndexOf(\"?\") < lastIndex) {\n        if (sb.lastIndexOf(\"=\") < sb.lastIndexOf(\"?\") + 2) {\n          throw new OkHttpsException(\"url 格式错误，'?' 后没有发现 '='\");\n        }\n        if (sb.lastIndexOf(\"&\") < lastIndex) {\n          sb.append('&');\n        }\n      }\n    }\n else {\n      sb.append('?');\n    }\n    urlParams.forEach((name,value) -> {\n      if (value == null)       return;\n      sb.append(name).append('=').append(value).append('&');\n    }\n);\n    sb.delete(sb.length() - 1,sb.length());\n  }\n  return sb.toString();\n}\n",
    "File_Path": "okhttps/okhttps/src/main/java/cn/zhxu/okhttps/HttpTask.java",
    "Start": 22867,
    "Stop": 24516,
    "Project_Name": "data/projects/okhttps",
    "Method_Name": "buildUrlPath"
}