{
    "Method_Improvements": {
        "Improvements": [
            {
                "Improvement": "Early exit when bodyParams is null",
                "Change_Diff": "- if (bodyParams != null && ...\n+ if (bodyParams == null) {\n+    return emptyRequestBody();\n+ } ...",
                "Description": "If bodyParams is null, there is no need to proceed with the other checks. It would be more efficient to just return an emptyRequestBody() early.",
                "Start": 1,
                "End": 24
            },
            {
                "Improvement": "Remove unnecessary if condition",
                "Change_Diff": "- if (bodyParams == null) {\n+ // Removed unnecessary if condition",
                "Description": "The condition 'if (bodyParams == null)' is unnecessary as we have already checked that bodyParams is not null at the beginning of the method. We can safely remove this condition.",
                "Start": 20,
                "End": 20
            },
            {
                "Improvement": "Refactor repeated code",
                "Change_Diff": "- bodyParams.forEach(...\n+ addBodyParams(builder);",
                "Description": "The code to add body parameters is repeated twice in the method. This can be refactored into a separate method to avoid duplication.",
                "Start": 5,
                "End": 10
            }
        ],
        "Final code": "private RequestBody buildRequestBody(){\n  if (bodyParams == null) {\n    return emptyRequestBody();\n  }\n\n  if ((OkHttps.FORM_DATA.equals(bodyType) || bodyType.startsWith(MULTIPART)) || files != null) {\n    MultipartBody.Builder builder=multipartBodyBuilder();\n    addBodyParams(builder);\n    if (files != null) {\n      files.forEach((name,file) -> {\n        MediaType type=httpClient.mediaType(file.getType());\n        builder.addFormDataPart(name,file.getFileName(),file.toRequestBody(type));\n      }\n);\n    }\n    return builder.build();\n  }\n\n  if (requestBody != null) {\n    return toRequestBody(requestBody);\n  }\n\n  if (OkHttps.FORM.equals(bodyType) || bodyType.endsWith(FORM)) {\n    FormBody.Builder builder=new FormBody.Builder(charset);\n    addBodyParams(builder);\n    return builder.build();\n  }\n\n  return toRequestBody(bodyParams);\n}\n\nprivate void addBodyParams(Builder builder) {\n  bodyParams.forEach((key,value) -> {\n    if (value == null) return;\n    byte[] content=value.toString().getBytes(charset);\n    RequestBody body=RequestBody.create(null,content);\n    builder.addPart(MultipartBody.Part.createFormData(key,null,body));\n  }\n);\n}"
    },
    "Old_Method": "private RequestBody buildRequestBody(){\n  if (bodyParams != null && (OkHttps.FORM_DATA.equals(bodyType) || bodyType.startsWith(MULTIPART)) || files != null) {\n    MultipartBody.Builder builder=multipartBodyBuilder();\n    if (bodyParams != null) {\n      bodyParams.forEach((key,value) -> {\n        if (value == null)         return;\n        byte[] content=value.toString().getBytes(charset);\n        RequestBody body=RequestBody.create(null,content);\n        builder.addPart(MultipartBody.Part.createFormData(key,null,body));\n      }\n);\n    }\n    if (files != null) {\n      files.forEach((name,file) -> {\n        MediaType type=httpClient.mediaType(file.getType());\n        builder.addFormDataPart(name,file.getFileName(),file.toRequestBody(type));\n      }\n);\n    }\n    return builder.build();\n  }\n  if (requestBody != null) {\n    return toRequestBody(requestBody);\n  }\n  if (bodyParams == null) {\n    return emptyRequestBody();\n  }\n  if (OkHttps.FORM.equals(bodyType) || bodyType.endsWith(FORM)) {\n    FormBody.Builder builder=new FormBody.Builder(charset);\n    bodyParams.forEach((key,value) -> {\n      if (value == null)       return;\n      builder.add(key,value.toString());\n    }\n);\n    return builder.build();\n  }\n  return toRequestBody(bodyParams);\n}\n",
    "File_Path": "okhttps/okhttps/src/main/java/cn/zhxu/okhttps/HttpTask.java",
    "Start": 19603,
    "Stop": 21270,
    "Project_Name": "data/projects/okhttps",
    "Method_Name": "buildRequestBody"
}