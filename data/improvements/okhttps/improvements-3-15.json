{
    "Method_Improvements": {
        "Improvements": [
            {
                "Improvement": "Extract repeated code into a function",
                "Change_Diff": "- pathParams.forEach((name,value) -> {\n-     String target=\"{\" + name + \"}\";\n-     int start=sb.indexOf(target);\n-     if (start >= 0) {\n-       String newValue=value != null ? value.toString() : \"\";\n-       sb.replace(start,start + target.length(),newValue);\n-     }\n-  else {\n-       throw new OkHttpsException(\"PathPara [ \" + name + \" ] 不存在于 url [ \"+ urlPath+ \" ]\");\n-     }\n-   }\n);\n+ replacePathParams(sb, pathParams);",
                "Description": "The code for replacing path parameters in the url is repeated for each path parameter. This can be extracted into a function to make the code more readable and maintainable.",
                "Start": 7,
                "End": 13
            },
            {
                "Improvement": "Extract repeated code into a function",
                "Change_Diff": "- urlParams.forEach((name,value) -> {\n-     if (value == null)       return;\n-     sb.append(name).append('=').append(value).append('&');\n-   }\n);\n- sb.delete(sb.length() - 1,sb.length());\n+ appendUrlParams(sb, urlParams);",
                "Description": "The code for appending url parameters is repeated for each url parameter. This can be extracted into a function to make the code more readable and maintainable.",
                "Start": 23,
                "End": 27
            }
        ],
        "Final code": "private String buildUrlPath(){\n  if (Platform.isBlank(urlPath)) {\n    throw new OkHttpsException(\"url 不能为空！\");\n  }\n  StringBuilder sb=new StringBuilder(urlPath);\n  if (pathParams != null) {\n    replacePathParams(sb, pathParams);\n  }\n  if (urlParams != null) {\n    if (sb.indexOf(\"?\") >= 0) {\n      int lastIndex=sb.length() - 1;\n      if (sb.lastIndexOf(\"?\") < lastIndex) {\n        if (sb.lastIndexOf(\"=\") < sb.lastIndexOf(\"?\") + 2) {\n          throw new OkHttpsException(\"url 格式错误，'?' 后没有发现 '='\");\n        }\n        if (sb.lastIndexOf(\"&\") < lastIndex) {\n          sb.append('&');\n        }\n      }\n    }\n else {\n      sb.append('?');\n    }\n    appendUrlParams(sb, urlParams);\n  }\n  return sb.toString();\n}\n\nprivate void replacePathParams(StringBuilder sb, Map<String, Object> pathParams) {\n  pathParams.forEach((name,value) -> {\n    String target=\"{\" + name + \"}\";\n    int start=sb.indexOf(target);\n    if (start >= 0) {\n      String newValue=value != null ? value.toString() : \"\";\n      sb.replace(start,start + target.length(),newValue);\n    }\n else {\n      throw new OkHttpsException(\"PathPara [ \" + name + \" ] 不存在于 url [ \"+ urlPath+ \" ]\");\n    }\n  });\n}\n\nprivate void appendUrlParams(StringBuilder sb, Map<String, Object> urlParams) {\n  urlParams.forEach((name,value) -> {\n    if (value == null)       return;\n    sb.append(name).append('=').append(value).append('&');\n  });\n  sb.delete(sb.length() - 1,sb.length());\n}"
    },
    "Old_Method": "private String buildUrlPath(){\n  if (Platform.isBlank(urlPath)) {\n    throw new OkHttpsException(\"url 不能为空！\");\n  }\n  StringBuilder sb=new StringBuilder(urlPath);\n  if (pathParams != null) {\n    pathParams.forEach((name,value) -> {\n      String target=\"{\" + name + \"}\";\n      int start=sb.indexOf(target);\n      if (start >= 0) {\n        String newValue=value != null ? value.toString() : \"\";\n        sb.replace(start,start + target.length(),newValue);\n      }\n else {\n        throw new OkHttpsException(\"PathPara [ \" + name + \" ] 不存在于 url [ \"+ urlPath+ \" ]\");\n      }\n    }\n);\n  }\n  if (urlParams != null) {\n    if (sb.indexOf(\"?\") >= 0) {\n      int lastIndex=sb.length() - 1;\n      if (sb.lastIndexOf(\"?\") < lastIndex) {\n        if (sb.lastIndexOf(\"=\") < sb.lastIndexOf(\"?\") + 2) {\n          throw new OkHttpsException(\"url 格式错误，'?' 后没有发现 '='\");\n        }\n        if (sb.lastIndexOf(\"&\") < lastIndex) {\n          sb.append('&');\n        }\n      }\n    }\n else {\n      sb.append('?');\n    }\n    urlParams.forEach((name,value) -> {\n      if (value == null)       return;\n      sb.append(name).append('=').append(value).append('&');\n    }\n);\n    sb.delete(sb.length() - 1,sb.length());\n  }\n  return sb.toString();\n}\n",
    "File_Path": "okhttps/okhttps/src/main/java/cn/zhxu/okhttps/HttpTask.java",
    "Start": 22867,
    "Stop": 24516,
    "Project_Name": "data/projects/okhttps",
    "Method_Name": "buildUrlPath"
}