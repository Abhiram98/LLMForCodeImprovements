{
    "Method_Improvements": [{
        "Improvements": [
            {
                "Improvement": "Extract method for replacing path parameters",
                "Change_Diff": "- pathParams.forEach((name,value) -> {\n+ replacePathParams(sb, name, value);",
                "Description": "Extract the logic for replacing path parameters into a separate method to enhance readability and maintainability.",
                "Start": 6,
                "End": 16
            },
            {
                "Improvement": "Extract method for appending URL parameters",
                "Change_Diff": "- urlParams.forEach((name,value) -> {\n+ appendUrlParams(sb, name, value);",
                "Description": "Extract the logic for appending URL parameters into a separate method to enhance readability and maintainability.",
                "Start": 31,
                "End": 38
            },
            {
                "Improvement": "Extract method for checking URL format",
                "Change_Diff": "- if (sb.indexOf(\"?\") >= 0) {\n+ if (hasQueryString(sb)) {",
                "Description": "Extract the logic for checking if a query string exists in the URL into a separate method to enhance readability and maintainability.",
                "Start": 19,
                "End": 21
            }
        ],
        "Final code": "private String buildUrlPath() {\n  if (Platform.isBlank(urlPath)) {\n    throw new OkHttpsException(\"url 不能为空！\");\n  }\n  StringBuilder sb = new StringBuilder(urlPath);\n  replacePathParameters(sb);\n  appendUrlParameters(sb);\n  return sb.toString();\n}\n\nprivate void replacePathParameters(StringBuilder sb) {\n  if (pathParams != null) {\n    pathParams.forEach((name, value) -> {\n      String target = \"{\" + name + \"}\";\n      int start = sb.indexOf(target);\n      if (start >= 0) {\n        String newValue = value != null ? value.toString() : \"\";\n        sb.replace(start, start + target.length(), newValue);\n      } else {\n        throw new OkHttpsException(\"PathPara [ \" + name + \" ] 不存在于 url [ \" + urlPath + \" ]\");\n      }\n    });\n  }\n}\n\nprivate void appendUrlParameters(StringBuilder sb) {\n  if (urlParams != null) {\n    if (hasQueryString(sb)) {\n      if (sb.lastIndexOf(\"=\") < sb.lastIndexOf(\"?\") + 2) {\n        throw new OkHttpsException(\"url 格式错误，'?' 后没有发现 '='\");\n      }\n      if (sb.lastIndexOf(\"&\") < sb.length() - 1) {\n        sb.append('&');\n      }\n    } else {\n      sb.append('?');\n    }\n    urlParams.forEach((name, value) -> {\n      if (value == null)\n        return;\n      sb.append(name).append('=').append(value).append('&');\n    });\n    sb.deleteCharAt(sb.length() - 1);\n  }\n}\n\nprivate boolean hasQueryString(StringBuilder sb) {\n  return sb.indexOf(\"?\") >= 0;\n}"
    }],
    "Old_Method": "private String buildUrlPath(){\n  if (Platform.isBlank(urlPath)) {\n    throw new OkHttpsException(\"url 不能为空！\");\n  }\n  StringBuilder sb=new StringBuilder(urlPath);\n  if (pathParams != null) {\n    pathParams.forEach((name,value) -> {\n      String target=\"{\" + name + \"}\";\n      int start=sb.indexOf(target);\n      if (start >= 0) {\n        String newValue=value != null ? value.toString() : \"\";\n        sb.replace(start,start + target.length(),newValue);\n      }\n else {\n        throw new OkHttpsException(\"PathPara [ \" + name + \" ] 不存在于 url [ \"+ urlPath+ \" ]\");\n      }\n    }\n);\n  }\n  if (urlParams != null) {\n    if (sb.indexOf(\"?\") >= 0) {\n      int lastIndex=sb.length() - 1;\n      if (sb.lastIndexOf(\"?\") < lastIndex) {\n        if (sb.lastIndexOf(\"=\") < sb.lastIndexOf(\"?\") + 2) {\n          throw new OkHttpsException(\"url 格式错误，'?' 后没有发现 '='\");\n        }\n        if (sb.lastIndexOf(\"&\") < lastIndex) {\n          sb.append('&');\n        }\n      }\n    }\n else {\n      sb.append('?');\n    }\n    urlParams.forEach((name,value) -> {\n      if (value == null)       return;\n      sb.append(name).append('=').append(value).append('&');\n    }\n);\n    sb.delete(sb.length() - 1,sb.length());\n  }\n  return sb.toString();\n}\n",
    "File_Path": "okhttps/okhttps/src/main/java/cn/zhxu/okhttps/HttpTask.java",
    "Start": 22867,
    "Stop": 24516,
    "Project_Name": "data/projects/okhttps",
    "Method_Name": "buildUrlPath"
}