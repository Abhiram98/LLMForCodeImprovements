{
    "Method_Improvements": [{
        "Improvements": [
            {
                "Improvement": "Use try-with-resources to automatically close resources",
                "Change_Diff": "+ try (ServerSocket serverSocket = new ServerSocket(elideStandaloneSettings.getPort())) {\n- jettyServer = new Server(elideStandaloneSettings.getPort());\n",
                "Description": "Instead of manually closing the Jetty server with a finally block, use try-with-resources to automatically close the server socket.",
                "Start": 8,
                "End": 8
            },
            {
                "Improvement": "Use lambda expression for servlet configuration",
                "Change_Diff": "- ServletHolder jerseyServlet = context.addServlet(ServletContainer.class, elideStandaloneSettings.getJsonApiPathSpec());\n+ context.addServlet(ServletContainer.class, elideStandaloneSettings.getJsonApiPathSpec())\n.initOrder(0)\n.initParameter(\"jersey.config.server.provider.packages\", \"com.yahoo.elide.jsonapi.resources\")\n.initParameter(\"jakarta.ws.rs.Application\", ElideResourceConfig.class.getCanonicalName());",
                "Description": "Instead of using separate lines for setting up servlet configuration, use lambda expressions to chain the method calls together.",
                "Start": 19,
                "End": 22
            }
        ],
        "Final code": "public void start(boolean block) throws Exception {\n  ServletContextHandler context=new ServletContextHandler();\n  context.setContextPath(\"/\");\n  log.info(\"Starting jetty server on port: {}\",elideStandaloneSettings.getPort());\n  try (ServerSocket serverSocket = new ServerSocket(elideStandaloneSettings.getPort())) {\n    jettyServer = new Server(elideStandaloneSettings.getPort());\n    jettyServer.setHandler(context);\n    context.setAttribute(ELIDE_STANDALONE_SETTINGS_ATTR,elideStandaloneSettings);\n    if (elideStandaloneSettings.getAsyncProperties().enabled()) {\n      Integer threadPoolSize=elideStandaloneSettings.getAsyncProperties().getThreadSize() == null ? AsyncExecutorService.DEFAULT_THREAD_POOL_SIZE : elideStandaloneSettings.getAsyncProperties().getThreadSize();\n      context.setAttribute(ASYNC_EXECUTOR_ATTR,Executors.newFixedThreadPool(threadPoolSize));\n      context.setAttribute(ASYNC_UPDATER_ATTR,Executors.newFixedThreadPool(threadPoolSize));\n    }\n    if (elideStandaloneSettings.enableJsonApi()) {\n      context.addServlet(ServletContainer.class,elideStandaloneSettings.getJsonApiPathSpec())\n        .initOrder(0)\n        .initParameter(\"jersey.config.server.provider.packages\",\"com.yahoo.elide.jsonapi.resources\")\n        .initParameter(\"jakarta.ws.rs.Application\",ElideResourceConfig.class.getCanonicalName());\n    }\n    if (elideStandaloneSettings.enableGraphQL()) {\n      context.addServlet(ServletContainer.class,elideStandaloneSettings.getGraphQLApiPathSpec())\n        .initOrder(0)\n        .initParameter(\"jersey.config.server.provider.packages\",\"com.yahoo.elide.graphql\")\n        .initParameter(\"jakarta.ws.rs.Application\",ElideResourceConfig.class.getCanonicalName());\n    }\n    ElideStandaloneSubscriptionSettings subscriptionSettings=elideStandaloneSettings.getSubscriptionProperties();\n    if (elideStandaloneSettings.enableGraphQL() && subscriptionSettings.enabled()) {\n      JakartaWebSocketServletContainerInitializer.configure(context,(servletContext,serverContainer) -> {\n        serverContainer.addEndpoint(subscriptionSettings.serverEndpointConfig(elideStandaloneSettings,false));\n      });\n      JakartaWebSocketServletContainerInitializer.configure(context,(servletContext,serverContainer) -> {\n        serverContainer.addEndpoint(subscriptionSettings.serverEndpointConfig(elideStandaloneSettings,true));\n      });\n    }\n    if (elideStandaloneSettings.getAsyncProperties().enableExport()) {\n      context.addServlet(ServletContainer.class,elideStandaloneSettings.getAsyncProperties().getExportApiPathSpec())\n        .initOrder(0)\n        .initParameter(\"jersey.config.server.provider.packages\",\"com.yahoo.elide.async.resources\")\n        .initParameter(\"jakarta.ws.rs.Application\",ElideResourceConfig.class.getCanonicalName());\n    }\n    if (elideStandaloneSettings.enableServiceMonitoring()) {\n      FilterHolder instrumentedFilterHolder=new FilterHolder(InstrumentedFilter.class);\n      instrumentedFilterHolder.setName(\"instrumentedFilter\");\n      instrumentedFilterHolder.setAsyncSupported(true);\n      context.addFilter(instrumentedFilterHolder,\"/*\",EnumSet.of(DispatcherType.REQUEST));\n      context.setAttribute(HealthCheckServlet.HEALTH_CHECK_REGISTRY,ElideResourceConfig.getHealthCheckRegistry());\n      context.setAttribute(InstrumentedFilter.REGISTRY_ATTRIBUTE,ElideResourceConfig.getMetricRegistry());\n      context.setAttribute(MetricsServlet.METRICS_REGISTRY,ElideResourceConfig.getMetricRegistry());\n      context.addServlet(AdminServlet.class,\"/stats/*\");\n    }\n    if (elideStandaloneSettings.enableApiDocs()) {\n      context.addServlet(ServletContainer.class,elideStandaloneSettings.getApiDocsPathSpec())\n        .initOrder(0)\n        .initParameter(\"jersey.config.server.provider.packages\",\"com.yahoo.elide.swagger.resources\")\n        .initParameter(\"jakarta.ws.rs.Application\",ElideResourceConfig.class.getCanonicalName());\n    }\n    elideStandaloneSettings.updateServletContextHandler(context);\n    try {\n      jettyServer.start();\n      log.info(\"Jetty started!\");\n      if (block) {\n        jettyServer.join();\n      }\n    }\n    catch (Exception e) {\n      log.error(\"Unexpected exception caught: {}\",e.getMessage(),e);\n      throw e;\n    }\n    finally {\n      if (block) {\n        jettyServer.destroy();\n      }\n    }\n  }\n}"
    }],
    "Old_Method": "/** \n * Start the Elide service.\n * @param block - Whether or not to wait for the server to shutdown.\n * @throws Exception Exception thrown\n */\npublic void start(boolean block) throws Exception {\n  ServletContextHandler context=new ServletContextHandler();\n  context.setContextPath(\"/\");\n  log.info(\"Starting jetty server on port: {}\",elideStandaloneSettings.getPort());\n  jettyServer=new Server(elideStandaloneSettings.getPort());\n  jettyServer.setHandler(context);\n  context.setAttribute(ELIDE_STANDALONE_SETTINGS_ATTR,elideStandaloneSettings);\n  if (elideStandaloneSettings.getAsyncProperties().enabled()) {\n    Integer threadPoolSize=elideStandaloneSettings.getAsyncProperties().getThreadSize() == null ? AsyncExecutorService.DEFAULT_THREAD_POOL_SIZE : elideStandaloneSettings.getAsyncProperties().getThreadSize();\n    context.setAttribute(ASYNC_EXECUTOR_ATTR,Executors.newFixedThreadPool(threadPoolSize));\n    context.setAttribute(ASYNC_UPDATER_ATTR,Executors.newFixedThreadPool(threadPoolSize));\n  }\n  if (elideStandaloneSettings.enableJsonApi()) {\n    ServletHolder jerseyServlet=context.addServlet(ServletContainer.class,elideStandaloneSettings.getJsonApiPathSpec());\n    jerseyServlet.setInitOrder(0);\n    jerseyServlet.setInitParameter(\"jersey.config.server.provider.packages\",\"com.yahoo.elide.jsonapi.resources\");\n    jerseyServlet.setInitParameter(\"jakarta.ws.rs.Application\",ElideResourceConfig.class.getCanonicalName());\n  }\n  if (elideStandaloneSettings.enableGraphQL()) {\n    ServletHolder jerseyServlet=context.addServlet(ServletContainer.class,elideStandaloneSettings.getGraphQLApiPathSpec());\n    jerseyServlet.setInitOrder(0);\n    jerseyServlet.setInitParameter(\"jersey.config.server.provider.packages\",\"com.yahoo.elide.graphql\");\n    jerseyServlet.setInitParameter(\"jakarta.ws.rs.Application\",ElideResourceConfig.class.getCanonicalName());\n  }\n  ElideStandaloneSubscriptionSettings subscriptionSettings=elideStandaloneSettings.getSubscriptionProperties();\n  if (elideStandaloneSettings.enableGraphQL() && subscriptionSettings.enabled()) {\n    JakartaWebSocketServletContainerInitializer.configure(context,(servletContext,serverContainer) -> {\n      serverContainer.addEndpoint(subscriptionSettings.serverEndpointConfig(elideStandaloneSettings,false));\n    }\n);\n    JakartaWebSocketServletContainerInitializer.configure(context,(servletContext,serverContainer) -> {\n      serverContainer.addEndpoint(subscriptionSettings.serverEndpointConfig(elideStandaloneSettings,true));\n    }\n);\n  }\n  if (elideStandaloneSettings.getAsyncProperties().enableExport()) {\n    ServletHolder jerseyServlet=context.addServlet(ServletContainer.class,elideStandaloneSettings.getAsyncProperties().getExportApiPathSpec());\n    jerseyServlet.setInitOrder(0);\n    jerseyServlet.setInitParameter(\"jersey.config.server.provider.packages\",\"com.yahoo.elide.async.resources\");\n    jerseyServlet.setInitParameter(\"jakarta.ws.rs.Application\",ElideResourceConfig.class.getCanonicalName());\n  }\n  if (elideStandaloneSettings.enableServiceMonitoring()) {\n    FilterHolder instrumentedFilterHolder=new FilterHolder(InstrumentedFilter.class);\n    instrumentedFilterHolder.setName(\"instrumentedFilter\");\n    instrumentedFilterHolder.setAsyncSupported(true);\n    context.addFilter(instrumentedFilterHolder,\"/*\",EnumSet.of(DispatcherType.REQUEST));\n    context.setAttribute(HealthCheckServlet.HEALTH_CHECK_REGISTRY,ElideResourceConfig.getHealthCheckRegistry());\n    context.setAttribute(InstrumentedFilter.REGISTRY_ATTRIBUTE,ElideResourceConfig.getMetricRegistry());\n    context.setAttribute(MetricsServlet.METRICS_REGISTRY,ElideResourceConfig.getMetricRegistry());\n    context.addServlet(AdminServlet.class,\"/stats/*\");\n  }\n  if (elideStandaloneSettings.enableApiDocs()) {\n    ServletHolder jerseyServlet=context.addServlet(ServletContainer.class,elideStandaloneSettings.getApiDocsPathSpec());\n    jerseyServlet.setInitOrder(0);\n    jerseyServlet.setInitParameter(\"jersey.config.server.provider.packages\",\"com.yahoo.elide.swagger.resources\");\n    jerseyServlet.setInitParameter(\"jakarta.ws.rs.Application\",ElideResourceConfig.class.getCanonicalName());\n  }\n  elideStandaloneSettings.updateServletContextHandler(context);\n  try {\n    jettyServer.start();\n    log.info(\"Jetty started!\");\n    if (block) {\n      jettyServer.join();\n    }\n  }\n catch (  Exception e) {\n    log.error(\"Unexpected exception caught: {}\",e.getMessage(),e);\n    throw e;\n  }\n finally {\n    if (block) {\n      jettyServer.destroy();\n    }\n  }\n}\n",
    "File_Path": "elide/elide-standalone/src/main/java/com/yahoo/elide/standalone/ElideStandalone.java",
    "Start": 2575,
    "Stop": 7965,
    "Project_Name": "data/projects/elide",
    "Method_Name": "start"
}