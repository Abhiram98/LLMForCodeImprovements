{
    "Method_Improvements": {
        "Improvements": [{
            "Improvement": "Use switch case instead of multiple if else statements",
            "Change_Diff": "- if (lowerCasePath.endsWith(\"db/variables.hjson\")) {\n-     return ConfigFile.ConfigFileType.VARIABLE;\n- }\n- else if (lowerCasePath.endsWith(\"models/variables.hjson\")) {\n-     return ConfigFile.ConfigFileType.VARIABLE;\n- }\n- else if (lowerCasePath.equals(\"models/security.hjson\")) {\n-     return ConfigFile.ConfigFileType.SECURITY;\n- }\n- else if (DB_FILE.matcher(lowerCasePath).matches()) {\n-     return ConfigFile.ConfigFileType.DATABASE;\n- }\n- else if (TABLE_FILE.matcher(lowerCasePath).matches()) {\n-     return ConfigFile.ConfigFileType.TABLE;\n- }\n- else if (NAME_SPACE_FILE.matcher(lowerCasePath).matches()) {\n-     return ConfigFile.ConfigFileType.NAMESPACE;\n- }\n- else {\n-     return ConfigFile.ConfigFileType.UNKNOWN;\n- }\n+ switch (lowerCasePath) {\n+     case \"db/variables.hjson\", \"models/variables.hjson\" -> return ConfigFile.ConfigFileType.VARIABLE;\n+     case \"models/security.hjson\" -> return ConfigFile.ConfigFileType.SECURITY;\n+     case _ when DB_FILE.matcher(lowerCasePath).matches() -> return ConfigFile.ConfigFileType.DATABASE;\n+     case _ when TABLE_FILE.matcher(lowerCasePath).matches() -> return ConfigFile.ConfigFileType.TABLE;\n+     case _ when NAME_SPACE_FILE.matcher(lowerCasePath).matches() -> return ConfigFile.ConfigFileType.NAMESPACE;\n+     default -> return ConfigFile.ConfigFileType.UNKNOWN;\n+ }",
            "Description": "Instead of using multiple if else statements, a switch statement can be used for better readability. However, please note that this requires the use of the enhanced switch statement introduced in Java 12, which allows for multiple cases to yield the same result.",
            "Start": 3,
            "End": 16
        }],
        "Final code": "public static ConfigFile.ConfigFileType toType(String path){\n  String lowerCasePath=path.toLowerCase(Locale.ROOT);\n  return switch (lowerCasePath) {\n    case \"db/variables.hjson\", \"models/variables.hjson\" -> ConfigFile.ConfigFileType.VARIABLE;\n    case \"models/security.hjson\" -> ConfigFile.ConfigFileType.SECURITY;\n    case _ when DB_FILE.matcher(lowerCasePath).matches() -> ConfigFile.ConfigFileType.DATABASE;\n    case _ when TABLE_FILE.matcher(lowerCasePath).matches() -> ConfigFile.ConfigFileType.TABLE;\n    case _ when NAME_SPACE_FILE.matcher(lowerCasePath).matches() -> ConfigFile.ConfigFileType.NAMESPACE;\n    default -> ConfigFile.ConfigFileType.UNKNOWN;\n  };\n}"
    },
    "Old_Method": "public static ConfigFile.ConfigFileType toType(String path){\n  String lowerCasePath=path.toLowerCase(Locale.ROOT);\n  if (lowerCasePath.endsWith(\"db/variables.hjson\")) {\n    return ConfigFile.ConfigFileType.VARIABLE;\n  }\n else   if (lowerCasePath.endsWith(\"models/variables.hjson\")) {\n    return ConfigFile.ConfigFileType.VARIABLE;\n  }\n else   if (lowerCasePath.equals(\"models/security.hjson\")) {\n    return ConfigFile.ConfigFileType.SECURITY;\n  }\n else   if (DB_FILE.matcher(lowerCasePath).matches()) {\n    return ConfigFile.ConfigFileType.DATABASE;\n  }\n else   if (TABLE_FILE.matcher(lowerCasePath).matches()) {\n    return ConfigFile.ConfigFileType.TABLE;\n  }\n else   if (NAME_SPACE_FILE.matcher(lowerCasePath).matches()) {\n    return ConfigFile.ConfigFileType.NAMESPACE;\n  }\n else {\n    return ConfigFile.ConfigFileType.UNKNOWN;\n  }\n}\n",
    "File_Path": "elide/elide-model-config/src/main/java/com/yahoo/elide/modelconfig/io/FileLoader.java",
    "Start": 6753,
    "Stop": 7690,
    "Project_Name": "data/projects/elide",
    "Method_Name": "toType"
}