{
    "Method_Improvements": {
        "Improvements": [
            {
                "Improvement": "Use Optional to handle null checks",
                "Change_Diff": "- if (subSession.getDynamicAttributes() == null) {\n-   subSession.setDynamicAttributes(new HashMap<String,Object>());\n- }\n- if (subSession.getInitialAttributes() == null) {\n-   subSession.setInitialAttributes(new HashMap<String,Object>());\n- }\n+ Optional.ofNullable(subSession.getDynamicAttributes()).orElse(new HashMap<>());\n+ Optional.ofNullable(subSession.getInitialAttributes()).orElse(new HashMap<>());",
                "Description": "Instead of using null checks before setting dynamic and initial attributes, use Optional to handle the null case. This makes your code safer, reduces the chance of Null Pointer Exceptions, and makes your code cleaner and easier to read.",
                "Start": 5,
                "End": 8
            },
            {
                "Improvement": "Reduce code duplication for resetAttributes and resetSessionData method calls",
                "Change_Diff": "- sessionVariable.resetAttributes(subSession.getDynamicAttributes());\n- sessionVariable.resetSessionData(subSession,session);\n- metadataVariable.resetAttributes(subSession.getInitialAttributes());\n- parentMetadataVariable.resetAttributes(session.getInitialAttributes());\n- parentSessionVariable.resetAttributes(session.getDynamicAttributes());\n- parentSessionVariable.resetSessionData(session,session);\n+ resetSessionAndAttributes(sessionVariable, subSession.getDynamicAttributes(), subSession, session);\n+ resetSessionAndAttributes(metadataVariable, subSession.getInitialAttributes(), subSession, session);\n+ resetSessionAndAttributes(parentMetadataVariable, session.getInitialAttributes(), session, session);\n+ resetSessionAndAttributes(parentSessionVariable, session.getDynamicAttributes(), session, session);",
                "Description": "The resetAttributes and resetSessionData methods are called in the same way multiple times. Instead, create a private helper method to reduce code duplication and make the code cleaner and easier to maintain.",
                "Start": 9,
                "End": 14
            }
        ],
        "Final code": "public void process(SubSession subSession,Session session,JetstreamEvent event){\n  context.setCurrentSession(subSession);\n  context.setMainSession(session);\n  context.setEvent(event);\n  subSession.setDynamicAttributes(Optional.ofNullable(subSession.getDynamicAttributes()).orElse(new HashMap<>()));\n  subSession.setInitialAttributes(Optional.ofNullable(subSession.getInitialAttributes()).orElse(new HashMap<>()));\n  resetSessionAndAttributes(sessionVariable, subSession.getDynamicAttributes(), subSession, session);\n  resetSessionAndAttributes(metadataVariable, subSession.getInitialAttributes(), subSession, session);\n  resetSessionAndAttributes(parentMetadataVariable, session.getInitialAttributes(), session, session);\n  resetSessionAndAttributes(parentSessionVariable, session.getDynamicAttributes(), session, session);\n  processEPL(event);\n}\n\nprivate void resetSessionAndAttributes(SessionVariable variable, Map<String, Object> attributes, SubSession subSession, Session session) {\n  variable.resetAttributes(attributes);\n  variable.resetSessionData(subSession, session);\n}"
    },
    "Old_Method": "public void process(SubSession subSession,Session session,JetstreamEvent event){\n  context.setCurrentSession(subSession);\n  context.setMainSession(session);\n  context.setEvent(event);\n  if (subSession.getDynamicAttributes() == null) {\n    subSession.setDynamicAttributes(new HashMap<String,Object>());\n  }\n  if (subSession.getInitialAttributes() == null) {\n    subSession.setInitialAttributes(new HashMap<String,Object>());\n  }\n  sessionVariable.resetAttributes(subSession.getDynamicAttributes());\n  sessionVariable.resetSessionData(subSession,session);\n  metadataVariable.resetAttributes(subSession.getInitialAttributes());\n  parentMetadataVariable.resetAttributes(session.getInitialAttributes());\n  parentSessionVariable.resetAttributes(session.getDynamicAttributes());\n  parentSessionVariable.resetSessionData(session,session);\n  processEPL(event);\n}\n",
    "File_Path": "realtime-analytics/sessionizer/src/main/java/com/ebay/pulsar/sessionizer/esper/impl/EsperSessionizer.java",
    "Start": 24361,
    "Stop": 25325,
    "Project_Name": "data/projects/realtime-analytics",
    "Method_Name": "process"
}