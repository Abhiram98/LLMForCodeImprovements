{
    "Method_Improvements": {
        "Improvements": [
            {
                "Improvement": "Extract method for the code that checks and assigns the new config",
                "Change_Diff": "- if (newBean != lastConfig) {\n-      lastConfig=newBean;\n-      SessionizerConfigValidator validator=new SessionizerConfigValidator(config,newBean);\n-      List<String> errors=validator.validate();\n-      if (!errors.isEmpty()) {\n-        throw new IllegalArgumentException(\"Config error: \" + errors);\n-      }\n-      int readQueryTimeout=config.getReadQueryTimeout();\n-      boolean enableReadOptimization=config.getEnableReadOptimization();\n-      int maxIdleTime=config.getMaxIdleTime();\n-      List<SessionProfile> mainSessionProfiles=config.getMainSessionProfiles();\n-      EPL epl=config.getEpl();\n-      List<String> imports=config.getImports();\n-      EsperDeclaredEvents rawEventDefinition=config.getRawEventDefinition();\n-      config.setReadQueryTimeout(newBean.getReadQueryTimeout());\n-      config.setEnableReadOptimization(newBean.getEnableReadOptimization());\n-      config.setMaxIdleTime(newBean.getMaxIdleTime());\n-      config.setMainSessionProfiles(newBean.getMainSessionProfiles());\n-      config.setEpl(newBean.getEpl());\n-      config.setImports(newBean.getImports());\n-      config.setRawEventDefinition(newBean.getRawEventDefinition());\n-      boolean isSuccess=false;\n-      try {\n-        for (SessionizerRunnable task : tasks) {\n-          task.newCompiledConfig=new CompiledConfig(config,task);\n-        }\n-        isSuccess=true;\n-      } finally {\n-        if (!isSuccess) {\n-          for (SessionizerRunnable task : tasks) {\n-            if (task.newCompiledConfig != null) {\n-              task.newCompiledConfig.destroy();\n-              task.newCompiledConfig=null;\n-            }\n-          }\n-          config.setReadQueryTimeout(readQueryTimeout);\n-          config.setEnableReadOptimization(enableReadOptimization);\n-          config.setMaxIdleTime(maxIdleTime);\n-          config.setMainSessionProfiles(mainSessionProfiles);\n-          config.setEpl(epl);\n-          config.setImports(imports);\n-          config.setRawEventDefinition(rawEventDefinition);\n-        }\n-      }\n-      refreshConfig();\n-    }\n+ checkAndAssignNewConfig(newBean);",
                "Description": "The method `processApplicationEvent` is long and hard to follow. Extracting the code that checks the new config and assigns it to a new method would make the code more maintainable and readable.",
                "Start": 5,
                "End": 40
            },
            {
                "Improvement": "Add null check for `newBean` before using it",
                "Change_Diff": "- SessionizerConfig newBean=(SessionizerConfig)(bcInfo.getApplicationContext().getBean(config.getBeanName()));\n+ SessionizerConfig newBean=(SessionizerConfig)(bcInfo.getApplicationContext().getBean(config.getBeanName()));\n+ if (newBean == null) {\n+     throw new IllegalArgumentException(\"NewBean cannot be null.\");\n+ }",
                "Description": "The `newBean` could be null, and if it is null, a NullPointerException will be thrown. Therefore, check if `newBean` is null before using it.",
                "Start": 4,
                "End": 4
            }
        ],
        "Final code": "@Override protected void processApplicationEvent(ApplicationEvent event){\n  if (event instanceof ContextBeanChangedEvent) {\n    ContextBeanChangedEvent bcInfo=(ContextBeanChangedEvent)event;\n    SessionizerConfig newBean=(SessionizerConfig)(bcInfo.getApplicationContext().getBean(config.getBeanName()));\n    if (newBean == null) {\n      throw new IllegalArgumentException(\"NewBean cannot be null.\");\n    }\n    checkAndAssignNewConfig(newBean);\n  }\n}\n\nprivate void checkAndAssignNewConfig(SessionizerConfig newBean) {\n  if (newBean != lastConfig) {\n    lastConfig=newBean;\n    SessionizerConfigValidator validator=new SessionizerConfigValidator(config,newBean);\n    List<String> errors=validator.validate();\n    if (!errors.isEmpty()) {\n      throw new IllegalArgumentException(\"Config error: \" + errors);\n    }\n    int readQueryTimeout=config.getReadQueryTimeout();\n    boolean enableReadOptimization=config.getEnableReadOptimization();\n    int maxIdleTime=config.getMaxIdleTime();\n    List<SessionProfile> mainSessionProfiles=config.getMainSessionProfiles();\n    EPL epl=config.getEpl();\n    List<String> imports=config.getImports();\n    EsperDeclaredEvents rawEventDefinition=config.getRawEventDefinition();\n    config.setReadQueryTimeout(newBean.getReadQueryTimeout());\n    config.setEnableReadOptimization(newBean.getEnableReadOptimization());\n    config.setMaxIdleTime(newBean.getMaxIdleTime());\n    config.setMainSessionProfiles(newBean.getMainSessionProfiles());\n    config.setEpl(newBean.getEpl());\n    config.setImports(newBean.getImports());\n    config.setRawEventDefinition(newBean.getRawEventDefinition());\n    boolean isSuccess=false;\n    try {\n      for (SessionizerRunnable task : tasks) {\n        task.newCompiledConfig=new CompiledConfig(config,task);\n      }\n      isSuccess=true;\n    } finally {\n      if (!isSuccess) {\n        for (SessionizerRunnable task : tasks) {\n          if (task.newCompiledConfig != null) {\n            task.newCompiledConfig.destroy();\n            task.newCompiledConfig=null;\n          }\n        }\n        config.setReadQueryTimeout(readQueryTimeout);\n        config.setEnableReadOptimization(enableReadOptimization);\n        config.setMaxIdleTime(maxIdleTime);\n        config.setMainSessionProfiles(mainSessionProfiles);\n        config.setEpl(epl);\n        config.setImports(imports);\n        config.setRawEventDefinition(rawEventDefinition);\n      }\n    }\n    refreshConfig();\n  }\n}"
    },
    "Old_Method": "@Override protected void processApplicationEvent(ApplicationEvent event){\n  if (event instanceof ContextBeanChangedEvent) {\n    ContextBeanChangedEvent bcInfo=(ContextBeanChangedEvent)event;\n    SessionizerConfig newBean=(SessionizerConfig)(bcInfo.getApplicationContext().getBean(config.getBeanName()));\n    if (newBean != lastConfig) {\n      lastConfig=newBean;\n      SessionizerConfigValidator validator=new SessionizerConfigValidator(config,newBean);\n      List<String> errors=validator.validate();\n      if (!errors.isEmpty()) {\n        throw new IllegalArgumentException(\"Config error: \" + errors);\n      }\n      int readQueryTimeout=config.getReadQueryTimeout();\n      boolean enableReadOptimization=config.getEnableReadOptimization();\n      int maxIdleTime=config.getMaxIdleTime();\n      List<SessionProfile> mainSessionProfiles=config.getMainSessionProfiles();\n      EPL epl=config.getEpl();\n      List<String> imports=config.getImports();\n      EsperDeclaredEvents rawEventDefinition=config.getRawEventDefinition();\n      config.setReadQueryTimeout(newBean.getReadQueryTimeout());\n      config.setEnableReadOptimization(newBean.getEnableReadOptimization());\n      config.setMaxIdleTime(newBean.getMaxIdleTime());\n      config.setMainSessionProfiles(newBean.getMainSessionProfiles());\n      config.setEpl(newBean.getEpl());\n      config.setImports(newBean.getImports());\n      config.setRawEventDefinition(newBean.getRawEventDefinition());\n      boolean isSuccess=false;\n      try {\n        for (        SessionizerRunnable task : tasks) {\n          task.newCompiledConfig=new CompiledConfig(config,task);\n        }\n        isSuccess=true;\n      }\n  finally {\n        if (!isSuccess) {\n          for (          SessionizerRunnable task : tasks) {\n            if (task.newCompiledConfig != null) {\n              task.newCompiledConfig.destroy();\n              task.newCompiledConfig=null;\n            }\n          }\n          config.setReadQueryTimeout(readQueryTimeout);\n          config.setEnableReadOptimization(enableReadOptimization);\n          config.setMaxIdleTime(maxIdleTime);\n          config.setMainSessionProfiles(mainSessionProfiles);\n          config.setEpl(epl);\n          config.setImports(imports);\n          config.setRawEventDefinition(rawEventDefinition);\n        }\n      }\n      refreshConfig();\n    }\n  }\n}\n",
    "File_Path": "realtime-analytics/sessionizer/src/main/java/com/ebay/pulsar/sessionizer/impl/SessionizerProcessor.java",
    "Start": 70925,
    "Stop": 73856,
    "Project_Name": "data/projects/realtime-analytics",
    "Method_Name": "processApplicationEvent"
}