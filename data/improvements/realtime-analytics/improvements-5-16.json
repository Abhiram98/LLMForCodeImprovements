{
    "Method_Improvements": {
        "Improvements": [{
            "Improvement": "Use String format to simplify string construction",
            "Change_Diff": "- builder.append(\"MemoryManager-\");\n- builder.append(entry.getKey());\n- builder.append(\":\");\n- OffHeapMemoryManager manager=entry.getValue();\n- if (manager != null) {\n-   builder.append(\"[\");\n-   builder.append(\"FreeMemory:\");\n-   builder.append(manager.getFreeMemory());\n-   builder.append(\";\");\n-   builder.append(\"MaxMemory:\");\n-   builder.append(manager.getMaxMemory());\n-   builder.append(\";\");\n-   builder.append(\"ReservedMemory:\");\n-   builder.append(manager.getReservedMemory());\n-   builder.append(\";\");\n-   builder.append(\"UsedMemory:\");\n-   builder.append(manager.getUsedMemory());\n-   builder.append(\";\");\n-   builder.append(\"OutOfMeomoryErrorCount:\");\n-   builder.append(manager.getOOMErrorCount());\n-   builder.append(\"]\");\n+ String infoString = String.format(\"MemoryManager-%s:[FreeMemory:%s;MaxMemory:%s;ReservedMemory:%s;UsedMemory:%s;OutOfMeomoryErrorCount:%s]\", entry.getKey(), manager.getFreeMemory(), manager.getMaxMemory(), manager.getReservedMemory(), manager.getUsedMemory(), manager.getOOMErrorCount());\n+ builder.append(infoString);",
            "Description": "Instead of using StringBuilder and multiple append methods to build the string, use String.format to format the string. This makes the code cleaner and easier to read.",
            "Start": 4,
            "End": 24
        }],
        "Final code": "public String getInternalOffHeapManagerInfo(){\n  StringBuilder builder=new StringBuilder();\n  builder.append(\"InternalOffHeapManagerInfo:\");\n  Map<String,OffHeapMemoryManager> memoryManagers=OffHeapMemoryManagerRegistry.getInstance().getMemoryManagers();\n  for (  Map.Entry<String,OffHeapMemoryManager> entry : memoryManagers.entrySet()) {\n    OffHeapMemoryManager manager=entry.getValue();\n    if (manager != null) {\n      String infoString = String.format(\"MemoryManager-%s:[FreeMemory:%s;MaxMemory:%s;ReservedMemory:%s;UsedMemory:%s;OutOfMeomoryErrorCount:%s]\", entry.getKey(), manager.getFreeMemory(), manager.getMaxMemory(), manager.getReservedMemory(), manager.getUsedMemory(), manager.getOOMErrorCount());\n      builder.append(infoString);\n    }\n  }\n  return builder.toString();\n}"
    },
    "Old_Method": "public String getInternalOffHeapManagerInfo(){\n  StringBuilder builder=new StringBuilder();\n  builder.append(\"InternalOffHeapManagerInfo:\");\n  Map<String,OffHeapMemoryManager> memoryManagers=OffHeapMemoryManagerRegistry.getInstance().getMemoryManagers();\n  for (  Map.Entry<String,OffHeapMemoryManager> entry : memoryManagers.entrySet()) {\n    builder.append(\"MemoryManager-\");\n    builder.append(entry.getKey());\n    builder.append(\":\");\n    OffHeapMemoryManager manager=entry.getValue();\n    if (manager != null) {\n      builder.append(\"[\");\n      builder.append(\"FreeMemory:\");\n      builder.append(manager.getFreeMemory());\n      builder.append(\";\");\n      builder.append(\"MaxMemory:\");\n      builder.append(manager.getMaxMemory());\n      builder.append(\";\");\n      builder.append(\"ReservedMemory:\");\n      builder.append(manager.getReservedMemory());\n      builder.append(\";\");\n      builder.append(\"UsedMemory:\");\n      builder.append(manager.getUsedMemory());\n      builder.append(\";\");\n      builder.append(\"OutOfMeomoryErrorCount:\");\n      builder.append(manager.getOOMErrorCount());\n      builder.append(\"]\");\n    }\n  }\n  return builder.toString();\n}\n",
    "File_Path": "realtime-analytics/metriccalculator/src/main/java/com/ebay/pulsar/metriccalculator/processor/MCSummingProcessor.java",
    "Start": 27123,
    "Stop": 28572,
    "Project_Name": "data/projects/realtime-analytics",
    "Method_Name": "getInternalOffHeapManagerInfo"
}