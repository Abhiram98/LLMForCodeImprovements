{
    "Method_Improvements": {
        "Improvements": [
            {
                "Improvement": "Extract redundant code to a separate method",
                "Change_Diff": "- subSession.setCreationTime(currentTime);\n- subSession.setEventCount(1);\n- if (info.getTtl() > 0) {\n-   subSession.setTtl(Math.min(info.getTtl(),maxSessionIdleTime));\n- }\n- else {\n-   subSession.setTtl(Math.min(profile.getDefaultTtl(),maxSessionIdleTime));\n- }\n- if (subSession.getTtl() > session.getTtl()) {\n-   subSession.setTtl(session.getTtl());\n- }\n- subSession.setFirstEventTimestamp(eventTimestamp);\n- subSession.setLastModifiedTime(currentTime);\n- subSession.setExpirationTime(currentTime + subSession.getTtl());\n- subSession.setSessionId(concatTimestamp(session.getIdentifier(),subSessionIdenfifier,subSession.getFirstEventTimestamp()));\n+ initializeSubSession(subSession, currentTime, info, profile, eventTimestamp);",
                "Description": "There is a block of code that initializes a SubSession object that is repeated twice, once when the subSession is null and once when the subSession's expiration time is less than the session's last modified time. This code can be extracted to a separate method to reduce redundancy.",
                "Start": 8,
                "End": 30
            },
            {
                "Improvement": "Extract redundant checks to a separate method",
                "Change_Diff": "- if (info.getTtl() > 0) {\n-   subSession.setTtl(Math.min(info.getTtl(),maxSessionIdleTime));\n- }\n- else {\n-   subSession.setTtl(Math.min(profile.getDefaultTtl(),maxSessionIdleTime));\n- }\n- if (subSession.getTtl() > session.getTtl()) {\n-   subSession.setTtl(session.getTtl());\n- }\n+ setTTL(subSession, info, profile, session);",
                "Description": "There are repeated checks for whether the TTL of the subSession is above 0 or not. This can be extracted to a separate method to reduce redundancy and enhance readability.",
                "Start": 11,
                "End": 18
            }
        ],
        "Final code": "private void processSubSession(JetstreamEvent event,Session session,String mainIdentifier,SessionizationInfo info,SubSessionProfile profile,long eventTimestamp){\n  String subSessionIdenfifier=info.getIdentifier();\n  SubSession subSession=session.getSubSession(subSessionIdenfifier,profile.getName());\n  long currentTime=session.getLastModifiedTime();\n  if (subSession == null || subSession.getExpirationTime() < session.getLastModifiedTime()) {\n    subSession = initializeSubSession(subSession, currentTime, info, profile, eventTimestamp);\n  }\n  else {\n    //remaining code...\n  }\n}\n\nprivate SubSession initializeSubSession(SubSession subSession, long currentTime, SessionizationInfo info, SubSessionProfile profile, long eventTimestamp) {\n  if (subSession == null) subSession = new SubSession();\n  subSession.setCreationTime(currentTime);\n  subSession.setEventCount(1);\n  setTTL(subSession, info, profile, session);\n  subSession.setFirstEventTimestamp(eventTimestamp);\n  subSession.setLastModifiedTime(currentTime);\n  subSession.setExpirationTime(currentTime + subSession.getTtl());\n  subSession.setSessionId(concatTimestamp(session.getIdentifier(),subSessionIdenfifier,subSession.getFirstEventTimestamp()));\n  return subSession;\n}\n\nprivate void setTTL(SubSession subSession, SessionizationInfo info, SubSessionProfile profile, Session session) {\n  if (info.getTtl() > 0) {\n    subSession.setTtl(Math.min(info.getTtl(),maxSessionIdleTime));\n  }\n  else {\n    subSession.setTtl(Math.min(profile.getDefaultTtl(),maxSessionIdleTime));\n  }\n  if (subSession.getTtl() > session.getTtl()) {\n    subSession.setTtl(session.getTtl());\n  }\n}"
    },
    "Old_Method": "private void processSubSession(JetstreamEvent event,Session session,String mainIdentifier,SessionizationInfo info,SubSessionProfile profile,long eventTimestamp){\n  String subSessionIdenfifier=info.getIdentifier();\n  SubSession subSession=session.getSubSession(subSessionIdenfifier,profile.getName());\n  long currentTime=session.getLastModifiedTime();\n  if (subSession == null) {\n    subSession=new SubSession();\n    subSession.setIdentifier(subSessionIdenfifier);\n    subSession.setName(profile.getName());\n    subSession.setCreationTime(currentTime);\n    subSession.setEventCount(1);\n    if (info.getTtl() > 0) {\n      subSession.setTtl(Math.min(info.getTtl(),maxSessionIdleTime));\n    }\n else {\n      subSession.setTtl(Math.min(profile.getDefaultTtl(),maxSessionIdleTime));\n    }\n    if (subSession.getTtl() > session.getTtl()) {\n      subSession.setTtl(session.getTtl());\n    }\n    subSession.setFirstEventTimestamp(eventTimestamp);\n    subSession.setLastModifiedTime(currentTime);\n    subSession.setExpirationTime(currentTime + subSession.getTtl());\n    subSession.setSessionId(concatTimestamp(session.getIdentifier(),subSessionIdenfifier,subSession.getFirstEventTimestamp()));\n    session.addSubSession(subSession);\n  }\n else   if (subSession.getExpirationTime() < session.getLastModifiedTime()) {\n    subSessionEnd(mainIdentifier,session,subSession);\n    subSession.setCreationTime(currentTime);\n    subSession.setEventCount(1);\n    if (info.getTtl() > 0) {\n      subSession.setTtl(Math.min(info.getTtl(),maxSessionIdleTime));\n    }\n else {\n      subSession.setTtl(Math.min(profile.getDefaultTtl(),maxSessionIdleTime));\n    }\n    if (subSession.getTtl() > session.getTtl()) {\n      subSession.setTtl(session.getTtl());\n    }\n    subSession.setFirstEventTimestamp(eventTimestamp);\n    subSession.setLastModifiedTime(currentTime);\n    subSession.setExpirationTime(currentTime + subSession.getTtl());\n    subSession.setSessionId(concatTimestamp(session.getIdentifier(),subSessionIdenfifier,subSession.getFirstEventTimestamp()));\n    if (subSession.getInitialAttributes() != null) {\n      subSession.getInitialAttributes().clear();\n    }\n    if (subSession.getDynamicAttributes() != null) {\n      subSession.getDynamicAttributes().clear();\n    }\n  }\n else {\n    subSession.setSessionId(concatTimestamp(session.getIdentifier(),subSessionIdenfifier,subSession.getFirstEventTimestamp()));\n    if (subSession.getEventCount() < Integer.MAX_VALUE) {\n      subSession.setEventCount(subSession.getEventCount() + 1);\n    }\n    subSession.setExpirationTime(currentTime + subSession.getTtl());\n    subSession.setLastModifiedTime(currentTime);\n  }\n  if (session.getExpirationTime() < subSession.getExpirationTime()) {\n    session.setExpirationTime(subSession.getExpirationTime());\n  }\n  EsperSessionizer subEsperSessionizer=subEsperSessionizerMap.get(profile.getName());\n  if (subEsperSessionizer != null && subEsperSessionizer.isEventSupported(event)) {\n    subEsperSessionizer.process(subSession,session,event);\n  }\n  if (subSession.getEventCount() == 1 && profile.getBeginMarker() != null) {\n    JetstreamEvent sessionBeginEvent=new JetstreamEvent();\n    sessionBeginEvent.setEventType(profile.getBeginMarker());\n    Map<String,Object> initialAttributes=subSession.getInitialAttributes();\n    if (initialAttributes != null) {\n      sessionBeginEvent.putAll(initialAttributes);\n    }\n    if (profile.getSessionIdKey() != null) {\n      sessionBeginEvent.put(profile.getSessionIdKey(),subSession.getSessionId());\n    }\n    if (mainSessionProfile.getSessionStartTimestampKey() != null) {\n      sessionBeginEvent.put(mainSessionProfile.getSessionStartTimestampKey(),subSession.getCreationTime());\n    }\n    if (subEsperSessionizer != null && subEsperSessionizer.isEventSupported(sessionBeginEvent)) {\n      subEsperSessionizer.process(subSession,session,sessionBeginEvent);\n    }\n    eventSender.sendSubSessionBeginEvent(mainSessionProfile.getSessionType(),subSession,sessionBeginEvent);\n  }\n}\n",
    "File_Path": "realtime-analytics/sessionizer/src/main/java/com/ebay/pulsar/sessionizer/impl/Sessionizer.java",
    "Start": 7838,
    "Stop": 12484,
    "Project_Name": "data/projects/realtime-analytics",
    "Method_Name": "processSubSession"
}