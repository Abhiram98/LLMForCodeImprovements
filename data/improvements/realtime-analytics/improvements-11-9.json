{
    "Method_Improvements": {
        "Improvements": [
            {
                "Improvement": "Use a private method to avoid code duplication",
                "Change_Diff": "- if (subSession.getDynamicAttributes() == null) {\n-   subSession.setDynamicAttributes(new HashMap<String,Object>());\n- }\n- if (subSession.getInitialAttributes() == null) {\n-   subSession.setInitialAttributes(new HashMap<String,Object>());\n- }\n+ initializeMapIfNull(subSession.getDynamicAttributes());\n+ initializeMapIfNull(subSession.getInitialAttributes());",
                "Description": "The checks and initializations for 'dynamicAttributes' and 'initialAttributes' of 'subSession' are repeated twice. This can be avoided by creating a private method that accepts a Map as a parameter and initializes it if it's null.",
                "Start": 5,
                "End": 8
            },
            {
                "Improvement": "Use method references for function calls",
                "Change_Diff": "- sessionVariable.resetAttributes(subSession.getDynamicAttributes());\n- metadataVariable.resetAttributes(subSession.getInitialAttributes());\n- parentMetadataVariable.resetAttributes(session.getInitialAttributes());\n- parentSessionVariable.resetAttributes(session.getDynamicAttributes());\n+ sessionVariable.resetAttributes(::subSession.getDynamicAttributes);\n+ metadataVariable.resetAttributes(::subSession.getInitialAttributes);\n+ parentMetadataVariable.resetAttributes(::session.getInitialAttributes);\n+ parentSessionVariable.resetAttributes(::session.getDynamicAttributes);",
                "Description": "When calling methods such as 'resetAttributes' with a single parameter, method references can make the code more readable.",
                "Start": 10,
                "End": 14
            }
        ],
        "Final code": "public void process(SubSession subSession, Session session, JetstreamEvent event) {\n    context.setCurrentSession(subSession);\n    context.setMainSession(session);\n    context.setEvent(event);\n    initializeMapIfNull(subSession.getDynamicAttributes());\n    initializeMapIfNull(subSession.getInitialAttributes());\n    sessionVariable.resetAttributes(::subSession.getDynamicAttributes);\n    sessionVariable.resetSessionData(subSession, session);\n    metadataVariable.resetAttributes(::subSession.getInitialAttributes);\n    parentMetadataVariable.resetAttributes(::session.getInitialAttributes);\n    parentSessionVariable.resetAttributes(::session.getDynamicAttributes);\n    parentSessionVariable.resetSessionData(session, session);\n    processEPL(event);\n}\n\nprivate void initializeMapIfNull(Map<String, Object> map) {\n    if (map == null) {\n        map = new HashMap<>();\n    }\n}"
    },
    "Old_Method": "public void process(SubSession subSession,Session session,JetstreamEvent event){\n  context.setCurrentSession(subSession);\n  context.setMainSession(session);\n  context.setEvent(event);\n  if (subSession.getDynamicAttributes() == null) {\n    subSession.setDynamicAttributes(new HashMap<String,Object>());\n  }\n  if (subSession.getInitialAttributes() == null) {\n    subSession.setInitialAttributes(new HashMap<String,Object>());\n  }\n  sessionVariable.resetAttributes(subSession.getDynamicAttributes());\n  sessionVariable.resetSessionData(subSession,session);\n  metadataVariable.resetAttributes(subSession.getInitialAttributes());\n  parentMetadataVariable.resetAttributes(session.getInitialAttributes());\n  parentSessionVariable.resetAttributes(session.getDynamicAttributes());\n  parentSessionVariable.resetSessionData(session,session);\n  processEPL(event);\n}\n",
    "File_Path": "realtime-analytics/sessionizer/src/main/java/com/ebay/pulsar/sessionizer/esper/impl/EsperSessionizer.java",
    "Start": 24361,
    "Stop": 25325,
    "Project_Name": "data/projects/realtime-analytics",
    "Method_Name": "process"
}