{
    "Method_Improvements": [{
        "Improvements": [
            {
                "Improvement": "Extract common code into a separate method",
                "Change_Diff": "- subSession.setCreationTime(currentTime);\n- subSession.setEventCount(1);\n- if (info.getTtl() > 0) {\n- subSession.setTtl(Math.min(info.getTtl(),maxSessionIdleTime));\n- }\n- else {\n- subSession.setTtl(Math.min(profile.getDefaultTtl(),maxSessionIdleTime));\n- }\n- if (subSession.getTtl() > session.getTtl()) {\n- subSession.setTtl(session.getTtl());\n- }\n- subSession.setFirstEventTimestamp(eventTimestamp);\n- subSession.setLastModifiedTime(currentTime);\n- subSession.setExpirationTime(currentTime + subSession.getTtl());\n- subSession.setSessionId(concatTimestamp(session.getIdentifier(),subSessionIdenfifier,subSession.getFirstEventTimestamp()));\n+ initializeSubSession(subSession, info, currentTime, profile, maxSessionIdleTime, eventTimestamp, session);\n",
                "Description": "Extract the common code for initializing a sub-session into a separate method called 'initializeSubSession'. This improves code readability and reduces duplication.",
                "Start": 10,
                "End": 26
            },
            {
                "Improvement": "Use isEmpty() method to check for null or empty collections",
                "Change_Diff": "- if (subSession.getInitialAttributes() != null) {\n- subSession.getInitialAttributes().clear();\n- }\n- if (subSession.getDynamicAttributes() != null) {\n- subSession.getDynamicAttributes().clear();\n- }\n+ if (!subSession.getInitialAttributes().isEmpty()) {\n+ subSession.getInitialAttributes().clear();\n+ }\n+ if (!subSession.getDynamicAttributes().isEmpty()) {\n+ subSession.getDynamicAttributes().clear();\n+ }\n",
                "Description": "Instead of checking for null values and then calling the clear() method on collections, use the isEmpty() method to check if the collections are empty. This results in more concise and readable code.",
                "Start": 33,
                "End": 36
            },
            {
                "Improvement": "Use 'Objects.requireNonNull' to check for null values",
                "Change_Diff": "- if (subEsperSessionizer != null && subEsperSessionizer.isEventSupported(event)) {\n+ if (Objects.requireNonNull(subEsperSessionizer).isEventSupported(event)) {\n",
                "Description": "To ensure that 'subEsperSessionizer' is not null before using it, use 'Objects.requireNonNull' method. This provides a clearer and more explicit check for null values.",
                "Start": 43,
                "End": 43
            },
            {
                "Improvement": "Refactor if statement into separate method",
                "Change_Diff": "- if (profile.getSessionIdKey() != null) {\n- sessionBeginEvent.put(profile.getSessionIdKey(),subSession.getSessionId());\n- }\n- if (mainSessionProfile.getSessionStartTimestampKey() != null) {\n- sessionBeginEvent.put(mainSessionProfile.getSessionStartTimestampKey(),subSession.getCreationTime());\n- }\n+ setSessionIdKey(subSession, sessionBeginEvent, profile);\n+ setSessionStartTimestampKey(subSession, sessionBeginEvent, mainSessionProfile);\n",
                "Description": "Refactor the if statement that sets the session ID key and session start timestamp key into separate methods. This improves code modularity and readability.",
                "Start": 66,
                "End": 69
            }
        ],
        "Final code": "private void processSubSession(JetstreamEvent event, Session session, String mainIdentifier, SessionizationInfo info, SubSessionProfile profile, long eventTimestamp) {\n    String subSessionIdentifier = info.getIdentifier();\n    SubSession subSession = session.getSubSession(subSessionIdentifier, profile.getName());\n    long currentTime = session.getLastModifiedTime();\n\n    if (subSession == null) {\n        subSession = new SubSession();\n        subSession.setIdentifier(subSessionIdentifier);\n        subSession.setName(profile.getName());\n        initializeSubSession(subSession, info, currentTime, profile, maxSessionIdleTime, eventTimestamp, session);\n        subSession.setSessionId(concatTimestamp(session.getIdentifier(), subSessionIdentifier, subSession.getFirstEventTimestamp()));\n        session.addSubSession(subSession);\n    } else if (subSession.getExpirationTime() < session.getLastModifiedTime()) {\n        subSessionEnd(mainIdentifier, session, subSession);\n        initializeSubSession(subSession, info, currentTime, profile, maxSessionIdleTime, eventTimestamp, session);\n        if (!subSession.getInitialAttributes().isEmpty()) {\n            subSession.getInitialAttributes().clear();\n        }\n        if (!subSession.getDynamicAttributes().isEmpty()) {\n            subSession.getDynamicAttributes().clear();\n        }\n    } else {\n        subSession.setSessionId(concatTimestamp(session.getIdentifier(), subSessionIdentifier, subSession.getFirstEventTimestamp()));\n        if (subSession.getEventCount() < Integer.MAX_VALUE) {\n            subSession.setEventCount(subSession.getEventCount() + 1);\n        }\n        subSession.setExpirationTime(currentTime + subSession.getTtl());\n        subSession.setLastModifiedTime(currentTime);\n    }\n\n    if (session.getExpirationTime() < subSession.getExpirationTime()) {\n        session.setExpirationTime(subSession.getExpirationTime());\n    }\n\n    EsperSessionizer subEsperSessionizer = Objects.requireNonNull(subEsperSessionizerMap.get(profile.getName()));\n    if (subEsperSessionizer.isEventSupported(event)) {\n        subEsperSessionizer.process(subSession, session, event);\n    }\n\n    if (subSession.getEventCount() == 1 && profile.getBeginMarker() != null) {\n        JetstreamEvent sessionBeginEvent = new JetstreamEvent();\n        sessionBeginEvent.setEventType(profile.getBeginMarker());\n        setSessionIdKey(subSession, sessionBeginEvent, profile);\n        setSessionStartTimestampKey(subSession, sessionBeginEvent, mainSessionProfile);\n        if (subEsperSessionizer.isEventSupported(sessionBeginEvent)) {\n            subEsperSessionizer.process(subSession, session, sessionBeginEvent);\n        }\n        eventSender.sendSubSessionBeginEvent(mainSessionProfile.getSessionType(), subSession, sessionBeginEvent);\n    }\n}\n\nprivate void initializeSubSession(SubSession subSession, SessionizationInfo info, long currentTime, SubSessionProfile profile, int maxSessionIdleTime, long eventTimestamp, Session session) {\n    subSession.setCreationTime(currentTime);\n    subSession.setEventCount(1);\n    if (info.getTtl() > 0) {\n        subSession.setTtl(Math.min(info.getTtl(), maxSessionIdleTime));\n    } else {\n        subSession.setTtl(Math.min(profile.getDefaultTtl(), maxSessionIdleTime));\n    }\n    if (subSession.getTtl() > session.getTtl()) {\n        subSession.setTtl(session.getTtl());\n    }\n    subSession.setFirstEventTimestamp(eventTimestamp);\n    subSession.setLastModifiedTime(currentTime);\n    subSession.setExpirationTime(currentTime + subSession.getTtl());\n}\n\nprivate void setSessionIdKey(SubSession subSession, JetstreamEvent sessionBeginEvent, SubSessionProfile profile) {\n    if (profile.getSessionIdKey() != null) {\n        sessionBeginEvent.put(profile.getSessionIdKey(), subSession.getSessionId());\n    }\n}\n\nprivate void setSessionStartTimestampKey(SubSession subSession, JetstreamEvent sessionBeginEvent, MainSessionProfile mainSessionProfile) {\n    if (mainSessionProfile.getSessionStartTimestampKey() != null) {\n        sessionBeginEvent.put(mainSessionProfile.getSessionStartTimestampKey(), subSession.getCreationTime());\n    }\n}"
    }],
    "Old_Method": "private void processSubSession(JetstreamEvent event,Session session,String mainIdentifier,SessionizationInfo info,SubSessionProfile profile,long eventTimestamp){\n  String subSessionIdenfifier=info.getIdentifier();\n  SubSession subSession=session.getSubSession(subSessionIdenfifier,profile.getName());\n  long currentTime=session.getLastModifiedTime();\n  if (subSession == null) {\n    subSession=new SubSession();\n    subSession.setIdentifier(subSessionIdenfifier);\n    subSession.setName(profile.getName());\n    subSession.setCreationTime(currentTime);\n    subSession.setEventCount(1);\n    if (info.getTtl() > 0) {\n      subSession.setTtl(Math.min(info.getTtl(),maxSessionIdleTime));\n    }\n else {\n      subSession.setTtl(Math.min(profile.getDefaultTtl(),maxSessionIdleTime));\n    }\n    if (subSession.getTtl() > session.getTtl()) {\n      subSession.setTtl(session.getTtl());\n    }\n    subSession.setFirstEventTimestamp(eventTimestamp);\n    subSession.setLastModifiedTime(currentTime);\n    subSession.setExpirationTime(currentTime + subSession.getTtl());\n    subSession.setSessionId(concatTimestamp(session.getIdentifier(),subSessionIdenfifier,subSession.getFirstEventTimestamp()));\n    session.addSubSession(subSession);\n  }\n else   if (subSession.getExpirationTime() < session.getLastModifiedTime()) {\n    subSessionEnd(mainIdentifier,session,subSession);\n    subSession.setCreationTime(currentTime);\n    subSession.setEventCount(1);\n    if (info.getTtl() > 0) {\n      subSession.setTtl(Math.min(info.getTtl(),maxSessionIdleTime));\n    }\n else {\n      subSession.setTtl(Math.min(profile.getDefaultTtl(),maxSessionIdleTime));\n    }\n    if (subSession.getTtl() > session.getTtl()) {\n      subSession.setTtl(session.getTtl());\n    }\n    subSession.setFirstEventTimestamp(eventTimestamp);\n    subSession.setLastModifiedTime(currentTime);\n    subSession.setExpirationTime(currentTime + subSession.getTtl());\n    subSession.setSessionId(concatTimestamp(session.getIdentifier(),subSessionIdenfifier,subSession.getFirstEventTimestamp()));\n    if (subSession.getInitialAttributes() != null) {\n      subSession.getInitialAttributes().clear();\n    }\n    if (subSession.getDynamicAttributes() != null) {\n      subSession.getDynamicAttributes().clear();\n    }\n  }\n else {\n    subSession.setSessionId(concatTimestamp(session.getIdentifier(),subSessionIdenfifier,subSession.getFirstEventTimestamp()));\n    if (subSession.getEventCount() < Integer.MAX_VALUE) {\n      subSession.setEventCount(subSession.getEventCount() + 1);\n    }\n    subSession.setExpirationTime(currentTime + subSession.getTtl());\n    subSession.setLastModifiedTime(currentTime);\n  }\n  if (session.getExpirationTime() < subSession.getExpirationTime()) {\n    session.setExpirationTime(subSession.getExpirationTime());\n  }\n  EsperSessionizer subEsperSessionizer=subEsperSessionizerMap.get(profile.getName());\n  if (subEsperSessionizer != null && subEsperSessionizer.isEventSupported(event)) {\n    subEsperSessionizer.process(subSession,session,event);\n  }\n  if (subSession.getEventCount() == 1 && profile.getBeginMarker() != null) {\n    JetstreamEvent sessionBeginEvent=new JetstreamEvent();\n    sessionBeginEvent.setEventType(profile.getBeginMarker());\n    Map<String,Object> initialAttributes=subSession.getInitialAttributes();\n    if (initialAttributes != null) {\n      sessionBeginEvent.putAll(initialAttributes);\n    }\n    if (profile.getSessionIdKey() != null) {\n      sessionBeginEvent.put(profile.getSessionIdKey(),subSession.getSessionId());\n    }\n    if (mainSessionProfile.getSessionStartTimestampKey() != null) {\n      sessionBeginEvent.put(mainSessionProfile.getSessionStartTimestampKey(),subSession.getCreationTime());\n    }\n    if (subEsperSessionizer != null && subEsperSessionizer.isEventSupported(sessionBeginEvent)) {\n      subEsperSessionizer.process(subSession,session,sessionBeginEvent);\n    }\n    eventSender.sendSubSessionBeginEvent(mainSessionProfile.getSessionType(),subSession,sessionBeginEvent);\n  }\n}\n",
    "File_Path": "realtime-analytics/sessionizer/src/main/java/com/ebay/pulsar/sessionizer/impl/Sessionizer.java",
    "Start": 7838,
    "Stop": 12484,
    "Project_Name": "data/projects/realtime-analytics",
    "Method_Name": "processSubSession"
}