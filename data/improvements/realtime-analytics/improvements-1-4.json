{
    "Method_Improvements": {
        "Improvements": [
            {
                "Improvement": "Reduce Nesting",
                "Change_Diff": "- if (counters == null) {\n-     synchronized (this) {...}\n+ if (counters == null) getAndPutCounter(metricName, conf);",
                "Description": "The method has a lot of nested if-else blocks, which make it hard to read. You can reduce this by returning early or breaking up the method into smaller methods.",
                "Start": 3,
                "End": 58
            },
            {
                "Improvement": "Avoid Synchronization on Non-Final Field",
                "Change_Diff": "- synchronized (this) {...\n+ synchronized (lock) {...",
                "Description": "Synchronizing on non-final field can lead to bugs if the field is ever updated. You should either make the field final or use a dedicated final object for synchronization.",
                "Start": 12,
                "End": 20
            },
            {
                "Improvement": "Replace if-else with Polymorphism",
                "Change_Diff": "- if (isAvg) {...\n+ counter = CounterFactory.getCounter(isAvg);",
                "Description": "You can replace the if-else block with polymorphism for creation of Counter and AvgCounter. This will make the code more extensible, as new types of counters can be added without modifying this method.",
                "Start": 45,
                "End": 56
            }
        ],
        "Final code": "private Counter getCounterByMetricDemensionAndInc(String metricName,String groupId,Map<String,String> tags,boolean isAvg,Long count,Long total){\n  Map<MCMetricGroupDemension,Counter> counters=groupbyWithTagsMetricMap.get(metricName);\n  OffHeapCacheConfig conf=getConfiguration().getOffheapMetricConf() != null ? getConfiguration().getOffheapMetricConf().get(metricName) : null;\n  if (counters == null) getAndPutCounter(metricName, conf);\n  MCMetricGroupDemension groupDemension=getGroupDemension(tags, metricName, groupId);\n  Counter counter=getCounter(counters, groupDemension, isAvg);\n  if(tags != null && tags.containsKey(MCConstant.TAG_TIME_IGNORE)) counter.setLastCounterTime(tags.remove(MCConstant.TAG_TIME_IGNORE));\n  if (isAvg) ((AvgCounter)counter).inc(count,total);\n  else if (count != null) counter.inc(count);\n  else counter.inc();\n  if (conf != null) counters.put(groupDemension,counter);\n  return counter;\n}\n\nprivate void getAndPutCounter(String metricName, OffHeapCacheConfig conf) {...}\n\nprivate MCMetricGroupDemension getGroupDemension(Map<String,String> tags, String metricName, String groupId) {...}\n\nprivate Counter getCounter(Map<MCMetricGroupDemension,Counter> counters, MCMetricGroupDemension groupDemension, boolean isAvg) {...}"
    },
    "Old_Method": "private Counter getCounterByMetricDemensionAndInc(String metricName,String groupId,Map<String,String> tags,boolean isAvg,Long count,Long total){\n  Map<MCMetricGroupDemension,Counter> counters=groupbyWithTagsMetricMap.get(metricName);\n  OffHeapCacheConfig conf=null;\n  if (getConfiguration().getOffheapMetricConf() != null) {\n    conf=getConfiguration().getOffheapMetricConf().get(metricName);\n  }\n  if (counters == null) {\nsynchronized (this) {\n      if (counters == null) {\n        if (conf != null) {\n          counters=CacheManager.getCounterOffHeapCache(metricName,conf);\n        }\n else {\n          counters=CacheManager.getCounterCache();\n        }\n        groupbyWithTagsMetricMap.put(metricName,counters);\n      }\n    }\n  }\n  MCMetricGroupDemension groupDemension=null;\n  String tag_time=null;\n  if (tags == null || tags.isEmpty()) {\n    groupDemension=new MCMetricGroupDemension(metricName,groupId);\n  }\n else {\n    if (tags.containsKey(MCConstant.TAG_TIME_IGNORE)) {\n      tag_time=tags.remove(MCConstant.TAG_TIME_IGNORE);\n    }\n    groupDemension=new MCMetricGroupDemension(metricName,groupId,tags);\n  }\n  Counter counter=counters.get(groupDemension);\n  if (counter == null) {\n    if (isAvg) {\n      counter=new AvgCounter();\n    }\n else {\n      counter=new Counter();\n    }\n    if (conf == null) {\n      counters.put(groupDemension,counter);\n    }\n  }\n  if (tag_time != null) {\n    counter.setLastCounterTime(tag_time);\n  }\n  if (isAvg) {\n    ((AvgCounter)counter).inc(count,total);\n  }\n else {\n    if (count != null) {\n      counter.inc(count);\n    }\n else {\n      counter.inc();\n    }\n  }\n  if (conf != null) {\n    counters.put(groupDemension,counter);\n  }\n  return counter;\n}\n",
    "File_Path": "realtime-analytics/metriccalculator/src/main/java/com/ebay/pulsar/metriccalculator/processor/MCSummingProcessor.java",
    "Start": 9927,
    "Stop": 12300,
    "Project_Name": "data/projects/realtime-analytics",
    "Method_Name": "getCounterByMetricDemensionAndInc"
}