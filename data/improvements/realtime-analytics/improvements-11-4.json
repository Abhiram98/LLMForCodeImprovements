{
    "Method_Improvements": {
        "Improvements": [
            {
                "Improvement": "Refactor repetitive null checks into a private method",
                "Change_Diff": "- if (subSession.getDynamicAttributes() == null) {\n    subSession.setDynamicAttributes(new HashMap<String,Object>());\n}\nif (subSession.getInitialAttributes() == null) {\n    subSession.setInitialAttributes(new HashMap<String,Object>());\n}\n+ initAttributeMapIfNull(subSession.getDynamicAttributes(), subSession::setDynamicAttributes);\n+ initAttributeMapIfNull(subSession.getInitialAttributes(), subSession::setInitialAttributes);",
                "Description": "The null checks for dynamicAttributes and initialAttributes are repetitive. They can be abstracted into a private method to make the code cleaner and easier to read.",
                "Start": 5,
                "End": 8
            },
            {
                "Improvement": "Remove redundant session in resetSessionData",
                "Change_Diff": "- parentSessionVariable.resetSessionData(session,session);\n+ parentSessionVariable.resetSessionData(session);",
                "Description": "It is redundant to pass the same session object twice to the resetSessionData method of parentSessionVariable. You should only pass it once.",
                "Start": 14,
                "End": 14
            }
        ],
        "Final code": "public void process(SubSession subSession, Session session, JetstreamEvent event) {\n  context.setCurrentSession(subSession);\n  context.setMainSession(session);\n  context.setEvent(event);\n  initAttributeMapIfNull(subSession.getDynamicAttributes(), subSession::setDynamicAttributes);\n  initAttributeMapIfNull(subSession.getInitialAttributes(), subSession::setInitialAttributes);\n  sessionVariable.resetAttributes(subSession.getDynamicAttributes());\n  sessionVariable.resetSessionData(subSession, session);\n  metadataVariable.resetAttributes(subSession.getInitialAttributes());\n  parentMetadataVariable.resetAttributes(session.getInitialAttributes());\n  parentSessionVariable.resetAttributes(session.getDynamicAttributes());\n  parentSessionVariable.resetSessionData(session);\n  processEPL(event);\n}\n\nprivate void initAttributeMapIfNull(Map<String, Object> attributeMap, Consumer<Map<String, Object>> setter) {\n  if (attributeMap == null) {\n    setter.accept(new HashMap<>());\n  }\n}"
    },
    "Old_Method": "public void process(SubSession subSession,Session session,JetstreamEvent event){\n  context.setCurrentSession(subSession);\n  context.setMainSession(session);\n  context.setEvent(event);\n  if (subSession.getDynamicAttributes() == null) {\n    subSession.setDynamicAttributes(new HashMap<String,Object>());\n  }\n  if (subSession.getInitialAttributes() == null) {\n    subSession.setInitialAttributes(new HashMap<String,Object>());\n  }\n  sessionVariable.resetAttributes(subSession.getDynamicAttributes());\n  sessionVariable.resetSessionData(subSession,session);\n  metadataVariable.resetAttributes(subSession.getInitialAttributes());\n  parentMetadataVariable.resetAttributes(session.getInitialAttributes());\n  parentSessionVariable.resetAttributes(session.getDynamicAttributes());\n  parentSessionVariable.resetSessionData(session,session);\n  processEPL(event);\n}\n",
    "File_Path": "realtime-analytics/sessionizer/src/main/java/com/ebay/pulsar/sessionizer/esper/impl/EsperSessionizer.java",
    "Start": 24361,
    "Stop": 25325,
    "Project_Name": "data/projects/realtime-analytics",
    "Method_Name": "process"
}