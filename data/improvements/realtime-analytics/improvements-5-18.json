{
    "Method_Improvements": {
        "Improvements": [{
            "Improvement": "Use String concatenation",
            "Change_Diff": "-    StringBuilder builder=new StringBuilder();\n-    builder.append(\"InternalOffHeapManagerInfo:\");\n-    Map<String,OffHeapMemoryManager> memoryManagers=OffHeapMemoryManagerRegistry.getInstance().getMemoryManagers();\n-    for (  Map.Entry<String,OffHeapMemoryManager> entry : memoryManagers.entrySet()) {\n-      builder.append(\"MemoryManager-\");\n-      builder.append(entry.getKey());\n-      builder.append(\":\");\n-      OffHeapMemoryManager manager=entry.getValue();\n-      if (manager != null) {\n-        builder.append(\"[\");\n-        builder.append(\"FreeMemory:\");\n-        builder.append(manager.getFreeMemory());\n-        builder.append(\";\");\n-        builder.append(\"MaxMemory:\");\n-        builder.append(manager.getMaxMemory());\n-        builder.append(\";\");\n-        builder.append(\"ReservedMemory:\");\n-        builder.append(manager.getReservedMemory());\n-        builder.append(\";\");\n-        builder.append(\"UsedMemory:\");\n-        builder.append(manager.getUsedMemory());\n-        builder.append(\";\");\n-        builder.append(\"OutOfMeomoryErrorCount:\");\n-        builder.append(manager.getOOMErrorCount());\n-        builder.append(\"]\");\n-      }\n-    }\n-    return builder.toString();",
            "Description": "Instead of using append method to concatenate strings, we can use the + operator which will give us cleaner and shorter code.",
            "Start": 3,
            "End": 28
        }],
        "Final code": "public String getInternalOffHeapManagerInfo(){\n  String info = \"InternalOffHeapManagerInfo:\";\n  Map<String,OffHeapMemoryManager> memoryManagers=OffHeapMemoryManagerRegistry.getInstance().getMemoryManagers();\n  for (  Map.Entry<String,OffHeapMemoryManager> entry : memoryManagers.entrySet()) {\n    OffHeapMemoryManager manager=entry.getValue();\n    if (manager != null) {\n      info += \"MemoryManager-\" + entry.getKey() + \":[\" + \"FreeMemory:\" + manager.getFreeMemory() + \";\" + \"MaxMemory:\" + manager.getMaxMemory() + \";\" + \"ReservedMemory:\" + manager.getReservedMemory() + \";\" + \"UsedMemory:\" + manager.getUsedMemory() + \";\" + \"OutOfMeomoryErrorCount:\" + manager.getOOMErrorCount() + \"]\";\n    }\n  }\n  return info;\n}"
    },
    "Old_Method": "public String getInternalOffHeapManagerInfo(){\n  StringBuilder builder=new StringBuilder();\n  builder.append(\"InternalOffHeapManagerInfo:\");\n  Map<String,OffHeapMemoryManager> memoryManagers=OffHeapMemoryManagerRegistry.getInstance().getMemoryManagers();\n  for (  Map.Entry<String,OffHeapMemoryManager> entry : memoryManagers.entrySet()) {\n    builder.append(\"MemoryManager-\");\n    builder.append(entry.getKey());\n    builder.append(\":\");\n    OffHeapMemoryManager manager=entry.getValue();\n    if (manager != null) {\n      builder.append(\"[\");\n      builder.append(\"FreeMemory:\");\n      builder.append(manager.getFreeMemory());\n      builder.append(\";\");\n      builder.append(\"MaxMemory:\");\n      builder.append(manager.getMaxMemory());\n      builder.append(\";\");\n      builder.append(\"ReservedMemory:\");\n      builder.append(manager.getReservedMemory());\n      builder.append(\";\");\n      builder.append(\"UsedMemory:\");\n      builder.append(manager.getUsedMemory());\n      builder.append(\";\");\n      builder.append(\"OutOfMeomoryErrorCount:\");\n      builder.append(manager.getOOMErrorCount());\n      builder.append(\"]\");\n    }\n  }\n  return builder.toString();\n}\n",
    "File_Path": "realtime-analytics/metriccalculator/src/main/java/com/ebay/pulsar/metriccalculator/processor/MCSummingProcessor.java",
    "Start": 27123,
    "Stop": 28572,
    "Project_Name": "data/projects/realtime-analytics",
    "Method_Name": "getInternalOffHeapManagerInfo"
}