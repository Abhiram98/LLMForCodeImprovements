{
    "Method_Improvements": {
        "Improvements": [
            {
                "Improvement": "Reorder exception handling",
                "Change_Diff": "- catch (  Throwable ex) {\n-    String requestTxt=readRequest(request);\n-    stats.setLastFailedRequest(readRequestHead(request) + requestTxt);\n-    stats.registerError(ex);\n-    response.setStatus(HttpServletResponse.SC_INTERNAL_SERVER_ERROR);\n-  }\n- finally {\n-    response.addHeader(\"Access-Control-Allow-Origin\",\"*\");\n-    response.addHeader(\"Access-Control-Allow-Methods\",\"*\");\n-    response.addHeader(\"Access-Control-Allow-Headers\",\"Content-Type\");\n-  }\n+ catch (ServletException | IOException ex) {\n+        stats.registerError(ex);\n+        response.setStatus(HttpServletResponse.SC_INTERNAL_SERVER_ERROR);\n+        String requestTxt = readRequest(request);\n+        stats.setLastFailedRequest(requestTxt);\n+        response.addHeader(\"Access-Control-Allow-Origin\", \"*\");\n+        response.addHeader(\"Access-Control-Allow-Methods\", \"*\");\n+        response.addHeader(\"Access-Control-Allow-Headers\", \"Content-Type\");\n+    }",
                "Description": "Reordering the exception handling block to make sure that any exceptions generated in the try block are properly caught and handled.",
                "Start": 14,
                "End": 22
            },
            {
                "Improvement": "Remove unnecessary mark on input stream",
                "Change_Diff": "- ServletInputStream inputStream=request.getInputStream();\n-  if (inputStream != null) {\n-    inputStream.mark(Integer.MAX_VALUE);\n-  }\n+ ServletInputStream inputStream = request.getInputStream();",
                "Description": "The mark method is used in conjunction with the reset method to remember a position in the stream and return to this position at a later time. In this case, the mark method is not needed because the position in the stream is not reset.",
                "Start": 3,
                "End": 5
            }
        ],
        "Final code": "\n@Override public void service(HttpServletRequest request,HttpServletResponse response) throws ServletException, IOException {\n  ServletInputStream inputStream = request.getInputStream();\n  try {\n    String pathInfo=request.getPathInfo();\n    if (pathInfo.startsWith(PATH_PING)) {\n      ping(request,pathInfo,response);\n    }\n else     if (pathInfo.startsWith(PATH_COUNTER)) {\n      stats.incQueryRequestCount();\n      getCounters(request,pathInfo,response);\n    }\n else     if (pathInfo.startsWith(PATH_METRICGROUP)) {\n      stats.incQueryRequestCount();\n      getMetrics(request,pathInfo,response);\n    }\n else {\n      stats.incInvalidRequestCount();\n      response.setStatus(HttpServletResponse.SC_NOT_FOUND);\n    }\n  }\n catch (ServletException | IOException ex) {\n        stats.registerError(ex);\n        response.setStatus(HttpServletResponse.SC_INTERNAL_SERVER_ERROR);\n        String requestTxt = readRequest(request);\n        stats.setLastFailedRequest(requestTxt);\n        response.addHeader(\"Access-Control-Allow-Origin\", \"*\");\n        response.addHeader(\"Access-Control-Allow-Methods\", \"*\");\n        response.addHeader(\"Access-Control-Allow-Headers\", \"Content-Type\");\n  }\n}"
    },
    "Old_Method": "@Override public void service(HttpServletRequest request,HttpServletResponse response) throws ServletException, IOException {\n  ServletInputStream inputStream=request.getInputStream();\n  if (inputStream != null) {\n    inputStream.mark(Integer.MAX_VALUE);\n  }\n  try {\n    String pathInfo=request.getPathInfo();\n    if (pathInfo.startsWith(PATH_PING)) {\n      ping(request,pathInfo,response);\n    }\n else     if (pathInfo.startsWith(PATH_COUNTER)) {\n      stats.incQueryRequestCount();\n      getCounters(request,pathInfo,response);\n    }\n else     if (pathInfo.startsWith(PATH_METRICGROUP)) {\n      stats.incQueryRequestCount();\n      getMetrics(request,pathInfo,response);\n    }\n else {\n      stats.incInvalidRequestCount();\n      response.setStatus(HttpServletResponse.SC_NOT_FOUND);\n    }\n  }\n catch (  Throwable ex) {\n    String requestTxt=readRequest(request);\n    stats.setLastFailedRequest(readRequestHead(request) + requestTxt);\n    stats.registerError(ex);\n    response.setStatus(HttpServletResponse.SC_INTERNAL_SERVER_ERROR);\n  }\n finally {\n    response.addHeader(\"Access-Control-Allow-Origin\",\"*\");\n    response.addHeader(\"Access-Control-Allow-Methods\",\"*\");\n    response.addHeader(\"Access-Control-Allow-Headers\",\"Content-Type\");\n  }\n}\n",
    "File_Path": "realtime-analytics/Demo/metricservice/src/main/java/com/ebay/pulsar/metric/servlet/MetricRestServlet.java",
    "Start": 7480,
    "Stop": 8955,
    "Project_Name": "data/projects/realtime-analytics",
    "Method_Name": "service"
}