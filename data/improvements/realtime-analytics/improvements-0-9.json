{
    "Method_Improvements": {
        "Improvements": [
            {
                "Improvement": "Extract Duplicate Code to a Method",
                "Change_Diff": "- subSession=new SubSession();\n- subSession.setIdentifier(subSessionIdenfifier);\n- subSession.setName(profile.getName());\n- subSession.setCreationTime(currentTime);\n- subSession.setEventCount(1);\n...\n- subSession.setSessionId(concatTimestamp(session.getIdentifier(),subSessionIdenfifier,subSession.getFirstEventTimestamp()));\n- session.addSubSession(subSession);\n+ createNewSubSession(subSessionIdenfifier, profile, currentTime, info, session);",
                "Description": "The code for creating a new SubSession and setting its properties is duplicated. This code can be extracted into a new method to avoid duplication.",
                "Start": 7,
                "End": 27
            },
            {
                "Improvement": "Use Conditional Operator",
                "Change_Diff": "- if (info.getTtl() > 0) {\n-   subSession.setTtl(Math.min(info.getTtl(),maxSessionIdleTime));\n- }\n- else {\n-   subSession.setTtl(Math.min(profile.getDefaultTtl(),maxSessionIdleTime));\n- }\n+ subSession.setTtl(info.getTtl() > 0 ? Math.min(info.getTtl(),maxSessionIdleTime) : Math.min(profile.getDefaultTtl(),maxSessionIdleTime));",
                "Description": "The if-else statement determining the ttl of the subSession can be simplified using a conditional (ternary) operator. This makes the code more readable.",
                "Start": 13,
                "End": 16
            }
        ],
        "Final code": "private void processSubSession(JetstreamEvent event,Session session,String mainIdentifier,SessionizationInfo info,SubSessionProfile profile,long eventTimestamp){\n  String subSessionIdenfifier=info.getIdentifier();\n  SubSession subSession=session.getSubSession(subSessionIdenfifier,profile.getName());\n  long currentTime=session.getLastModifiedTime();\n  if (subSession == null) {\n    createNewSubSession(subSessionIdenfifier, profile, currentTime, info, session);\n  }\n  else   if (subSession.getExpirationTime() < session.getLastModifiedTime()) {\n    subSessionEnd(mainIdentifier,session,subSession);\n    createNewSubSession(subSessionIdenfifier, profile, currentTime, info, session);\n    if (subSession.getInitialAttributes() != null) {\n      subSession.getInitialAttributes().clear();\n    }\n    if (subSession.getDynamicAttributes() != null) {\n      subSession.getDynamicAttributes().clear();\n    }\n  }\n  else {\n    subSession.setSessionId(concatTimestamp(session.getIdentifier(),subSessionIdenfifier,subSession.getFirstEventTimestamp()));\n    if (subSession.getEventCount() < Integer.MAX_VALUE) {\n      subSession.setEventCount(subSession.getEventCount() + 1);\n    }\n    subSession.setExpirationTime(currentTime + subSession.getTtl());\n    subSession.setLastModifiedTime(currentTime);\n  }\n  if (session.getExpirationTime() < subSession.getExpirationTime()) {\n    session.setExpirationTime(subSession.getExpirationTime());\n  }\n  EsperSessionizer subEsperSessionizer=subEsperSessionizerMap.get(profile.getName());\n  if (subEsperSessionizer != null && subEsperSessionizer.isEventSupported(event)) {\n    subEsperSessionizer.process(subSession,session,event);\n  }\n  if (subSession.getEventCount() == 1 && profile.getBeginMarker() != null) {\n    JetstreamEvent sessionBeginEvent=new JetstreamEvent();\n    sessionBeginEvent.setEventType(profile.getBeginMarker());\n    Map<String,Object> initialAttributes=subSession.getInitialAttributes();\n    if (initialAttributes != null) {\n      sessionBeginEvent.putAll(initialAttributes);\n    }\n    if (profile.getSessionIdKey() != null) {\n      sessionBeginEvent.put(profile.getSessionIdKey(),subSession.getSessionId());\n    }\n    if (mainSessionProfile.getSessionStartTimestampKey() != null) {\n      sessionBeginEvent.put(mainSessionProfile.getSessionStartTimestampKey(),subSession.getCreationTime());\n    }\n    if (subEsperSessionizer != null && subEsperSessionizer.isEventSupported(sessionBeginEvent)) {\n      subEsperSessionizer.process(subSession,session,sessionBeginEvent);\n    }\n    eventSender.sendSubSessionBeginEvent(mainSessionProfile.getSessionType(),subSession,sessionBeginEvent);\n  }\n}\n\nprivate SubSession createNewSubSession(String subSessionIdenfifier, SubSessionProfile profile, long currentTime, SessionizationInfo info, Session session) {\n  SubSession subSession=new SubSession();\n  subSession.setIdentifier(subSessionIdenfifier);\n  subSession.setName(profile.getName());\n  subSession.setCreationTime(currentTime);\n  subSession.setEventCount(1);\n  subSession.setTtl(info.getTtl() > 0 ? Math.min(info.getTtl(),maxSessionIdleTime) : Math.min(profile.getDefaultTtl(),maxSessionIdleTime));\n  if (subSession.getTtl() > session.getTtl()) {\n    subSession.setTtl(session.getTtl());\n  }\n  subSession.setFirstEventTimestamp(eventTimestamp);\n  subSession.setLastModifiedTime(currentTime);\n  subSession.setExpirationTime(currentTime + subSession.getTtl());\n  subSession.setSessionId(concatTimestamp(session.getIdentifier(),subSessionIdenfifier,subSession.getFirstEventTimestamp()));\n  session.addSubSession(subSession);\n  return subSession;\n}"
    },
    "Old_Method": "private void processSubSession(JetstreamEvent event,Session session,String mainIdentifier,SessionizationInfo info,SubSessionProfile profile,long eventTimestamp){\n  String subSessionIdenfifier=info.getIdentifier();\n  SubSession subSession=session.getSubSession(subSessionIdenfifier,profile.getName());\n  long currentTime=session.getLastModifiedTime();\n  if (subSession == null) {\n    subSession=new SubSession();\n    subSession.setIdentifier(subSessionIdenfifier);\n    subSession.setName(profile.getName());\n    subSession.setCreationTime(currentTime);\n    subSession.setEventCount(1);\n    if (info.getTtl() > 0) {\n      subSession.setTtl(Math.min(info.getTtl(),maxSessionIdleTime));\n    }\n else {\n      subSession.setTtl(Math.min(profile.getDefaultTtl(),maxSessionIdleTime));\n    }\n    if (subSession.getTtl() > session.getTtl()) {\n      subSession.setTtl(session.getTtl());\n    }\n    subSession.setFirstEventTimestamp(eventTimestamp);\n    subSession.setLastModifiedTime(currentTime);\n    subSession.setExpirationTime(currentTime + subSession.getTtl());\n    subSession.setSessionId(concatTimestamp(session.getIdentifier(),subSessionIdenfifier,subSession.getFirstEventTimestamp()));\n    session.addSubSession(subSession);\n  }\n else   if (subSession.getExpirationTime() < session.getLastModifiedTime()) {\n    subSessionEnd(mainIdentifier,session,subSession);\n    subSession.setCreationTime(currentTime);\n    subSession.setEventCount(1);\n    if (info.getTtl() > 0) {\n      subSession.setTtl(Math.min(info.getTtl(),maxSessionIdleTime));\n    }\n else {\n      subSession.setTtl(Math.min(profile.getDefaultTtl(),maxSessionIdleTime));\n    }\n    if (subSession.getTtl() > session.getTtl()) {\n      subSession.setTtl(session.getTtl());\n    }\n    subSession.setFirstEventTimestamp(eventTimestamp);\n    subSession.setLastModifiedTime(currentTime);\n    subSession.setExpirationTime(currentTime + subSession.getTtl());\n    subSession.setSessionId(concatTimestamp(session.getIdentifier(),subSessionIdenfifier,subSession.getFirstEventTimestamp()));\n    if (subSession.getInitialAttributes() != null) {\n      subSession.getInitialAttributes().clear();\n    }\n    if (subSession.getDynamicAttributes() != null) {\n      subSession.getDynamicAttributes().clear();\n    }\n  }\n else {\n    subSession.setSessionId(concatTimestamp(session.getIdentifier(),subSessionIdenfifier,subSession.getFirstEventTimestamp()));\n    if (subSession.getEventCount() < Integer.MAX_VALUE) {\n      subSession.setEventCount(subSession.getEventCount() + 1);\n    }\n    subSession.setExpirationTime(currentTime + subSession.getTtl());\n    subSession.setLastModifiedTime(currentTime);\n  }\n  if (session.getExpirationTime() < subSession.getExpirationTime()) {\n    session.setExpirationTime(subSession.getExpirationTime());\n  }\n  EsperSessionizer subEsperSessionizer=subEsperSessionizerMap.get(profile.getName());\n  if (subEsperSessionizer != null && subEsperSessionizer.isEventSupported(event)) {\n    subEsperSessionizer.process(subSession,session,event);\n  }\n  if (subSession.getEventCount() == 1 && profile.getBeginMarker() != null) {\n    JetstreamEvent sessionBeginEvent=new JetstreamEvent();\n    sessionBeginEvent.setEventType(profile.getBeginMarker());\n    Map<String,Object> initialAttributes=subSession.getInitialAttributes();\n    if (initialAttributes != null) {\n      sessionBeginEvent.putAll(initialAttributes);\n    }\n    if (profile.getSessionIdKey() != null) {\n      sessionBeginEvent.put(profile.getSessionIdKey(),subSession.getSessionId());\n    }\n    if (mainSessionProfile.getSessionStartTimestampKey() != null) {\n      sessionBeginEvent.put(mainSessionProfile.getSessionStartTimestampKey(),subSession.getCreationTime());\n    }\n    if (subEsperSessionizer != null && subEsperSessionizer.isEventSupported(sessionBeginEvent)) {\n      subEsperSessionizer.process(subSession,session,sessionBeginEvent);\n    }\n    eventSender.sendSubSessionBeginEvent(mainSessionProfile.getSessionType(),subSession,sessionBeginEvent);\n  }\n}\n",
    "File_Path": "realtime-analytics/sessionizer/src/main/java/com/ebay/pulsar/sessionizer/impl/Sessionizer.java",
    "Start": 7838,
    "Stop": 12484,
    "Project_Name": "data/projects/realtime-analytics",
    "Method_Name": "processSubSession"
}