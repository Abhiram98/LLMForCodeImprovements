{
    "Method_Improvements": {
        "Improvements": [
            {
                "Improvement": "Reduce code repetition",
                "Change_Diff": "- factory.setAttribute(XMLConstants.ACCESS_EXTERNAL_DTD,\"\");\n- ... repeat for other attributes and features ...\n+ setAttributeSafe(factory, XMLConstants.ACCESS_EXTERNAL_DTD, \"\");\n... repeat for other attributes and features ...",
                "Description": "There's a lot of repeated code when trying to set attributes and features of the factory. It would be clearer and easier to read if the try-catch blocks were extracted to separate methods.",
                "Start": 7,
                "End": 53
            },
            {
                "Improvement": "Improve logging messages",
                "Change_Diff": "- log.warn(XMLConstants.ACCESS_EXTERNAL_DTD + \" property not supported by \" + factory.getClass().getCanonicalName());\n+ log.warn(\"Failed to set property \"+ XMLConstants.ACCESS_EXTERNAL_DTD + \" on factory. This may lead to security vulnerabilities.\");",
                "Description": "The logging messages could be more informative. Instead of just stating that a property is not supported, it would be helpful to include what the implications are or what action should be taken, if any.",
                "Start": 10,
                "End": 53
            }
        ],
        "Final code": "public static DocumentBuilderFactory newInstance(){\n  DocumentBuilderFactory factory=DocumentBuilderFactory.newInstance();\n  setAttributeSafe(factory, XMLConstants.ACCESS_EXTERNAL_DTD, \"\");\n  setAttributeSafe(factory, XMLConstants.ACCESS_EXTERNAL_SCHEMA, \"\");\n  setFeatureSafe(factory, \"http://apache.org/xml/features/disallow-doctype-decl\",true);\n  setFeatureSafe(factory, \"http://xml.org/sax/features/external-general-entities\",false);\n  setFeatureSafe(factory, \"http://xml.org/sax/features/external-parameter-entities\",false);\n  setFeatureSafe(factory, \"http://apache.org/xml/features/nonvalidating/load-external-dtd\",false);\n  setXIncludeAndExpandEntityReferencesSafe(factory);\n  return factory;\n}\n\nprivate static void setAttributeSafe(DocumentBuilderFactory factory, String attribute, String value) {\n  try {\n    factory.setAttribute(attribute, value);\n  } catch (IllegalArgumentException e) {\n    if (log.isWarnEnabled()) {\n      log.warn(\"Failed to set attribute \" + attribute + \" on factory. This may lead to security vulnerabilities.\");\n    }\n  }\n}\n\nprivate static void setFeatureSafe(DocumentBuilderFactory factory, String feature, boolean value) {\n  try {\n    factory.setFeature(feature, value);\n  } catch (ParserConfigurationException e) {\n    if (log.isWarnEnabled()) {\n      log.warn(\"Failed to set feature \" + feature + \" on factory. This may lead to security vulnerabilities.\");\n    }\n  }\n}\n\nprivate static void setXIncludeAndExpandEntityReferencesSafe(DocumentBuilderFactory factory) {\n  try {\n    factory.setXIncludeAware(false);\n    factory.setExpandEntityReferences(false);\n  } catch (Exception e) {\n    if (log.isWarnEnabled()) {\n      log.warn(\"Failed to configure XML parser. This may lead to security vulnerabilities.\");\n    }\n  }\n}"
    },
    "Old_Method": "/** \n * Build a  {@link DocumentBuilderFactory} then set properties to prevent external entity access.\n * @see DocumentBuilderFactory#newInstance()\n */\npublic static DocumentBuilderFactory newInstance(){\n  DocumentBuilderFactory factory=DocumentBuilderFactory.newInstance();\n  try {\n    factory.setAttribute(XMLConstants.ACCESS_EXTERNAL_DTD,\"\");\n  }\n catch (  IllegalArgumentException e) {\n    if (log.isWarnEnabled()) {\n      log.warn(XMLConstants.ACCESS_EXTERNAL_DTD + \" property not supported by \" + factory.getClass().getCanonicalName());\n    }\n  }\n  try {\n    factory.setAttribute(XMLConstants.ACCESS_EXTERNAL_SCHEMA,\"\");\n  }\n catch (  IllegalArgumentException e) {\n    if (log.isWarnEnabled()) {\n      log.warn(XMLConstants.ACCESS_EXTERNAL_SCHEMA + \" property not supported by \" + factory.getClass().getCanonicalName());\n    }\n  }\n  try {\n    factory.setFeature(\"http://apache.org/xml/features/disallow-doctype-decl\",true);\n  }\n catch (  ParserConfigurationException e) {\n    if (log.isWarnEnabled()) {\n      log.warn(\"FEATURE 'http://apache.org/xml/features/disallow-doctype-decl' is probably not supported by \" + factory.getClass().getCanonicalName());\n    }\n  }\n  try {\n    factory.setFeature(\"http://xml.org/sax/features/external-general-entities\",false);\n  }\n catch (  ParserConfigurationException e) {\n    if (log.isWarnEnabled()) {\n      log.warn(\"FEATURE 'http://xml.org/sax/features/external-general-entities' is probably not supported by \" + factory.getClass().getCanonicalName());\n    }\n  }\n  try {\n    factory.setFeature(\"http://xml.org/sax/features/external-parameter-entities\",false);\n  }\n catch (  ParserConfigurationException e) {\n    if (log.isWarnEnabled()) {\n      log.warn(\"FEATURE 'http://xml.org/sax/features/external-parameter-entities' is probably not supported by \" + factory.getClass().getCanonicalName());\n    }\n  }\n  try {\n    factory.setFeature(\"http://apache.org/xml/features/nonvalidating/load-external-dtd\",false);\n  }\n catch (  ParserConfigurationException e) {\n    if (log.isWarnEnabled()) {\n      log.warn(\"FEATURE 'http://apache.org/xml/features/nonvalidating/load-external-dtd' is probably not supported by \" + factory.getClass().getCanonicalName());\n    }\n  }\n  try {\n    factory.setXIncludeAware(false);\n    factory.setExpandEntityReferences(false);\n  }\n catch (  Exception e) {\n    if (log.isWarnEnabled()) {\n      log.warn(\"Caught \" + e.getMessage() + \" attempting to configure your XML parser.\");\n    }\n  }\n  return factory;\n}\n",
    "File_Path": "spring-ws/spring-xml/src/main/java/org/springframework/xml/DocumentBuilderFactoryUtils.java",
    "Start": 1059,
    "Stop": 3546,
    "Project_Name": "data/projects/spring-ws",
    "Method_Name": "newInstance"
}