{
    "Method_Improvements": {
        "Improvements": [
            {
                "Improvement": "Abstract repeated try-catch blocks into a separate method",
                "Change_Diff": "- try {\n    factory.setAttribute(XMLConstants.ACCESS_EXTERNAL_DTD,\"\");\n}\n...\n+ setAttributeSafely(factory, XMLConstants.ACCESS_EXTERNAL_DTD, \"\", \"property not supported by \");\n...",
                "Description": "The try-catch blocks for setting attributes and features are repetitive. These can be abstracted into a separate method which takes the factory, the attribute/feature, the expected value and the log message as arguments. This will make the code more readable and maintainable.",
                "Start": 7,
                "End": 53
            },
            {
                "Improvement": "Combine the two try-catch blocks at the end into one",
                "Change_Diff": "- try {\n    factory.setXIncludeAware(false);\n} catch (Exception e) {\n...\n- try {\n    factory.setExpandEntityReferences(false);\n} catch (Exception e) {\n...\n+ try {\n    factory.setXIncludeAware(false);\n    factory.setExpandEntityReferences(false);\n} catch (Exception e) {\n...",
                "Description": "The two try-catch blocks at the end are both catching any Exception and logging the same message. These can be combined into one block to eliminate redundancy.",
                "Start": 55,
                "End": 63
            }
        ],
        "Final code": "public static DocumentBuilderFactory newInstance(){\n    DocumentBuilderFactory factory=DocumentBuilderFactory.newInstance();\n    setAttributeSafely(factory, XMLConstants.ACCESS_EXTERNAL_DTD, \"\", \"property not supported by \");\n    setAttributeSafely(factory, XMLConstants.ACCESS_EXTERNAL_SCHEMA, \"\", \"property not supported by \");\n    setFeatureSafely(factory, \"http://apache.org/xml/features/disallow-doctype-decl\", true, \"FEATURE is probably not supported by \");\n    setFeatureSafely(factory, \"http://xml.org/sax/features/external-general-entities\", false, \"FEATURE is probably not supported by \");\n    setFeatureSafely(factory, \"http://xml.org/sax/features/external-parameter-entities\", false, \"FEATURE is probably not supported by \");\n    setFeatureSafely(factory, \"http://apache.org/xml/features/nonvalidating/load-external-dtd\", false, \"FEATURE is probably not supported by \");\n    try {\n        factory.setXIncludeAware(false);\n        factory.setExpandEntityReferences(false);\n    } catch (Exception e) {\n        if (log.isWarnEnabled()) {\n            log.warn(\"Caught \" + e.getMessage() + \" attempting to configure your XML parser.\");\n        }\n    }\n    return factory;\n}\n\nprivate static void setAttributeSafely(DocumentBuilderFactory factory, String attribute, String value, String logMessage) {\n    try {\n        factory.setAttribute(attribute, value);\n    } catch (IllegalArgumentException e) {\n        if (log.isWarnEnabled()) {\n            log.warn(attribute + \" \" + logMessage + factory.getClass().getCanonicalName());\n        }\n    }\n}\n\nprivate static void setFeatureSafely(DocumentBuilderFactory factory, String feature, boolean value, String logMessage) {\n    try {\n        factory.setFeature(feature, value);\n    } catch (ParserConfigurationException e) {\n        if (log.isWarnEnabled()) {\n            log.warn(feature + \" \" + logMessage + factory.getClass().getCanonicalName());\n        }\n    }\n}"
    },
    "Old_Method": "/** \n * Build a  {@link DocumentBuilderFactory} then set properties to prevent external entity access.\n * @see DocumentBuilderFactory#newInstance()\n */\npublic static DocumentBuilderFactory newInstance(){\n  DocumentBuilderFactory factory=DocumentBuilderFactory.newInstance();\n  try {\n    factory.setAttribute(XMLConstants.ACCESS_EXTERNAL_DTD,\"\");\n  }\n catch (  IllegalArgumentException e) {\n    if (log.isWarnEnabled()) {\n      log.warn(XMLConstants.ACCESS_EXTERNAL_DTD + \" property not supported by \" + factory.getClass().getCanonicalName());\n    }\n  }\n  try {\n    factory.setAttribute(XMLConstants.ACCESS_EXTERNAL_SCHEMA,\"\");\n  }\n catch (  IllegalArgumentException e) {\n    if (log.isWarnEnabled()) {\n      log.warn(XMLConstants.ACCESS_EXTERNAL_SCHEMA + \" property not supported by \" + factory.getClass().getCanonicalName());\n    }\n  }\n  try {\n    factory.setFeature(\"http://apache.org/xml/features/disallow-doctype-decl\",true);\n  }\n catch (  ParserConfigurationException e) {\n    if (log.isWarnEnabled()) {\n      log.warn(\"FEATURE 'http://apache.org/xml/features/disallow-doctype-decl' is probably not supported by \" + factory.getClass().getCanonicalName());\n    }\n  }\n  try {\n    factory.setFeature(\"http://xml.org/sax/features/external-general-entities\",false);\n  }\n catch (  ParserConfigurationException e) {\n    if (log.isWarnEnabled()) {\n      log.warn(\"FEATURE 'http://xml.org/sax/features/external-general-entities' is probably not supported by \" + factory.getClass().getCanonicalName());\n    }\n  }\n  try {\n    factory.setFeature(\"http://xml.org/sax/features/external-parameter-entities\",false);\n  }\n catch (  ParserConfigurationException e) {\n    if (log.isWarnEnabled()) {\n      log.warn(\"FEATURE 'http://xml.org/sax/features/external-parameter-entities' is probably not supported by \" + factory.getClass().getCanonicalName());\n    }\n  }\n  try {\n    factory.setFeature(\"http://apache.org/xml/features/nonvalidating/load-external-dtd\",false);\n  }\n catch (  ParserConfigurationException e) {\n    if (log.isWarnEnabled()) {\n      log.warn(\"FEATURE 'http://apache.org/xml/features/nonvalidating/load-external-dtd' is probably not supported by \" + factory.getClass().getCanonicalName());\n    }\n  }\n  try {\n    factory.setXIncludeAware(false);\n    factory.setExpandEntityReferences(false);\n  }\n catch (  Exception e) {\n    if (log.isWarnEnabled()) {\n      log.warn(\"Caught \" + e.getMessage() + \" attempting to configure your XML parser.\");\n    }\n  }\n  return factory;\n}\n",
    "File_Path": "spring-ws/spring-xml/src/main/java/org/springframework/xml/DocumentBuilderFactoryUtils.java",
    "Start": 1059,
    "Stop": 3546,
    "Project_Name": "data/projects/spring-ws",
    "Method_Name": "newInstance"
}