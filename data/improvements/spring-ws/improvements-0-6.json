{
    "Method_Improvements": {
        "Improvements": [
            {
                "Improvement": "Refactor repetitive try-catch blocks",
                "Change_Diff": "- try {\n  ....\n} catch (IllegalArgumentException e) {\n  ....\n}\n- try {\n  ....\n} catch (IllegalArgumentException e) {\n  ....\n}\n+ setFactoryAttribute(factory, XMLConstants.ACCESS_EXTERNAL_DTD, \"\");\n+ setFactoryAttribute(factory, XMLConstants.ACCESS_EXTERNAL_SCHEMA, \"\");\n+ setFactoryFeature(factory, \"http://apache.org/xml/features/disallow-doctype-decl\", true);\n+ ....",
                "Description": "There are many repetitive try-catch blocks to set different features of the DocumentBuilderFactory. These can be refactored into a separate method to reduce code duplication.",
                "Start": 7,
                "End": 53
            },
            {
                "Improvement": "Use constants for repeated strings",
                "Change_Diff": "- log.warn(XMLConstants.ACCESS_EXTERNAL_DTD + \" property not supported by \" + factory.getClass().getCanonicalName());\n+ log.warn(String.format(NOT_SUPPORTED_MSG, XMLConstants.ACCESS_EXTERNAL_DTD, factory.getClass().getCanonicalName()));",
                "Description": "There are many instances of the same string values being used multiple times. These can be replaced with constant variables to improve readability and maintainability.",
                "Start": 7,
                "End": 53
            }
        ],
        "Final code": "    public static DocumentBuilderFactory newInstance(){\n        DocumentBuilderFactory factory=DocumentBuilderFactory.newInstance();\n        setFactoryAttribute(factory, XMLConstants.ACCESS_EXTERNAL_DTD, \"\");\n        setFactoryAttribute(factory, XMLConstants.ACCESS_EXTERNAL_SCHEMA, \"\");\n        setFactoryFeature(factory, \"http://apache.org/xml/features/disallow-doctype-decl\", true);\n        setFactoryFeature(factory, \"http://xml.org/sax/features/external-general-entities\", false);\n        setFactoryFeature(factory, \"http://xml.org/sax/features/external-parameter-entities\", false);\n        setFactoryFeature(factory, \"http://apache.org/xml/features/nonvalidating/load-external-dtd\", false);\n        setFactoryXIncludeAware(factory, false);\n        setFactoryExpandEntityReferences(factory, false);\n        return factory;\n    }\n\n    private static void setFactoryAttribute(DocumentBuilderFactory factory, String attribute, String value) {\n        try {\n            factory.setAttribute(attribute, value);\n        } catch (IllegalArgumentException e) {\n            log.warn(String.format(NOT_SUPPORTED_MSG, attribute, factory.getClass().getCanonicalName()));\n        }\n    }\n\n    ...."
    },
    "Old_Method": "/** \n * Build a  {@link DocumentBuilderFactory} then set properties to prevent external entity access.\n * @see DocumentBuilderFactory#newInstance()\n */\npublic static DocumentBuilderFactory newInstance(){\n  DocumentBuilderFactory factory=DocumentBuilderFactory.newInstance();\n  try {\n    factory.setAttribute(XMLConstants.ACCESS_EXTERNAL_DTD,\"\");\n  }\n catch (  IllegalArgumentException e) {\n    if (log.isWarnEnabled()) {\n      log.warn(XMLConstants.ACCESS_EXTERNAL_DTD + \" property not supported by \" + factory.getClass().getCanonicalName());\n    }\n  }\n  try {\n    factory.setAttribute(XMLConstants.ACCESS_EXTERNAL_SCHEMA,\"\");\n  }\n catch (  IllegalArgumentException e) {\n    if (log.isWarnEnabled()) {\n      log.warn(XMLConstants.ACCESS_EXTERNAL_SCHEMA + \" property not supported by \" + factory.getClass().getCanonicalName());\n    }\n  }\n  try {\n    factory.setFeature(\"http://apache.org/xml/features/disallow-doctype-decl\",true);\n  }\n catch (  ParserConfigurationException e) {\n    if (log.isWarnEnabled()) {\n      log.warn(\"FEATURE 'http://apache.org/xml/features/disallow-doctype-decl' is probably not supported by \" + factory.getClass().getCanonicalName());\n    }\n  }\n  try {\n    factory.setFeature(\"http://xml.org/sax/features/external-general-entities\",false);\n  }\n catch (  ParserConfigurationException e) {\n    if (log.isWarnEnabled()) {\n      log.warn(\"FEATURE 'http://xml.org/sax/features/external-general-entities' is probably not supported by \" + factory.getClass().getCanonicalName());\n    }\n  }\n  try {\n    factory.setFeature(\"http://xml.org/sax/features/external-parameter-entities\",false);\n  }\n catch (  ParserConfigurationException e) {\n    if (log.isWarnEnabled()) {\n      log.warn(\"FEATURE 'http://xml.org/sax/features/external-parameter-entities' is probably not supported by \" + factory.getClass().getCanonicalName());\n    }\n  }\n  try {\n    factory.setFeature(\"http://apache.org/xml/features/nonvalidating/load-external-dtd\",false);\n  }\n catch (  ParserConfigurationException e) {\n    if (log.isWarnEnabled()) {\n      log.warn(\"FEATURE 'http://apache.org/xml/features/nonvalidating/load-external-dtd' is probably not supported by \" + factory.getClass().getCanonicalName());\n    }\n  }\n  try {\n    factory.setXIncludeAware(false);\n    factory.setExpandEntityReferences(false);\n  }\n catch (  Exception e) {\n    if (log.isWarnEnabled()) {\n      log.warn(\"Caught \" + e.getMessage() + \" attempting to configure your XML parser.\");\n    }\n  }\n  return factory;\n}\n",
    "File_Path": "spring-ws/spring-xml/src/main/java/org/springframework/xml/DocumentBuilderFactoryUtils.java",
    "Start": 1059,
    "Stop": 3546,
    "Project_Name": "data/projects/spring-ws",
    "Method_Name": "newInstance"
}