{
    "Method_Improvements": {
        "Improvements": [{
            "Improvement": "Extract common exception test logic to a separate method",
            "Change_Diff": "- try {\n    sketch.getMinItem();\n    fail();\n} catch (IllegalArgumentException e) {}\n...\n- try {\n    sketch.getRank('a');\n    fail();\n} catch (IllegalArgumentException e) {}\n\n+ testException(sketch::getMinItem);\n...\n+ testException(() -> sketch.getRank('a'));",
            "Description": "There are multiple try-catch blocks for IllegalArgumentException being used. This code can be encapsulated in a separate method to avoid repetition and enhance readability.",
            "Start": 11,
            "End": 42
        }],
        "Final code": "@Test public void empty(){\n  final ItemsSketch<String> sketch=ItemsSketch.getInstance(String.class,128,Comparator.naturalOrder());\n  assertNotNull(sketch);\n  sketch.update(null);\n  assertTrue(sketch.isEmpty());\n  assertEquals(sketch.getN(),0);\n  assertEquals(sketch.getNumRetained(),0);\n  testException(sketch::getMinItem);\n  testException(sketch::getMaxItem);\n  testException(() -> sketch.getQuantile(0.5));\n  testException(() -> sketch.getQuantiles(new double[]{0.0,1.0}));\n  final byte[] byteArr=sketch.toByteArray(new ArrayOfStringsSerDe());\n  assertEquals(byteArr.length,8);\n  testException(() -> sketch.getPMF(new String[0]));\n  testException(() -> sketch.getCDF(new String[0]));\n  testException(() -> sketch.getRank('a'));\n}\n\nprivate void testException(Runnable methodCall) {\n  try {\n    methodCall.run();\n    fail();\n  } catch (IllegalArgumentException e) {\n    // Handle exception here if required\n  }\n}"
    },
    "Old_Method": "@Test public void empty(){\n  final ItemsSketch<String> sketch=ItemsSketch.getInstance(String.class,128,Comparator.naturalOrder());\n  assertNotNull(sketch);\n  sketch.update(null);\n  assertTrue(sketch.isEmpty());\n  assertEquals(sketch.getN(),0);\n  assertEquals(sketch.getNumRetained(),0);\n  try {\n    sketch.getMinItem();\n    fail();\n  }\n catch (  IllegalArgumentException e) {\n  }\n  try {\n    sketch.getMaxItem();\n    fail();\n  }\n catch (  IllegalArgumentException e) {\n  }\n  try {\n    sketch.getQuantile(0.5);\n    fail();\n  }\n catch (  IllegalArgumentException e) {\n  }\n  try {\n    sketch.getQuantiles(new double[]{0.0,1.0});\n    fail();\n  }\n catch (  IllegalArgumentException e) {\n  }\n  final byte[] byteArr=sketch.toByteArray(new ArrayOfStringsSerDe());\n  assertEquals(byteArr.length,8);\n  try {\n    sketch.getPMF(new String[0]);\n    fail();\n  }\n catch (  IllegalArgumentException e) {\n  }\n  try {\n    sketch.getCDF(new String[0]);\n    fail();\n  }\n catch (  IllegalArgumentException e) {\n  }\n  try {\n    sketch.getRank(\"a\");\n    fail();\n  }\n catch (  IllegalArgumentException e) {\n  }\n}\n",
    "File_Path": "datasketches-java/src/test/java/org/apache/datasketches/quantiles/ItemsSketchTest.java",
    "Start": 2142,
    "Stop": 3166,
    "Project_Name": "data/projects/datasketches-java",
    "Method_Name": "empty"
}