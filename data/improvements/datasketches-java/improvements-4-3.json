{
    "Method_Improvements": {
        "Improvements": [
            {
                "Improvement": "Avoid Empty Catch Blocks",
                "Change_Diff": "- catch (  Exception e) {\n  }\n+ catch (Exception e) {\n+     e.printStackTrace();\n+ }",
                "Description": "Empty catch blocks defeat the purpose of exceptions. At the very least, the catch block should contain a comment indicating why it is appropriate to ignore the exception.",
                "Start": 20,
                "End": 22
            },
            {
                "Improvement": "Avoid Code Duplication",
                "Change_Diff": "- (Duplicate code blocks)\n+ private void executeTest(...) {...}",
                "Description": "The code to execute the test and assert results is duplicated three times. This can be avoided by creating a helper method.",
                "Start": 12,
                "End": 43
            },
            {
                "Improvement": "Use try-with-resource",
                "Change_Diff": "- WritableHandle wh;\n- ...\n- try {\n-     wh.close();\n- }\n- catch (  Exception e) {\n- }\n+ try (WritableHandle wh = putOffHeap(...)) {...}",
                "Description": "Instead of manually closing the resource in a finally block, Java 7 introduced a new try-with-resources statement, which ensures that each resource is closed at the end of the statement.",
                "Start": 12,
                "End": 22
            }
        ],
        "Final code": "@Test public void checkWrapCompactSketchGivenDefaultSeed(){\n  final int k=64;\n  final long seed=ThetaUtil.DEFAULT_UPDATE_SEED;\n  final short seedHash=Util.computeSeedHash(seed);\n  UpdateSketch sv3usk=UpdateSketch.builder().setNominalEntries(k).setSeed(seed).build();\n  for (int i=0; i < k; i++) {\n    sv3usk.update(i);\n  }\n  CompactSketch sv3csk=sv3usk.compact();\n  runTest(sv3csk, sv3usk, seed, seedHash, true);\n  runTest(BackwardConversions.convertSerVer3toSerVer2(sv3csk,seed), sv3usk, seed, seedHash, false);\n  runTest(BackwardConversions.convertSerVer3toSerVer1(sv3csk), sv3usk, seed, seedHash, false);\n}\n\nprivate void runTest(byte[] data, UpdateSketch sv3usk, long seed, short seedHash, boolean isDirect) {\n  try (WritableHandle wh = putOffHeap(Memory.wrap(data))) {\n    CompactSketch sv3cskResult=Sketches.wrapCompactSketch(wh.getWritable(),seed);\n    assertEquals(sv3cskResult.getEstimate(),sv3usk.getEstimate());\n    assertEquals(sv3cskResult.getSeedHash(),seedHash);\n    assertEquals(sv3cskResult.isDirect(), isDirect);\n  } catch (Exception e) {\n    e.printStackTrace();\n  }\n}"
    },
    "Old_Method": "@Test public void checkWrapCompactSketchGivenDefaultSeed(){\n  final int k=64;\n  final long seed=ThetaUtil.DEFAULT_UPDATE_SEED;\n  final short seedHash=Util.computeSeedHash(seed);\n  UpdateSketch sv3usk=UpdateSketch.builder().setNominalEntries(k).setSeed(seed).build();\n  for (int i=0; i < k; i++) {\n    sv3usk.update(i);\n  }\n  CompactSketch sv3cskResult;\n  WritableHandle wh;\n  CompactSketch sv3csk=sv3usk.compact();\n  wh=putOffHeap(Memory.wrap(sv3csk.toByteArray()));\n  sv3cskResult=Sketches.wrapCompactSketch(wh.getWritable(),seed);\n  assertEquals(sv3cskResult.getEstimate(),sv3usk.getEstimate());\n  assertEquals(sv3cskResult.getSeedHash(),seedHash);\n  assertTrue(sv3cskResult.isDirect());\n  try {\n    wh.close();\n  }\n catch (  Exception e) {\n  }\n  wh=putOffHeap(BackwardConversions.convertSerVer3toSerVer2(sv3csk,seed));\n  sv3cskResult=Sketches.wrapCompactSketch(wh.getWritable(),seed);\n  assertEquals(sv3cskResult.getEstimate(),sv3usk.getEstimate());\n  assertEquals(sv3cskResult.getSeedHash(),seedHash);\n  assertFalse(sv3cskResult.isDirect());\n  try {\n    wh.close();\n  }\n catch (  Exception e) {\n  }\n  wh=putOffHeap(BackwardConversions.convertSerVer3toSerVer1(sv3csk));\n  sv3cskResult=Sketches.wrapCompactSketch(wh.getWritable(),seed);\n  assertEquals(sv3cskResult.getEstimate(),sv3usk.getEstimate());\n  assertEquals(sv3cskResult.getSeedHash(),seedHash);\n  assertFalse(sv3cskResult.isDirect());\n  try {\n    wh.close();\n  }\n catch (  Exception e) {\n  }\n}\n",
    "File_Path": "datasketches-java/src/test/java/org/apache/datasketches/theta/HeapifyWrapSerVer1and2Test.java",
    "Start": 14530,
    "Stop": 16090,
    "Project_Name": "data/projects/datasketches-java",
    "Method_Name": "checkWrapCompactSketchGivenDefaultSeed"
}