{
    "Method_Improvements": {
        "Improvements": [{
            "Improvement": "Remove duplicate code",
            "Change_Diff": "- try {\n    wh.close();\n} catch (Exception e) {\n}\n\nwh=putOffHeap(BackwardConversions.convertSerVer3toSerVer2(sv3csk,seed));\nsv3cskResult=Sketches.wrapCompactSketch(wh.getWritable(),seed);\nassertEquals(sv3cskResult.getEstimate(),sv3usk.getEstimate());\nassertEquals(sv3cskResult.getSeedHash(),seedHash);\nassertFalse(sv3cskResult.isDirect());\n\ntry {\n    wh.close();\n} catch (Exception e) {\n}\n\nwh=putOffHeap(BackwardConversions.convertSerVer3toSerVer1(sv3csk));\nsv3cskResult=Sketches.wrapCompactSketch(wh.getWritable(),seed);\nassertEquals(sv3cskResult.getEstimate(),sv3usk.getEstimate());\nassertEquals(sv3cskResult.getSeedHash(),seedHash);\nassertFalse(sv3cskResult.isDirect());\n\ntry {\n    wh.close();\n} catch (Exception e) {\n}\n\n+ testCompactSketch(sv3csk, sv3usk, seed, seedHash, false);\n+ testCompactSketch(BackwardConversions.convertSerVer3toSerVer2(sv3csk,seed), sv3usk, seed, seedHash, false);\n+ testCompactSketch(BackwardConversions.convertSerVer3toSerVer1(sv3csk), sv3usk, seed, seedHash, false);",
            "Description": "The try-catch block for closing the 'WritableHandle' and the block of code where you wrap the CompactSketch and make assertions are repeated three times. This code can be extracted to a separate method to avoid duplication.",
            "Start": 13,
            "End": 45
        }],
        "Final code": "@Test public void checkWrapCompactSketchGivenDefaultSeed(){\n    final int k=64;\n    final long seed=ThetaUtil.DEFAULT_UPDATE_SEED;\n    final short seedHash=Util.computeSeedHash(seed);\n    UpdateSketch sv3usk=UpdateSketch.builder().setNominalEntries(k).setSeed(seed).build();\n    for (int i=0; i < k; i++) {\n        sv3usk.update(i);\n    }\n    CompactSketch sv3cskResult;\n    WritableHandle wh;\n    CompactSketch sv3csk=sv3usk.compact();\n    testCompactSketch(sv3csk, sv3usk, seed, seedHash, true);\n    testCompactSketch(BackwardConversions.convertSerVer3toSerVer2(sv3csk,seed), sv3usk, seed, seedHash, false);\n    testCompactSketch(BackwardConversions.convertSerVer3toSerVer1(sv3csk), sv3usk, seed, seedHash, false);\n}\n\nprivate void testCompactSketch(CompactSketch sv3csk, UpdateSketch sv3usk, long seed, short seedHash, boolean isDirect) {\n    WritableHandle wh = putOffHeap(Memory.wrap(sv3csk.toByteArray()));\n    CompactSketch sv3cskResult = Sketches.wrapCompactSketch(wh.getWritable(),seed);\n    assertEquals(sv3cskResult.getEstimate(),sv3usk.getEstimate());\n    assertEquals(sv3cskResult.getSeedHash(),seedHash);\n    assertEquals(sv3cskResult.isDirect(), isDirect);\n    try {\n        wh.close();\n    } catch (Exception e) {\n    }\n}"
    },
    "Old_Method": "@Test public void checkWrapCompactSketchGivenDefaultSeed(){\n  final int k=64;\n  final long seed=ThetaUtil.DEFAULT_UPDATE_SEED;\n  final short seedHash=Util.computeSeedHash(seed);\n  UpdateSketch sv3usk=UpdateSketch.builder().setNominalEntries(k).setSeed(seed).build();\n  for (int i=0; i < k; i++) {\n    sv3usk.update(i);\n  }\n  CompactSketch sv3cskResult;\n  WritableHandle wh;\n  CompactSketch sv3csk=sv3usk.compact();\n  wh=putOffHeap(Memory.wrap(sv3csk.toByteArray()));\n  sv3cskResult=Sketches.wrapCompactSketch(wh.getWritable(),seed);\n  assertEquals(sv3cskResult.getEstimate(),sv3usk.getEstimate());\n  assertEquals(sv3cskResult.getSeedHash(),seedHash);\n  assertTrue(sv3cskResult.isDirect());\n  try {\n    wh.close();\n  }\n catch (  Exception e) {\n  }\n  wh=putOffHeap(BackwardConversions.convertSerVer3toSerVer2(sv3csk,seed));\n  sv3cskResult=Sketches.wrapCompactSketch(wh.getWritable(),seed);\n  assertEquals(sv3cskResult.getEstimate(),sv3usk.getEstimate());\n  assertEquals(sv3cskResult.getSeedHash(),seedHash);\n  assertFalse(sv3cskResult.isDirect());\n  try {\n    wh.close();\n  }\n catch (  Exception e) {\n  }\n  wh=putOffHeap(BackwardConversions.convertSerVer3toSerVer1(sv3csk));\n  sv3cskResult=Sketches.wrapCompactSketch(wh.getWritable(),seed);\n  assertEquals(sv3cskResult.getEstimate(),sv3usk.getEstimate());\n  assertEquals(sv3cskResult.getSeedHash(),seedHash);\n  assertFalse(sv3cskResult.isDirect());\n  try {\n    wh.close();\n  }\n catch (  Exception e) {\n  }\n}\n",
    "File_Path": "datasketches-java/src/test/java/org/apache/datasketches/theta/HeapifyWrapSerVer1and2Test.java",
    "Start": 14530,
    "Stop": 16090,
    "Project_Name": "data/projects/datasketches-java",
    "Method_Name": "checkWrapCompactSketchGivenDefaultSeed"
}