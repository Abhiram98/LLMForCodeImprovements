{
    "Method_Improvements": {
        "Improvements": [
            {
                "Improvement": "Use @Before annotation for initializations",
                "Change_Diff": "- final ItemsSketch<String> sketch=ItemsSketch.getInstance(String.class,128,Comparator.naturalOrder());\n- assertNotNull(sketch);\n- sketch.update(null);\n+ @Before\n+ public void setUp() {\n+    sketch = ItemsSketch.getInstance(String.class,128,Comparator.naturalOrder());\n+    assertNotNull(sketch);\n+    sketch.update(null);\n+ }",
                "Description": "In JUnit framework, we can use the @Before annotation to indicate that the annotated method will be run before each test. This is useful when we want to avoid repetitive code in our tests. In this case, we can use this feature to initialize the sketch variable, which is used in all test cases.",
                "Start": 1,
                "End": 3
            },
            {
                "Improvement": "Assert specific exception messages",
                "Change_Diff": "- try {\n-    sketch.getMinItem();\n-    fail();\n- }\n- catch (  IllegalArgumentException e) {\n- }\n+ @Test(expected = IllegalArgumentException.class)\n+ public void testGetMinItem() {\n+    sketch.getMinItem();\n+ }",
                "Description": "In the current test cases, it is only checked whether an exception is thrown, but not what kind of exception. We can use the expected attribute of the @Test annotation to specify what exception we expect. This way, we can ensure that the correct exception is thrown, and not just any exception.",
                "Start": 8,
                "End": 38
            },
            {
                "Improvement": "Use assertThrows for exception testing",
                "Change_Diff": "- try {\n-    sketch.getQuantile(0.5);\n-    fail();\n- }\n- catch (  IllegalArgumentException e) {\n- }\n+ assertThrows(IllegalArgumentException.class, () -> sketch.getQuantile(0.5));",
                "Description": "JUnit 5 introduces the assertThrows method, which makes testing expected exceptions more straightforward and the code cleaner. We can replace the traditional try-catch-fail idiom with it.",
                "Start": 8,
                "End": 38
            }
        ],
        "Final code": "@Test public void empty() {\n  @Before\n  public void setUp() {\n    final ItemsSketch<String> sketch=ItemsSketch.getInstance(String.class,128,Comparator.naturalOrder());\n    assertNotNull(sketch);\n    sketch.update(null);\n  }\n\n  assertTrue(sketch.isEmpty());\n  assertEquals(sketch.getN(),0);\n  assertEquals(sketch.getNumRetained(),0);\n  @Test(expected = IllegalArgumentException.class)\n  public void testGetMinItem() {\n    sketch.getMinItem();\n  }\n\n  assertThrows(IllegalArgumentException.class, () -> sketch.getQuantile(0.5));\n\n  final byte[] byteArr=sketch.toByteArray(new ArrayOfStringsSerDe());\n  assertEquals(byteArr.length,8);\n\n  assertThrows(IllegalArgumentException.class, () -> sketch.getPMF(new String[0]));\n\n  assertThrows(IllegalArgumentException.class, () -> sketch.getCDF(new String[0]));\n\n  assertThrows(IllegalArgumentException.class, () -> sketch.getRank(\"a\"));\n\n}"
    },
    "Old_Method": "@Test public void empty(){\n  final ItemsSketch<String> sketch=ItemsSketch.getInstance(String.class,128,Comparator.naturalOrder());\n  assertNotNull(sketch);\n  sketch.update(null);\n  assertTrue(sketch.isEmpty());\n  assertEquals(sketch.getN(),0);\n  assertEquals(sketch.getNumRetained(),0);\n  try {\n    sketch.getMinItem();\n    fail();\n  }\n catch (  IllegalArgumentException e) {\n  }\n  try {\n    sketch.getMaxItem();\n    fail();\n  }\n catch (  IllegalArgumentException e) {\n  }\n  try {\n    sketch.getQuantile(0.5);\n    fail();\n  }\n catch (  IllegalArgumentException e) {\n  }\n  try {\n    sketch.getQuantiles(new double[]{0.0,1.0});\n    fail();\n  }\n catch (  IllegalArgumentException e) {\n  }\n  final byte[] byteArr=sketch.toByteArray(new ArrayOfStringsSerDe());\n  assertEquals(byteArr.length,8);\n  try {\n    sketch.getPMF(new String[0]);\n    fail();\n  }\n catch (  IllegalArgumentException e) {\n  }\n  try {\n    sketch.getCDF(new String[0]);\n    fail();\n  }\n catch (  IllegalArgumentException e) {\n  }\n  try {\n    sketch.getRank(\"a\");\n    fail();\n  }\n catch (  IllegalArgumentException e) {\n  }\n}\n",
    "File_Path": "datasketches-java/src/test/java/org/apache/datasketches/quantiles/ItemsSketchTest.java",
    "Start": 2142,
    "Stop": 3166,
    "Project_Name": "data/projects/datasketches-java",
    "Method_Name": "empty"
}