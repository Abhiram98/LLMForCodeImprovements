{
    "Method_Improvements": [{
        "Improvements": [
            {
                "Improvement": "Replace magic numbers with named constants",
                "Change_Diff": "- buf[off++]=(byte)(values[i + 0] >>> 50);\n+ buf[off++]=(byte)(values[i + 0] >>> FIRST_SHIFT);",
                "Description": "Replace magic numbers with named constants for better readability and maintainability.",
                "Start": 2,
                "End": 89
            },
            {
                "Improvement": "Use a loop for repetitive code",
                "Change_Diff": "- buf[off++]=(byte)(values[i + 0] >>> 50);\n- buf[off++]=(byte)(values[i + 0] >>> 42);\n- buf[off++]=(byte)(values[i + 0] >>> 34);\n- buf[off++]=(byte)(values[i + 0] >>> 26);\n- buf[off++]=(byte)(values[i + 0] >>> 18);\n- buf[off++]=(byte)(values[i + 0] >>> 10);\n- buf[off++]=(byte)(values[i + 0] >>> 2);\n- buf[off]=(byte)(values[i + 0] << 6);",
                "Description": "Use a loop to avoid repetitive code.",
                "Start": 2,
                "End": 45
            }
        ],
        "Final code": "static void packBits58(final long[] values,final int i,final byte[] buf,int off) {\n  for (int j = 0; j < 8; j++) {\n    buf[off++]=(byte)(values[i + j] >>> FIRST_SHIFT);\n  }\n}"
    }],
    "Old_Method": "static void packBits58(final long[] values,final int i,final byte[] buf,int off){\n  buf[off++]=(byte)(values[i + 0] >>> 50);\n  buf[off++]=(byte)(values[i + 0] >>> 42);\n  buf[off++]=(byte)(values[i + 0] >>> 34);\n  buf[off++]=(byte)(values[i + 0] >>> 26);\n  buf[off++]=(byte)(values[i + 0] >>> 18);\n  buf[off++]=(byte)(values[i + 0] >>> 10);\n  buf[off++]=(byte)(values[i + 0] >>> 2);\n  buf[off]=(byte)(values[i + 0] << 6);\n  buf[off++]|=values[i + 1] >>> 52;\n  buf[off++]=(byte)(values[i + 1] >>> 44);\n  buf[off++]=(byte)(values[i + 1] >>> 36);\n  buf[off++]=(byte)(values[i + 1] >>> 28);\n  buf[off++]=(byte)(values[i + 1] >>> 20);\n  buf[off++]=(byte)(values[i + 1] >>> 12);\n  buf[off++]=(byte)(values[i + 1] >>> 4);\n  buf[off]=(byte)(values[i + 1] << 4);\n  buf[off++]|=values[i + 2] >>> 54;\n  buf[off++]=(byte)(values[i + 2] >>> 46);\n  buf[off++]=(byte)(values[i + 2] >>> 38);\n  buf[off++]=(byte)(values[i + 2] >>> 30);\n  buf[off++]=(byte)(values[i + 2] >>> 22);\n  buf[off++]=(byte)(values[i + 2] >>> 14);\n  buf[off++]=(byte)(values[i + 2] >>> 6);\n  buf[off]=(byte)(values[i + 2] << 2);\n  buf[off++]|=values[i + 3] >>> 56;\n  buf[off++]=(byte)(values[i + 3] >>> 48);\n  buf[off++]=(byte)(values[i + 3] >>> 40);\n  buf[off++]=(byte)(values[i + 3] >>> 32);\n  buf[off++]=(byte)(values[i + 3] >>> 24);\n  buf[off++]=(byte)(values[i + 3] >>> 16);\n  buf[off++]=(byte)(values[i + 3] >>> 8);\n  buf[off++]=(byte)(values[i + 3]);\n  buf[off++]=(byte)(values[i + 4] >>> 50);\n  buf[off++]=(byte)(values[i + 4] >>> 42);\n  buf[off++]=(byte)(values[i + 4] >>> 34);\n  buf[off++]=(byte)(values[i + 4] >>> 26);\n  buf[off++]=(byte)(values[i + 4] >>> 18);\n  buf[off++]=(byte)(values[i + 4] >>> 10);\n  buf[off++]=(byte)(values[i + 4] >>> 2);\n  buf[off]=(byte)(values[i + 4] << 6);\n  buf[off++]|=values[i + 5] >>> 52;\n  buf[off++]=(byte)(values[i + 5] >>> 44);\n  buf[off++]=(byte)(values[i + 5] >>> 36);\n  buf[off++]=(byte)(values[i + 5] >>> 28);\n  buf[off++]=(byte)(values[i + 5] >>> 20);\n  buf[off++]=(byte)(values[i + 5] >>> 12);\n  buf[off++]=(byte)(values[i + 5] >>> 4);\n  buf[off]=(byte)(values[i + 5] << 4);\n  buf[off++]|=values[i + 6] >>> 54;\n  buf[off++]=(byte)(values[i + 6] >>> 46);\n  buf[off++]=(byte)(values[i + 6] >>> 38);\n  buf[off++]=(byte)(values[i + 6] >>> 30);\n  buf[off++]=(byte)(values[i + 6] >>> 22);\n  buf[off++]=(byte)(values[i + 6] >>> 14);\n  buf[off++]=(byte)(values[i + 6] >>> 6);\n  buf[off]=(byte)(values[i + 6] << 2);\n  buf[off++]|=values[i + 7] >>> 56;\n  buf[off++]=(byte)(values[i + 7] >>> 48);\n  buf[off++]=(byte)(values[i + 7] >>> 40);\n  buf[off++]=(byte)(values[i + 7] >>> 32);\n  buf[off++]=(byte)(values[i + 7] >>> 24);\n  buf[off++]=(byte)(values[i + 7] >>> 16);\n  buf[off++]=(byte)(values[i + 7] >>> 8);\n  buf[off]=(byte)(values[i + 7]);\n}\n",
    "File_Path": "datasketches-java/src/main/java/org/apache/datasketches/theta/BitPacking.java",
    "Start": 105006,
    "Stop": 108078,
    "Project_Name": "data/projects/datasketches-java",
    "Method_Name": "packBits58"
}