{
    "Method_Improvements": {
        "Improvements": [
            {
                "Improvement": "Use @Before annotation to initialize sketch object",
                "Change_Diff": "- final ItemsSketch<String> sketch=ItemsSketch.getInstance(String.class,128,Comparator.naturalOrder());\n- assertNotNull(sketch);\n+ @Before\n+ public void setUp() {\n+   sketch = ItemsSketch.getInstance(String.class,128,Comparator.naturalOrder());\n+   assertNotNull(sketch);\n+ }",
                "Description": "Instead of initializing the sketch object in every test method, you can use the @Before annotation from JUnit. This annotation is used to signal that the annotated method should be executed before each test in the current test class.",
                "Start": 2,
                "End": 3
            },
            {
                "Improvement": "Use @Test(expected = Exception.class) to simplify exception testing",
                "Change_Diff": "- try {\n-   sketch.getMinItem();\n-   fail();\n- }\n- catch (  IllegalArgumentException e) {\n- }\n+ @Test(expected = IllegalArgumentException.class)\n+ public void testGetMinItemException() {\n+   sketch.getMinItem();\n+ }",
                "Description": "Instead of using a try/catch block to test for an exception, use the @Test annotation's expected attribute to declare the expected exception. This makes the test code cleaner and easier to read.",
                "Start": 11,
                "End": 33
            }
        ],
        "Final code": "@Before\npublic void setUp() {\n  sketch = ItemsSketch.getInstance(String.class,128,Comparator.naturalOrder());\n  assertNotNull(sketch);\n}\n\n@Test public void empty(){\n  sketch.update(null);\n  assertTrue(sketch.isEmpty());\n  assertEquals(sketch.getN(),0);\n  assertEquals(sketch.getNumRetained(),0);\n  final byte[] byteArr=sketch.toByteArray(new ArrayOfStringsSerDe());\n  assertEquals(byteArr.length,8);\n}\n\n@Test(expected = IllegalArgumentException.class)\npublic void testGetMinItemException() {\n  sketch.getMinItem();\n}\n\n@Test(expected = IllegalArgumentException.class)\npublic void testGetMaxItemException() {\n  sketch.getMaxItem();\n}\n\n@Test(expected = IllegalArgumentException.class)\npublic void testGetQuantileException() {\n  sketch.getQuantile(0.5);\n}\n\n@Test(expected = IllegalArgumentException.class)\npublic void testGetQuantilesException() {\n  sketch.getQuantiles(new double[]{0.0,1.0});\n}\n\n@Test(expected = IllegalArgumentException.class)\npublic void testGetPMFException() {\n  sketch.getPMF(new String[0]);\n}\n\n@Test(expected = IllegalArgumentException.class)\npublic void testGetCDFException() {\n  sketch.getCDF(new String[0]);\n}\n\n@Test(expected = IllegalArgumentException.class)\npublic void testGetRankException() {\n  sketch.getRank(\"a\");\n}\n"
    },
    "Old_Method": "@Test public void empty(){\n  final ItemsSketch<String> sketch=ItemsSketch.getInstance(String.class,128,Comparator.naturalOrder());\n  assertNotNull(sketch);\n  sketch.update(null);\n  assertTrue(sketch.isEmpty());\n  assertEquals(sketch.getN(),0);\n  assertEquals(sketch.getNumRetained(),0);\n  try {\n    sketch.getMinItem();\n    fail();\n  }\n catch (  IllegalArgumentException e) {\n  }\n  try {\n    sketch.getMaxItem();\n    fail();\n  }\n catch (  IllegalArgumentException e) {\n  }\n  try {\n    sketch.getQuantile(0.5);\n    fail();\n  }\n catch (  IllegalArgumentException e) {\n  }\n  try {\n    sketch.getQuantiles(new double[]{0.0,1.0});\n    fail();\n  }\n catch (  IllegalArgumentException e) {\n  }\n  final byte[] byteArr=sketch.toByteArray(new ArrayOfStringsSerDe());\n  assertEquals(byteArr.length,8);\n  try {\n    sketch.getPMF(new String[0]);\n    fail();\n  }\n catch (  IllegalArgumentException e) {\n  }\n  try {\n    sketch.getCDF(new String[0]);\n    fail();\n  }\n catch (  IllegalArgumentException e) {\n  }\n  try {\n    sketch.getRank(\"a\");\n    fail();\n  }\n catch (  IllegalArgumentException e) {\n  }\n}\n",
    "File_Path": "datasketches-java/src/test/java/org/apache/datasketches/quantiles/ItemsSketchTest.java",
    "Start": 2142,
    "Stop": 3166,
    "Project_Name": "data/projects/datasketches-java",
    "Method_Name": "empty"
}