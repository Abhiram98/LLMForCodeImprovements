{
    "Method_Improvements": {
        "Improvements": [{
            "Improvement": "Use @Test(expected = Exception.class) to handle exceptions",
            "Change_Diff": "- try {\n    sketch.getMinItem();\n    fail();\n}\ncatch (  IllegalArgumentException e) {\n}\ntry {\n    sketch.getMaxItem();\n    fail();\n}\ncatch (  IllegalArgumentException e) {\n}\ntry {\n    sketch.getQuantile(0.5);\n    fail();\n}\ncatch (  IllegalArgumentException e) {\n}\ntry {\n    sketch.getQuantiles(new double[]{0.0,1.0});\n    fail();\n}\ncatch (  IllegalArgumentException e) {\n}\ntry {\n    sketch.getPMF(new String[0]);\n    fail();\n}\ncatch (  IllegalArgumentException e) {\n}\ntry {\n    sketch.getCDF(new String[0]);\n    fail();\n}\ncatch (  IllegalArgumentException e) {\n}\ntry {\n    sketch.getRank(\"a\");\n    fail();\n}\ncatch (  IllegalArgumentException e) {\n}\n+ @Test(expected = IllegalArgumentException.class)\npublic void testMinItem() {\n    sketch.getMinItem();\n}\n@Test(expected = IllegalArgumentException.class)\npublic void testMaxItem() {\n    sketch.getMaxItem();\n}\n@Test(expected = IllegalArgumentException.class)\npublic void testQuantile() {\n    sketch.getQuantile(0.5);\n}\n@Test(expected = IllegalArgumentException.class)\npublic void testQuantiles() {\n    sketch.getQuantiles(new double[]{0.0,1.0});\n}\n@Test(expected = IllegalArgumentException.class)\npublic void testPMF() {\n    sketch.getPMF(new String[0]);\n}\n@Test(expected = IllegalArgumentException.class)\npublic void testCDF() {\n    sketch.getCDF(new String[0]);\n}\n@Test(expected = IllegalArgumentException.class)\npublic void testRank() {\n    sketch.getRank(\"a\");\n}",
            "Description": "The current code is catching exceptions and failing if they do not occur. This can be simplified by using JUnit's @Test(expected = Exception.class) annotation to expect these exceptions, which makes the code more readable and concise.",
            "Start": 9,
            "End": 36
        }],
        "Final code": "@Test public void empty(){\n  final ItemsSketch<String> sketch=ItemsSketch.getInstance(String.class,128,Comparator.naturalOrder());\n  assertNotNull(sketch);\n  sketch.update(null);\n  assertTrue(sketch.isEmpty());\n  assertEquals(sketch.getN(),0);\n  assertEquals(sketch.getNumRetained(),0);\n\n  @Test(expected = IllegalArgumentException.class)\n  public void testMinItem() {\n      sketch.getMinItem();\n  }\n  @Test(expected = IllegalArgumentException.class)\n  public void testMaxItem() {\n      sketch.getMaxItem();\n  }\n  @Test(expected = IllegalArgumentException.class)\n  public void testQuantile() {\n      sketch.getQuantile(0.5);\n  }\n  @Test(expected = IllegalArgumentException.class)\n  public void testQuantiles() {\n      sketch.getQuantiles(new double[]{0.0,1.0});\n  }\n\n  final byte[] byteArr=sketch.toByteArray(new ArrayOfStringsSerDe());\n  assertEquals(byteArr.length,8);\n\n  @Test(expected = IllegalArgumentException.class)\n  public void testPMF() {\n      sketch.getPMF(new String[0]);\n  }\n  @Test(expected = IllegalArgumentException.class)\n  public void testCDF() {\n      sketch.getCDF(new String[0]);\n  }\n  @Test(expected = IllegalArgumentException.class)\n  public void testRank() {\n      sketch.getRank(\"a\");\n  }\n}"
    },
    "Old_Method": "@Test public void empty(){\n  final ItemsSketch<String> sketch=ItemsSketch.getInstance(String.class,128,Comparator.naturalOrder());\n  assertNotNull(sketch);\n  sketch.update(null);\n  assertTrue(sketch.isEmpty());\n  assertEquals(sketch.getN(),0);\n  assertEquals(sketch.getNumRetained(),0);\n  try {\n    sketch.getMinItem();\n    fail();\n  }\n catch (  IllegalArgumentException e) {\n  }\n  try {\n    sketch.getMaxItem();\n    fail();\n  }\n catch (  IllegalArgumentException e) {\n  }\n  try {\n    sketch.getQuantile(0.5);\n    fail();\n  }\n catch (  IllegalArgumentException e) {\n  }\n  try {\n    sketch.getQuantiles(new double[]{0.0,1.0});\n    fail();\n  }\n catch (  IllegalArgumentException e) {\n  }\n  final byte[] byteArr=sketch.toByteArray(new ArrayOfStringsSerDe());\n  assertEquals(byteArr.length,8);\n  try {\n    sketch.getPMF(new String[0]);\n    fail();\n  }\n catch (  IllegalArgumentException e) {\n  }\n  try {\n    sketch.getCDF(new String[0]);\n    fail();\n  }\n catch (  IllegalArgumentException e) {\n  }\n  try {\n    sketch.getRank(\"a\");\n    fail();\n  }\n catch (  IllegalArgumentException e) {\n  }\n}\n",
    "File_Path": "datasketches-java/src/test/java/org/apache/datasketches/quantiles/ItemsSketchTest.java",
    "Start": 2142,
    "Stop": 3166,
    "Project_Name": "data/projects/datasketches-java",
    "Method_Name": "empty"
}