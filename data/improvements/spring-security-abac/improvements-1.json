{
    "Method_Improvements": [{
        "Improvements": [
            {
                "Improvement": "Extract method to generate template data",
                "Change_Diff": "- Map<String, Object> templateData = generateFreemakerTemplateData(jsonKeyValuePairs);\n+  Map<String, Object> templateData = generateTemplateData(jsonKeyValuePairs);",
                "Description": "Extract the code of generating template data into a separate method for better code readability and reusability.",
                "Start": 3,
                "End": 3
            },
            {
                "Improvement": "Refactor code to use try-with-resources",
                "Change_Diff": "- StringWriter out = new StringWriter();\n+ try (StringWriter out = new StringWriter()) {",
                "Description": "Use the try-with-resources statement to automatically close the StringWriter after use.",
                "Start": 26,
                "End": 26
            },
            {
                "Improvement": "Extract method to retrieve XACML request from JSONObject",
                "Change_Diff": "- xacmlRequest = new JSONObject(out.toString()).get(policyName).toString();\n+ xacmlRequest = getXacmlRequest(out.toString(), policyName);",
                "Description": "Extract the code of retrieving XACML request from the JSONObject into a separate method for better code readability and reusability.",
                "Start": 28,
                "End": 28
            }
        ],
        "Final code": "@Override\npublic String createAuthRequest(String policyName, String jsonKeyValuePairs) {\n  Map<String, Object> templateData = generateTemplateData(jsonKeyValuePairs);\n  String key = Base64.getEncoder().encodeToString(policyName.concat(jsonKeyValuePairs).concat(getTemplateDataAsAString(templateData)).trim().getBytes());\n  String cachedRequest = this.requestBuilderCache.get(key);\n  if (cachedRequest != null) {\n    return cachedRequest;\n  }\n  String xacmlRequest;\n  try (StringWriter out = new StringWriter()) {\n    Configuration cfg = new Configuration(new Version(\"2.3.23\"));\n    cfg.setClassForTemplateLoading(this.getClass(), \"/\");\n    cfg.setDefaultEncoding(\"UTF-8\");\n    Template template = cfg.getTemplate(ATTRIBUTE_CONFIG_FILE_NAME);\n    template.process(templateData, out);\n    xacmlRequest = getXacmlRequest(out.toString(), policyName);\n    out.flush();\n  } catch (IOException | TemplateException e) {\n    throw new AttributeEvaluatorException(\"Failed to build the XACML Json request for policy with name: \" + policyName, e);\n  }\n  if (xacmlRequest == null || xacmlRequest.isEmpty()) {\n    throw new AttributeEvaluatorException(\"Generated XACML request is empty or NULL for policy with name: \" + policyName);\n  }\n  return this.requestBuilderCache.putIfAbsent(key, xacmlRequest);\n}"
    }],
    "Old_Method": "@Override public String createAuthRequest(String policyName,String jsonKeyValuePairs){\n  Map<String,Object> templateData=generateFreemakerTemplateData(jsonKeyValuePairs);\n  String key=Base64.getEncoder().encodeToString(policyName.concat(jsonKeyValuePairs).concat(getTemplateDataAsAString(templateData)).trim().getBytes());\n  String cachedRequest=this.requestBuilderCache.get(key);\n  if (cachedRequest != null) {\n    return cachedRequest;\n  }\n  String xacmlRequest;\n  try (StringWriter out=new StringWriter()){\n    Configuration cfg=new Configuration(new Version(\"2.3.23\"));\n    cfg.setClassForTemplateLoading(this.getClass(),\"/\");\n    cfg.setDefaultEncoding(\"UTF-8\");\n    Template template=cfg.getTemplate(ATTRIBUTE_CONFIG_FILE_NAME);\n    template.process(templateData,out);\n    xacmlRequest=new JSONObject(out.toString()).get(policyName).toString();\n    out.flush();\n  }\n catch (  IOException|TemplateException e) {\n    throw new AttributeEvaluatorException(\"Failed to build the XACML Json request for policy with name : \" + policyName,e);\n  }\n  if (xacmlRequest == null || xacmlRequest.isEmpty()) {\n    throw new AttributeEvaluatorException(\"Generated XACML request is empty or NULL for policy with name : \" + policyName);\n  }\n  return this.requestBuilderCache.putIfAbsent(key,xacmlRequest);\n}\n",
    "File_Path": "spring-security-abac/sdk/src/main/java/org/wso2/spring/security/abac/util/XacmlAuthRequestBuilder.java",
    "Start": 1262,
    "Stop": 2829,
    "Project_Name": "data/projects/spring-security-abac",
    "Method_Name": "createAuthRequest"
}