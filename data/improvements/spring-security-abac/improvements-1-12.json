{
    "Method_Improvements": {
        "Improvements": [
            {
                "Improvement": "Use StringBuilder instead of concatenation in loop",
                "Change_Diff": "- String key=Base64.getEncoder().encodeToString(policyName.concat(jsonKeyValuePairs).concat(getTemplateDataAsAString(templateData)).trim().getBytes());\n+ StringBuilder sb = new StringBuilder();\n+ sb.append(policyName).append(jsonKeyValuePairs).append(getTemplateDataAsAString(templateData)).trim();\n+ String key=Base64.getEncoder().encodeToString(sb.toString().getBytes());",
                "Description": "String concatenation in Java is costly operation, especially inside a loop. It is better to use StringBuilder to improve performance.",
                "Start": 4,
                "End": 4
            },
            {
                "Improvement": "Move Configuration initialization to class level",
                "Change_Diff": "- Configuration cfg=new Configuration(new Version(\"2.3.23\"));\n- cfg.setClassForTemplateLoading(this.getClass(),\"/\");\n- cfg.setDefaultEncoding(\"UTF-8\");\n+ // Move to class level",
                "Description": "Configuration initialization can be moved to class level as it does not change per method call. It will improve the performance by not creating Configuration object every time method is called.",
                "Start": 10,
                "End": 12
            },
            {
                "Improvement": "Use Optional to avoid null checks",
                "Change_Diff": "- if (xacmlRequest == null || xacmlRequest.isEmpty()) {\n-     throw new AttributeEvaluatorException(\"Generated XACML request is empty or NULL for policy with name : \" + policyName);\n+ Optional<String> optXacmlRequest = Optional.ofNullable(xacmlRequest);\n+ if (!optXacmlRequest.isPresent() || optXacmlRequest.get().isEmpty()) {\n+     throw new AttributeEvaluatorException(\"Generated XACML request is empty or NULL for policy with name : \" + policyName);\n+ }",
                "Description": "Optional is a container object which may or may not contain a non-null value. It is used to avoid NullPointerException in Java. We can use Optional to avoid null and empty checks for xacmlRequest.",
                "Start": 20,
                "End": 22
            }
        ],
        "Final code": "@Override public String createAuthRequest(String policyName,String jsonKeyValuePairs){\n  Map<String,Object> templateData=generateFreemakerTemplateData(jsonKeyValuePairs);\n  StringBuilder sb = new StringBuilder();\n  sb.append(policyName).append(jsonKeyValuePairs).append(getTemplateDataAsAString(templateData)).trim();\n  String key=Base64.getEncoder().encodeToString(sb.toString().getBytes());\n  String cachedRequest=this.requestBuilderCache.get(key);\n  if (cachedRequest != null) {\n    return cachedRequest;\n  }\n  String xacmlRequest;\n  try (StringWriter out=new StringWriter()){\n    Template template=cfg.getTemplate(ATTRIBUTE_CONFIG_FILE_NAME);\n    template.process(templateData,out);\n    xacmlRequest=new JSONObject(out.toString()).get(policyName).toString();\n    out.flush();\n  }\n catch (  IOException|TemplateException e) {\n    throw new AttributeEvaluatorException(\"Failed to build the XACML Json request for policy with name : \" + policyName,e);\n  }\n  Optional<String> optXacmlRequest = Optional.ofNullable(xacmlRequest);\n  if (!optXacmlRequest.isPresent() || optXacmlRequest.get().isEmpty()) {\n    throw new AttributeEvaluatorException(\"Generated XACML request is empty or NULL for policy with name : \" + policyName);\n  }\n  return this.requestBuilderCache.putIfAbsent(key,optXacmlRequest.get());\n}"
    },
    "Old_Method": "@Override public String createAuthRequest(String policyName,String jsonKeyValuePairs){\n  Map<String,Object> templateData=generateFreemakerTemplateData(jsonKeyValuePairs);\n  String key=Base64.getEncoder().encodeToString(policyName.concat(jsonKeyValuePairs).concat(getTemplateDataAsAString(templateData)).trim().getBytes());\n  String cachedRequest=this.requestBuilderCache.get(key);\n  if (cachedRequest != null) {\n    return cachedRequest;\n  }\n  String xacmlRequest;\n  try (StringWriter out=new StringWriter()){\n    Configuration cfg=new Configuration(new Version(\"2.3.23\"));\n    cfg.setClassForTemplateLoading(this.getClass(),\"/\");\n    cfg.setDefaultEncoding(\"UTF-8\");\n    Template template=cfg.getTemplate(ATTRIBUTE_CONFIG_FILE_NAME);\n    template.process(templateData,out);\n    xacmlRequest=new JSONObject(out.toString()).get(policyName).toString();\n    out.flush();\n  }\n catch (  IOException|TemplateException e) {\n    throw new AttributeEvaluatorException(\"Failed to build the XACML Json request for policy with name : \" + policyName,e);\n  }\n  if (xacmlRequest == null || xacmlRequest.isEmpty()) {\n    throw new AttributeEvaluatorException(\"Generated XACML request is empty or NULL for policy with name : \" + policyName);\n  }\n  return this.requestBuilderCache.putIfAbsent(key,xacmlRequest);\n}\n",
    "File_Path": "spring-security-abac/sdk/src/main/java/org/wso2/spring/security/abac/util/XacmlAuthRequestBuilder.java",
    "Start": 1262,
    "Stop": 2829,
    "Project_Name": "data/projects/spring-security-abac",
    "Method_Name": "createAuthRequest"
}