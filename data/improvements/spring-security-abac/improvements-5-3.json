{
    "Method_Improvements": {
        "Improvements": [
            {
                "Improvement": "Extract property loading to a separate method",
                "Change_Diff": "- Properties properties=PropertiesLoaderUtils.loadAllProperties(\"application.properties\");\n- XACML_PDP_ENTITLEMENT_SERVICE_URL=properties.getProperty(\"xacml.pdp.url.entitlement.service\");\n- TRUST_STORE=properties.getProperty(\"xacml.pdp.trustStore\");\n- TRUST_STORE_PASSWORD=properties.getProperty(\"xacml.pdp.trustStore.password\");\n- KEY_STORE=properties.getProperty(\"xacml.pdp.keyStore\");\n- KEY_STORE_PASSWORD=properties.getProperty(\"xacml.pdp.keyStore.password\");\n+ loadProperties();",
                "Description": "Instead of loading properties in the constructor, it would be cleaner and more maintainable to extract the property loading into its separate method. This would make the code more organized and the constructor less cluttered.",
                "Start": 2,
                "End": 13
            },
            {
                "Improvement": "Extract HttpClient configuration to a separate method",
                "Change_Diff": "- this.httpClient=HttpClients.custom().setSSLContext(SSLContextBuilder.create().loadKeyMaterial(loadPfx(\"classpath:\".concat(KEY_STORE),KEY_STORE_PASSWORD.toCharArray()),KEY_STORE_PASSWORD.toCharArray()).loadTrustMaterial(ResourceUtils.getFile(\"classpath:\".concat(TRUST_STORE)),TRUST_STORE_PASSWORD.toCharArray()).build()).build();\n+ configureHttpClient();",
                "Description": "The configuration of the HttpClient is quite complex and makes the constructor difficult to read. It would be better to extract this into its own method.",
                "Start": 22,
                "End": 33
            },
            {
                "Improvement": "Extract HttpHeaders configuration to a separate method",
                "Change_Diff": "- this.restHeaders=new HttpHeaders();\n- this.restHeaders.setContentType(MediaType.APPLICATION_JSON);\n- this.restHeaders.setAccept(Collections.singletonList(MediaType.APPLICATION_JSON));\n- this.restHeaders.set(\"WSO2-Identity-User\",\"admin\");\n+ configureHttpHeaders();",
                "Description": "The configuration of HttpHeaders is a distinct task and makes the constructor difficult to read. It would be better to extract this into its own method.",
                "Start": 34,
                "End": 38
            }
        ],
        "Final code": "public XacmlAttributeHandler(){\n  try {\n    loadProperties();\n  }\n catch (  IOException e) {\n    logger.error(\"Failed to read properties from application.properties\",e);\n    stopApplication();\n  }\n  if (XACML_PDP_ENTITLEMENT_SERVICE_URL == null) {\n    logger.error(\"xacml.pdp.url.entitlement.service property is null in application.properties\");\n    stopApplication();\n  }\n  CacheManager cacheManager=EhCacheManager.getInstance();\n  this.authCache=cacheManager.getCache(\"authCache\",String.class,String.class,60,100);\n  this.entitlementAttributesCache=cacheManager.getCache(\"entitlementCache\",String.class,JSONObject.class,60,100);\n  this.apiResourceListCache=cacheManager.getCache(\"apiResourceList\",String.class,JSONObject.class,60,100);\n  try {\n    configureHttpClient();\n  }\n catch (  Exception e) {\n    logger.error(\"Failed to read trustStore/keyStore\",e);\n    SpringApplication.run(XacmlAttributeHandler.class).close();\n  }\n  configureHttpHeaders();\n  logger.info(\"XacmlAttributeHandler successfully initiated\");\n}\n\nprivate void loadProperties() throws IOException {\n  // load properties here\n}\n\nprivate void configureHttpClient() throws Exception {\n  // configure HttpClient here\n}\n\nprivate void configureHttpHeaders() {\n  // configure HttpHeaders here\n}"
    },
    "Old_Method": "public XacmlAttributeHandler(){\n  try {\n    Properties properties=PropertiesLoaderUtils.loadAllProperties(\"application.properties\");\n    XACML_PDP_ENTITLEMENT_SERVICE_URL=properties.getProperty(\"xacml.pdp.url.entitlement.service\");\n    TRUST_STORE=properties.getProperty(\"xacml.pdp.trustStore\");\n    TRUST_STORE_PASSWORD=properties.getProperty(\"xacml.pdp.trustStore.password\");\n    KEY_STORE=properties.getProperty(\"xacml.pdp.keyStore\");\n    KEY_STORE_PASSWORD=properties.getProperty(\"xacml.pdp.keyStore.password\");\n  }\n catch (  IOException e) {\n    logger.error(\"Failed to read properties from application.properties\",e);\n    stopApplication();\n  }\n  if (XACML_PDP_ENTITLEMENT_SERVICE_URL == null) {\n    logger.error(\"xacml.pdp.url.entitlement.service property is null in application.properties\");\n    stopApplication();\n  }\n  CacheManager cacheManager=EhCacheManager.getInstance();\n  this.authCache=cacheManager.getCache(\"authCache\",String.class,String.class,60,100);\n  this.entitlementAttributesCache=cacheManager.getCache(\"entitlementCache\",String.class,JSONObject.class,60,100);\n  this.apiResourceListCache=cacheManager.getCache(\"apiResourceList\",String.class,JSONObject.class,60,100);\n  try {\n    this.httpClient=HttpClients.custom().setSSLContext(SSLContextBuilder.create().loadKeyMaterial(loadPfx(\"classpath:\".concat(KEY_STORE),KEY_STORE_PASSWORD.toCharArray()),KEY_STORE_PASSWORD.toCharArray()).loadTrustMaterial(ResourceUtils.getFile(\"classpath:\".concat(TRUST_STORE)),TRUST_STORE_PASSWORD.toCharArray()).build()).build();\n  }\n catch (  Exception e) {\n    logger.error(\"Failed to read trustStore/keyStore\",e);\n    SpringApplication.run(XacmlAttributeHandler.class).close();\n  }\n  this.restHeaders=new HttpHeaders();\n  this.restHeaders.setContentType(MediaType.APPLICATION_JSON);\n  this.restHeaders.setAccept(Collections.singletonList(MediaType.APPLICATION_JSON));\n  this.restHeaders.set(\"WSO2-Identity-User\",\"admin\");\n  logger.info(\"XacmlAttributeHandler successfully initiated\");\n}\n",
    "File_Path": "spring-security-abac/sdk/src/main/java/org/wso2/spring/security/abac/XacmlAttributeHandler.java",
    "Start": 1818,
    "Stop": 4341,
    "Project_Name": "data/projects/spring-security-abac",
    "Method_Name": "XacmlAttributeHandler"
}