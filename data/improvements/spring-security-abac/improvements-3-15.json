{
    "Method_Improvements": {
        "Improvements": [
            {
                "Improvement": "Avoid Repeated String Concatenation",
                "Change_Diff": "- XACML_PDP_ENTITLEMENT_SERVICE_URL + \"/home\"\n+ String url = XACML_PDP_ENTITLEMENT_SERVICE_URL + \"/home\";",
                "Description": "The string (`XACML_PDP_ENTITLEMENT_SERVICE_URL + \"/home\"`) is concatenated multiple times in the method. It would be better to store the result in a variable and use it.",
                "Start": 2,
                "End": 14
            },
            {
                "Improvement": "Use ResponseEntity<T> to avoid calling toString() method",
                "Change_Diff": "- ResponseEntity response=rt.getForEntity(url, String.class, entity);\n+ ResponseEntity<JSONObject> response=rt.getForEntity(url, JSONObject.class, entity);\n- new JSONObject(response.getBody().toString())\n+ response.getBody()",
                "Description": "The ResponseEntity response can be parameterized with JSONObject. This way, the call to `response.getBody().toString()` can be replaced with `response.getBody()` which is more type-safe.",
                "Start": 10,
                "End": 14
            }
        ],
        "Final code": "@Override public Optional<JSONObject> getApiResourceList(){\n  String url = XACML_PDP_ENTITLEMENT_SERVICE_URL + \"/home\";\n  JSONObject cachedObject=this.apiResourceListCache.get(url);\n  if (cachedObject != null) {\n    return Optional.of(cachedObject);\n  }\n  RestTemplateBuilder restTemplateBuilder=new RestTemplateBuilder().requestFactory(() -> new HttpComponentsClientHttpRequestFactory(this.httpClient));\n  RestTemplate rt=restTemplateBuilder.build();\n  HttpEntity<String> entity=new HttpEntity<>(this.restHeaders);\n  ResponseEntity<JSONObject> response=rt.getForEntity(url,JSONObject.class,entity);\n  if (response.getStatusCode() != HttpStatus.OK) {\n    return Optional.empty();\n  }\n  return Optional.of(this.apiResourceListCache.putIfAbsent(url,response.getBody()));\n}"
    },
    "Old_Method": "@Override public Optional<JSONObject> getApiResourceList(){\n  JSONObject cachedObject=this.apiResourceListCache.get(XACML_PDP_ENTITLEMENT_SERVICE_URL + \"/home\");\n  if (cachedObject != null) {\n    return Optional.of(cachedObject);\n  }\n  RestTemplateBuilder restTemplateBuilder=new RestTemplateBuilder().requestFactory(() -> new HttpComponentsClientHttpRequestFactory(this.httpClient));\n  RestTemplate rt=restTemplateBuilder.build();\n  HttpEntity<String> entity=new HttpEntity<>(this.restHeaders);\n  ResponseEntity response=rt.getForEntity(XACML_PDP_ENTITLEMENT_SERVICE_URL + \"/home\",String.class,entity);\n  if (response.getStatusCode() != HttpStatus.OK) {\n    return Optional.empty();\n  }\n  return Optional.of(this.apiResourceListCache.putIfAbsent(XACML_PDP_ENTITLEMENT_SERVICE_URL + \"/home\",new JSONObject(response.getBody().toString())));\n}\n",
    "File_Path": "spring-security-abac/sdk/src/main/java/org/wso2/spring/security/abac/XacmlAttributeHandler.java",
    "Start": 5788,
    "Stop": 6769,
    "Project_Name": "data/projects/spring-security-abac",
    "Method_Name": "getApiResourceList"
}