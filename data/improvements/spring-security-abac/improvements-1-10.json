{
    "Method_Improvements": {
        "Improvements": [
            {
                "Improvement": "Splitting code into smaller methods",
                "Change_Diff": "- public String createAuthRequest(String policyName,String jsonKeyValuePairs){\n+ public String createAuthRequest(String policyName,String jsonKeyValuePairs){\n+   String key = generateKey(policyName, jsonKeyValuePairs);\n+   String cachedRequest = getCachedRequest(key);\n+   if (cachedRequest != null) {\n+     return cachedRequest;\n+   }\n+   String xacmlRequest = generateXacmlRequest(policyName, jsonKeyValuePairs);\n+   return cacheRequest(key, xacmlRequest);\n+ }",
                "Description": "The createAuthRequest method is doing too many things: generating data, encoding, caching, and more. This makes the code harder to read and maintain. It's better to split it into smaller methods, each with a clear, single responsibility.",
                "Start": 2,
                "End": 33
            },
            {
                "Improvement": "Use Optional instead of null",
                "Change_Diff": "- if (cachedRequest != null) {\n+ if (Optional.ofNullable(cachedRequest).isPresent()) {",
                "Description": "Instead of checking for null, it's better to use Optional. This makes the code more readable and less prone to NullPointerExceptions.",
                "Start": 7,
                "End": 9
            }
        ],
        "Final code": "public String createAuthRequest(String policyName,String jsonKeyValuePairs){\n  String key = generateKey(policyName, jsonKeyValuePairs);\n  String cachedRequest = getCachedRequest(key);\n  if (Optional.ofNullable(cachedRequest).isPresent()) {\n    return cachedRequest;\n  }\n\n  String xacmlRequest = generateXacmlRequest(policyName, jsonKeyValuePairs);\n  return cacheRequest(key, xacmlRequest);\n}\n\nprivate String generateKey(String policyName, String jsonKeyValuePairs) {\n  Map<String,Object> templateData = generateFreemakerTemplateData(jsonKeyValuePairs);\n  return Base64.getEncoder().encodeToString(policyName.concat(jsonKeyValuePairs).concat(getTemplateDataAsAString(templateData)).trim().getBytes());\n}\n\nprivate String getCachedRequest(String key) {\n  return this.requestBuilderCache.get(key);\n}\n\nprivate String generateXacmlRequest(String policyName, String jsonKeyValuePairs) {\n  String xacmlRequest;\n  try (StringWriter out=new StringWriter()){\n    Configuration cfg=new Configuration(new Version(\"2.3.23\"));\n    cfg.setClassForTemplateLoading(this.getClass(),\"/\");\n    cfg.setDefaultEncoding(\"UTF-8\");\n    Template template=cfg.getTemplate(ATTRIBUTE_CONFIG_FILE_NAME);\n    template.process(templateData,out);\n    xacmlRequest=new JSONObject(out.toString()).get(policyName).toString();\n    out.flush();\n  } catch (IOException|TemplateException e) {\n    throw new AttributeEvaluatorException(\"Failed to build the XACML Json request for policy with name : \" + policyName,e);\n  }\n\n  if (xacmlRequest == null || xacmlRequest.isEmpty()) {\n    throw new AttributeEvaluatorException(\"Generated XACML request is empty or NULL for policy with name : \" + policyName);\n  }\n\n  return xacmlRequest;\n}\n\nprivate String cacheRequest(String key, String xacmlRequest) {\n  return this.requestBuilderCache.putIfAbsent(key,xacmlRequest);\n}"
    },
    "Old_Method": "@Override public String createAuthRequest(String policyName,String jsonKeyValuePairs){\n  Map<String,Object> templateData=generateFreemakerTemplateData(jsonKeyValuePairs);\n  String key=Base64.getEncoder().encodeToString(policyName.concat(jsonKeyValuePairs).concat(getTemplateDataAsAString(templateData)).trim().getBytes());\n  String cachedRequest=this.requestBuilderCache.get(key);\n  if (cachedRequest != null) {\n    return cachedRequest;\n  }\n  String xacmlRequest;\n  try (StringWriter out=new StringWriter()){\n    Configuration cfg=new Configuration(new Version(\"2.3.23\"));\n    cfg.setClassForTemplateLoading(this.getClass(),\"/\");\n    cfg.setDefaultEncoding(\"UTF-8\");\n    Template template=cfg.getTemplate(ATTRIBUTE_CONFIG_FILE_NAME);\n    template.process(templateData,out);\n    xacmlRequest=new JSONObject(out.toString()).get(policyName).toString();\n    out.flush();\n  }\n catch (  IOException|TemplateException e) {\n    throw new AttributeEvaluatorException(\"Failed to build the XACML Json request for policy with name : \" + policyName,e);\n  }\n  if (xacmlRequest == null || xacmlRequest.isEmpty()) {\n    throw new AttributeEvaluatorException(\"Generated XACML request is empty or NULL for policy with name : \" + policyName);\n  }\n  return this.requestBuilderCache.putIfAbsent(key,xacmlRequest);\n}\n",
    "File_Path": "spring-security-abac/sdk/src/main/java/org/wso2/spring/security/abac/util/XacmlAuthRequestBuilder.java",
    "Start": 1262,
    "Stop": 2829,
    "Project_Name": "data/projects/spring-security-abac",
    "Method_Name": "createAuthRequest"
}