{
    "Method_Improvements": {
        "Improvements": [
            {
                "Improvement": "Use enhanced for loop instead of traditional for loop",
                "Change_Diff": "- Iterator<String> keys=jsonObject.keys();\n- while (keys.hasNext()) {\n- String key=keys.next();\n+ for (String key : jsonObject.keySet()) {",
                "Description": "Instead of using the traditional for loop to iterate over `jsonObject.keys()`, you can use an enhanced for loop with `jsonObject.keys()` function.",
                "Start": 4,
                "End": 4
            },
            {
                "Improvement": "Use Optional instead of null checking",
                "Change_Diff": "- String value=jsonObject.get(key).toString();\n+ Optional<String> value=Optional.ofNullable(jsonObject.get(key)).map(Object::toString);",
                "Description": "It is a good practice to use Optional for handling possible null objects instead of manual null checking.",
                "Start": 11,
                "End": 11
            },
            {
                "Improvement": "Avoid calling `httpServletRequest.getParameter(value)` twice in the switch statement",
                "Change_Diff": "- value=httpServletRequest.getParameter(value);\n- value=httpServletRequest.getParameter(value);\n+ String paramValue = httpServletRequest.getParameter(value);\n+ value = paramValue;\n+ value = paramValue;",
                "Description": "For QUERY_PARAM and FORM_DATA cases, you are calling `httpServletRequest.getParameter(value)` twice. You can simply call this method once and store its result in a variable to avoid duplicate calls.",
                "Start": 19,
                "End": 22
            }
        ],
        "Final code": "private Map<String,Object> generateFreemakerTemplateData(String jsonKeyValuePairs){\n  JSONObject jsonObject=new JSONObject(jsonKeyValuePairs.trim());\n  ServletRequestAttributes servletRequestAttributes=(ServletRequestAttributes)RequestContextHolder.currentRequestAttributes();\n  HttpServletRequest httpServletRequest=servletRequestAttributes.getRequest();\n  Map<String,Object> templateData=new HashMap<>();\n  for (String key : jsonObject.keySet()) {\n    Optional<String> value=Optional.ofNullable(jsonObject.get(key)).map(Object::toString);\n    String[] proTypeArr=value.get().split(\"\\\\.\",2);\n    PropertyType propertyType=PropertyType.getEnum(proTypeArr[0]);\n    if (!proTypeArr[0].isEmpty()) {\n      value=Optional.ofNullable(proTypeArr[1]);\n    }\n    switch (propertyType) {\n      case HEADER:\n        value=Optional.ofNullable(httpServletRequest.getHeader(value.get()));\n        break;\n      case COOKIE:\n        value=Optional.ofNullable(GeneralUtils.extractValuesFromCookies(httpServletRequest.getCookies()).get(value.get()));\n        break;\n      case QUERY_PARAM:\n      case FORM_DATA:\n        String paramValue = httpServletRequest.getParameter(value.get());\n        value = Optional.ofNullable(paramValue);\n        break;\n      case PATH_PARAM:\n        value=Optional.ofNullable(extractPathParam(httpServletRequest,value.get()));\n        break;\n    }\n    templateData.put(key,value.get());\n  }\n  return templateData;\n}"
    },
    "Old_Method": "private Map<String,Object> generateFreemakerTemplateData(String jsonKeyValuePairs){\n  JSONObject jsonObject=new JSONObject(jsonKeyValuePairs.trim());\n  Iterator<String> keys=jsonObject.keys();\n  ServletRequestAttributes servletRequestAttributes=(ServletRequestAttributes)RequestContextHolder.currentRequestAttributes();\n  HttpServletRequest httpServletRequest=servletRequestAttributes.getRequest();\n  Map<String,Object> templateData=new HashMap<>();\n  while (keys.hasNext()) {\n    String key=keys.next();\n    String value=jsonObject.get(key).toString();\n    String[] proTypeArr=value.split(\"\\\\.\",2);\n    PropertyType propertyType=PropertyType.getEnum(proTypeArr[0]);\n    if (!proTypeArr[0].isEmpty()) {\n      value=proTypeArr[1];\n    }\nswitch (propertyType) {\ncase HEADER:\n      value=httpServletRequest.getHeader(value);\n    break;\ncase COOKIE:\n  value=GeneralUtils.extractValuesFromCookies(httpServletRequest.getCookies()).get(value);\nbreak;\ncase QUERY_PARAM:\nvalue=httpServletRequest.getParameter(value);\nbreak;\ncase FORM_DATA:\nvalue=httpServletRequest.getParameter(value);\nbreak;\ncase PATH_PARAM:\nvalue=extractPathParam(httpServletRequest,value);\nbreak;\n}\ntemplateData.put(key,value);\n}\nreturn templateData;\n}\n",
    "File_Path": "spring-security-abac/sdk/src/main/java/org/wso2/spring/security/abac/util/XacmlAuthRequestBuilder.java",
    "Start": 2835,
    "Stop": 4525,
    "Project_Name": "data/projects/spring-security-abac",
    "Method_Name": "generateFreemakerTemplateData"
}