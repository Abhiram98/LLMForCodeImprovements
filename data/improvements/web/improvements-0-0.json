{
    "Method_Improvements": {
        "Improvements": [
            {
                "Improvement": "Avoid chaining methods excessively",
                "Change_Diff": "- http.formLogin().loginPage(\"/login.jsp\").and().formLogin().loginProcessingUrl(\"/login\").and().formLogin().defaultSuccessUrl(\"/home\").and().formLogin().failureUrl(\"/?error=1\");\n- http.logout().logoutUrl(\"/logout\").and().logout().logoutSuccessUrl(\"/\").and().logout().deleteCookies(\"JSESSIONID\");\n- http.rememberMe().tokenValiditySeconds(1209600).and().rememberMe().rememberMeParameter(\"remember-me\");\n+ FormLoginConfigurer<HttpSecurity> loginConfigurer = http.formLogin();\n+ loginConfigurer.loginPage(\"/login.jsp\");\n+ loginConfigurer.loginProcessingUrl(\"/login\");\n+ loginConfigurer.defaultSuccessUrl(\"/home\");\n+ loginConfigurer.failureUrl(\"/?error=1\");\n+ LogoutConfigurer<HttpSecurity> logoutConfigurer = http.logout();\n+ logoutConfigurer.logoutUrl(\"/logout\");\n+ logoutConfigurer.logoutSuccessUrl(\"/\");\n+ logoutConfigurer.deleteCookies(\"JSESSIONID\");\n+ RememberMeConfigurer<HttpSecurity> rememberMeConfigurer = http.rememberMe();\n+ rememberMeConfigurer.tokenValiditySeconds(1209600);\n+ rememberMeConfigurer.rememberMeParameter(\"remember-me\");",
                "Description": "The method chaining in formLogin, logout, and rememberMe methods makes the code harder to read. It is recommended to break it down for better readability.",
                "Start": 2,
                "End": 3
            },
            {
                "Improvement": "Use lambda expression",
                "Change_Diff": "- HeaderWriter headerWriter=new HeaderWriter(){\n- public void writeHeaders( HttpServletRequest request, HttpServletResponse response){\n- response.setHeader(\"Cache-Control\",\"no-cache, no-store, max-age=0, must-revalidate\");\n- response.setHeader(\"Expires\",\"0\");\n- response.setHeader(\"Pragma\",\"no-cache\");\n- response.setHeader(\"X-Frame-Options\",\"SAMEORIGIN\");\n- response.setHeader(\"X-XSS-Protection\",\"1; mode=block\");\n- response.setHeader(\"x-content-type-options\",\"nosniff\");\n- }\n- };\n+ HeaderWriter headerWriter = (request, response) -> {\n+ response.setHeader(\"Cache-Control\",\"no-cache, no-store, max-age=0, must-revalidate\");\n+ response.setHeader(\"Expires\",\"0\");\n+ response.setHeader(\"Pragma\",\"no-cache\");\n+ response.setHeader(\"X-Frame-Options\",\"SAMEORIGIN\");\n+ response.setHeader(\"X-XSS-Protection\",\"1; mode=block\");\n+ response.setHeader(\"x-content-type-options\",\"nosniff\");\n+ };",
                "Description": "You can create the HeaderWriter instance using a lambda expression, which is more concise and readable.",
                "Start": 12,
                "End": 20
            }
        ],
        "Final code": "@Override protected void configure(HttpSecurity http) throws Exception {\n  FormLoginConfigurer<HttpSecurity> loginConfigurer = http.formLogin();\n  loginConfigurer.loginPage(\"/login.jsp\");\n  loginConfigurer.loginProcessingUrl(\"/login\");\n  loginConfigurer.defaultSuccessUrl(\"/home\");\n  loginConfigurer.failureUrl(\"/?error=1\");\n  LogoutConfigurer<HttpSecurity> logoutConfigurer = http.logout();\n  logoutConfigurer.logoutUrl(\"/logout\");\n  logoutConfigurer.logoutSuccessUrl(\"/\");\n  logoutConfigurer.deleteCookies(\"JSESSIONID\");\n  RememberMeConfigurer<HttpSecurity> rememberMeConfigurer = http.rememberMe();\n  rememberMeConfigurer.tokenValiditySeconds(1209600);\n  rememberMeConfigurer.rememberMeParameter(\"remember-me\");\n  CharacterEncodingFilter encodeFilter=new CharacterEncodingFilter();\n  encodeFilter.setEncoding(\"utf-8\");\n  encodeFilter.setForceEncoding(true);\n  http.addFilterBefore(encodeFilter,CsrfFilter.class);\n  http.headers().disable();\n  HeaderWriter headerWriter = (request, response) -> {\n    response.setHeader(\"Cache-Control\",\"no-cache, no-store, max-age=0, must-revalidate\");\n    response.setHeader(\"Expires\",\"0\");\n    response.setHeader(\"Pragma\",\"no-cache\");\n    response.setHeader(\"X-Frame-Options\",\"SAMEORIGIN\");\n    response.setHeader(\"X-XSS-Protection\",\"1; mode=block\");\n    response.setHeader(\"x-content-type-options\",\"nosniff\");\n  };\n  List<HeaderWriter> headerWriterFilterList=new ArrayList<>();\n  headerWriterFilterList.add(headerWriter);\n  HeaderWriterFilter headerFilter=new HeaderWriterFilter(headerWriterFilterList);\n  http.addFilter(headerFilter);\n}"
    },
    "Old_Method": "@Override protected void configure(HttpSecurity http) throws Exception {\n  http.formLogin().loginPage(\"/login.jsp\").and().formLogin().loginProcessingUrl(\"/login\").and().formLogin().defaultSuccessUrl(\"/home\").and().formLogin().failureUrl(\"/?error=1\");\n  http.logout().logoutUrl(\"/logout\").and().logout().logoutSuccessUrl(\"/\").and().logout().deleteCookies(\"JSESSIONID\");\n  http.rememberMe().tokenValiditySeconds(1209600).and().rememberMe().rememberMeParameter(\"remember-me\");\n  CharacterEncodingFilter encodeFilter=new CharacterEncodingFilter();\n  encodeFilter.setEncoding(\"utf-8\");\n  encodeFilter.setForceEncoding(true);\n  http.addFilterBefore(encodeFilter,CsrfFilter.class);\n  http.headers().disable();\n  HeaderWriter headerWriter=new HeaderWriter(){\n    public void writeHeaders(    HttpServletRequest request,    HttpServletResponse response){\n      response.setHeader(\"Cache-Control\",\"no-cache, no-store, max-age=0, must-revalidate\");\n      response.setHeader(\"Expires\",\"0\");\n      response.setHeader(\"Pragma\",\"no-cache\");\n      response.setHeader(\"X-Frame-Options\",\"SAMEORIGIN\");\n      response.setHeader(\"X-XSS-Protection\",\"1; mode=block\");\n      response.setHeader(\"x-content-type-options\",\"nosniff\");\n    }\n  }\n;\n  List<HeaderWriter> headerWriterFilterList=new ArrayList<>();\n  headerWriterFilterList.add(headerWriter);\n  HeaderWriterFilter headerFilter=new HeaderWriterFilter(headerWriterFilterList);\n  http.addFilter(headerFilter);\n}\n",
    "File_Path": "web/back/src/main/java/com/aitongyi/web/back/conf/SecurityConfig.java",
    "Start": 1726,
    "Stop": 3424,
    "Project_Name": "data/projects/web",
    "Method_Name": "configure"
}