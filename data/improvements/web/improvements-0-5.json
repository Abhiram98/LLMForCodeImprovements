{
    "Method_Improvements": {
        "Improvements": [
            {
                "Improvement": "Avoid chaining method calls",
                "Change_Diff": "- http.formLogin().loginPage(\"/login.jsp\").and().formLogin().loginProcessingUrl(\"/login\").and().formLogin().defaultSuccessUrl(\"/home\").and().formLogin().failureUrl(\"/?error=1\");\n- http.logout().logoutUrl(\"/logout\").and().logout().logoutSuccessUrl(\"/\").and().logout().deleteCookies(\"JSESSIONID\");\n- http.rememberMe().tokenValiditySeconds(1209600).and().rememberMe().rememberMeParameter(\"remember-me\");\n+ http.formLogin()\n+   .loginPage(\"/login.jsp\")\n+   .loginProcessingUrl(\"/login\")\n+   .defaultSuccessUrl(\"/home\")\n+   .failureUrl(\"/?error=1\");\n+ http.logout()\n+   .logoutUrl(\"/logout\")\n+   .logoutSuccessUrl(\"/\")\n+   .deleteCookies(\"JSESSIONID\");\n+ http.rememberMe()\n+   .tokenValiditySeconds(1209600)\n+   .rememberMeParameter(\"remember-me\");",
                "Description": "Chaining method calls can make the code hard to read and debug. Instead of chaining methods, use multiple lines for each method call.",
                "Start": 2,
                "End": 4
            },
            {
                "Improvement": "Use lambda expression",
                "Change_Diff": "- HeaderWriter headerWriter=new HeaderWriter(){\n-    public void writeHeaders(    HttpServletRequest request,    HttpServletResponse response){\n-      response.setHeader(\"Cache-Control\",\"no-cache, no-store, max-age=0, must-revalidate\");\n-      response.setHeader(\"Expires\",\"0\");\n-      response.setHeader(\"Pragma\",\"no-cache\");\n-      response.setHeader(\"X-Frame-Options\",\"SAMEORIGIN\");\n-      response.setHeader(\"X-XSS-Protection\",\"1; mode=block\");\n-      response.setHeader(\"x-content-type-options\",\"nosniff\");\n-    }\n-  }\n-;\n+ HeaderWriter headerWriter = (request, response) -> {\n+     response.setHeader(\"Cache-Control\",\"no-cache, no-store, max-age=0, must-revalidate\");\n+     response.setHeader(\"Expires\",\"0\");\n+     response.setHeader(\"Pragma\",\"no-cache\");\n+     response.setHeader(\"X-Frame-Options\",\"SAMEORIGIN\");\n+     response.setHeader(\"X-XSS-Protection\",\"1; mode=block\");\n+     response.setHeader(\"x-content-type-options\",\"nosniff\");\n+ };",
                "Description": "Java 8 introduces lambda expressions, which provide a clear and concise way to represent one method interface using an expression. Lambda expressions are commonly used when we need to provide the implementation of a method which is declared in a functional interface.",
                "Start": 12,
                "End": 21
            }
        ],
        "Final code": "@Override protected void configure(HttpSecurity http) throws Exception {\n  http.formLogin()\n     .loginPage(\"/login.jsp\")\n     .loginProcessingUrl(\"/login\")\n     .defaultSuccessUrl(\"/home\")\n     .failureUrl(\"/?error=1\");\n  http.logout()\n     .logoutUrl(\"/logout\")\n     .logoutSuccessUrl(\"/\")\n     .deleteCookies(\"JSESSIONID\");\n  http.rememberMe()\n     .tokenValiditySeconds(1209600)\n     .rememberMeParameter(\"remember-me\");\n  CharacterEncodingFilter encodeFilter=new CharacterEncodingFilter();\n  encodeFilter.setEncoding(\"utf-8\");\n  encodeFilter.setForceEncoding(true);\n  http.addFilterBefore(encodeFilter,CsrfFilter.class);\n  http.headers().disable();\n  HeaderWriter headerWriter = (request, response) -> {\n     response.setHeader(\"Cache-Control\",\"no-cache, no-store, max-age=0, must-revalidate\");\n     response.setHeader(\"Expires\",\"0\");\n     response.setHeader(\"Pragma\",\"no-cache\");\n     response.setHeader(\"X-Frame-Options\",\"SAMEORIGIN\");\n     response.setHeader(\"X-XSS-Protection\",\"1; mode=block\");\n     response.setHeader(\"x-content-type-options\",\"nosniff\");\n  };\n  List<HeaderWriter> headerWriterFilterList=new ArrayList<>();\n  headerWriterFilterList.add(headerWriter);\n  HeaderWriterFilter headerFilter=new HeaderWriterFilter(headerWriterFilterList);\n  http.addFilter(headerFilter);\n}"
    },
    "Old_Method": "@Override protected void configure(HttpSecurity http) throws Exception {\n  http.formLogin().loginPage(\"/login.jsp\").and().formLogin().loginProcessingUrl(\"/login\").and().formLogin().defaultSuccessUrl(\"/home\").and().formLogin().failureUrl(\"/?error=1\");\n  http.logout().logoutUrl(\"/logout\").and().logout().logoutSuccessUrl(\"/\").and().logout().deleteCookies(\"JSESSIONID\");\n  http.rememberMe().tokenValiditySeconds(1209600).and().rememberMe().rememberMeParameter(\"remember-me\");\n  CharacterEncodingFilter encodeFilter=new CharacterEncodingFilter();\n  encodeFilter.setEncoding(\"utf-8\");\n  encodeFilter.setForceEncoding(true);\n  http.addFilterBefore(encodeFilter,CsrfFilter.class);\n  http.headers().disable();\n  HeaderWriter headerWriter=new HeaderWriter(){\n    public void writeHeaders(    HttpServletRequest request,    HttpServletResponse response){\n      response.setHeader(\"Cache-Control\",\"no-cache, no-store, max-age=0, must-revalidate\");\n      response.setHeader(\"Expires\",\"0\");\n      response.setHeader(\"Pragma\",\"no-cache\");\n      response.setHeader(\"X-Frame-Options\",\"SAMEORIGIN\");\n      response.setHeader(\"X-XSS-Protection\",\"1; mode=block\");\n      response.setHeader(\"x-content-type-options\",\"nosniff\");\n    }\n  }\n;\n  List<HeaderWriter> headerWriterFilterList=new ArrayList<>();\n  headerWriterFilterList.add(headerWriter);\n  HeaderWriterFilter headerFilter=new HeaderWriterFilter(headerWriterFilterList);\n  http.addFilter(headerFilter);\n}\n",
    "File_Path": "web/back/src/main/java/com/aitongyi/web/back/conf/SecurityConfig.java",
    "Start": 1726,
    "Stop": 3424,
    "Project_Name": "data/projects/web",
    "Method_Name": "configure"
}