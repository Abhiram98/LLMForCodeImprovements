{
    "Method_Improvements": {
        "Improvements": [
            {
                "Improvement": "Refactor duplicate code into a reusable method",
                "Change_Diff": "- this.retry(context,() -> {\n...<duplicate code>...\n}\nthis.retry(context,() -> {\n...<duplicate code>...\n}\n+ this.validateTag(context, bucketName, \"no-virus.txt\", \"clean\");\nthis.validateTag(context, bucketName, \"virus.txt\", \"infected\");",
                "Description": "The tag validation code is repeated twice in the provided method. This duplicate code can be refactored into a reusable method to improve code maintainability and readability.",
                "Start": 18,
                "End": 37
            },
            {
                "Improvement": "Use try-with-resources for better exception handling",
                "Change_Diff": "- try {\n...<code>...\nfinally {\n...<code>...\n+ try (Resource res = this.createWiddixStack(context,vpcStackName,\"vpc/vpc-2azs.yaml\")) {\n...<code>...\n}",
                "Description": "The `try-finally` blocks can be replaced with `try-with-resources` to automatically close resources and handle exceptions in a more succinct manner. However, this requires that the resources involved implement `AutoCloseable`.",
                "Start": 8,
                "End": 47
            }
        ],
        "Final code": "@Test\npublic void testWithoutFileDeletion(){\n  final Context context=new Context();\n  final String vpcStackName=\"vpc-2azs-\" + this.random8String();\n  final String stackName=\"s3-virusscan-\" + this.random8String();\n  final String bucketName=\"s3-virusscan-\" + this.random8String();\n  try {\n    this.createWiddixStack(context,vpcStackName,\"vpc/vpc-2azs.yaml\");\n    try {\n      this.createStack(context,stackName,\"template.yaml\",new Parameter().withParameterKey(\"ParentVPCStack\").withParameterValue(vpcStackName),new Parameter().withParameterKey(\"TagFiles\").withParameterValue(\"true\"),new Parameter().withParameterKey(\"DeleteInfectedFiles\").withParameterValue(\"false\"));\n      try {\n        this.createBucketWithSQSNotification(bucketName,this.getStackOutputValue(stackName,\"ScanQueueArn\"));\n        this.createObject(bucketName,\"no-virus.txt\",\"not a virus\");\n        this.createObject(bucketName,\"virus.txt\",\"X5O!P%@AP[4\\\\PZX54(P^)7CC)7}$EICAR-STANDARD-ANTIVIRUS-TEST-FILE!$H+H*\");\n        this.validateTag(context, bucketName, \"no-virus.txt\", \"clean\");\n        this.validateTag(context, bucketName, \"virus.txt\", \"infected\");\n        this.deleteObject(context,bucketName,\"no-virus.txt\");\n        this.deleteObject(context,bucketName,\"virus.txt\");\n      }\n  finally {\n        this.deleteBucket(context,bucketName);\n      }\n    }\n  finally {\n      this.deleteStack(context,stackName);\n    }\n  }\n  finally {\n    this.deleteStack(context,vpcStackName);\n  }\n}\n\nprivate void validateTag(Context context, String bucketName, String fileName, String expectedValue) {\n  this.retry(context,() -> {\n    final List<Tag> tags=this.getObjectTags(bucketName, fileName);\n    if (tags.size() == 1) {\n      final Tag tag=tags.get(0);\n      if (\"clamav-status\".equals(tag.getKey())) {\n        if (expectedValue.equals(tag.getValue())) {\n          return tags;\n        }\n        else {\n          throw new RuntimeException(\"clamav-status tag value expected to be \" + expectedValue + \", but saw \" + tag.getValue());\n        }\n      }\n      else {\n        throw new RuntimeException(\"one and only tag key expected to be clamav-status, but saw \" + tag.getKey());\n      }\n    }\n    else {\n      throw new RuntimeException(\"one tag expected, but saw \" + tags.size());\n    }\n  }\n);\n}"
    },
    "Old_Method": "@Test public void testWithoutFileDeletion(){\n  final Context context=new Context();\n  final String vpcStackName=\"vpc-2azs-\" + this.random8String();\n  final String stackName=\"s3-virusscan-\" + this.random8String();\n  final String bucketName=\"s3-virusscan-\" + this.random8String();\n  try {\n    this.createWiddixStack(context,vpcStackName,\"vpc/vpc-2azs.yaml\");\n    try {\n      this.createStack(context,stackName,\"template.yaml\",new Parameter().withParameterKey(\"ParentVPCStack\").withParameterValue(vpcStackName),new Parameter().withParameterKey(\"TagFiles\").withParameterValue(\"true\"),new Parameter().withParameterKey(\"DeleteInfectedFiles\").withParameterValue(\"false\"));\n      try {\n        this.createBucketWithSQSNotification(bucketName,this.getStackOutputValue(stackName,\"ScanQueueArn\"));\n        this.createObject(bucketName,\"no-virus.txt\",\"not a virus\");\n        this.createObject(bucketName,\"virus.txt\",\"X5O!P%@AP[4\\\\PZX54(P^)7CC)7}$EICAR-STANDARD-ANTIVIRUS-TEST-FILE!$H+H*\");\n        this.retry(context,() -> {\n          final List<Tag> tags=this.getObjectTags(bucketName,\"no-virus.txt\");\n          if (tags.size() == 1) {\n            final Tag tag=tags.get(0);\n            if (\"clamav-status\".equals(tag.getKey())) {\n              if (\"clean\".equals(tag.getValue())) {\n                return tags;\n              }\n else {\n                throw new RuntimeException(\"clamav-status tag value expected to be clean, but saw \" + tag.getValue());\n              }\n            }\n else {\n              throw new RuntimeException(\"one and only tag key expected to be clamav-status, but saw \" + tag.getKey());\n            }\n          }\n else {\n            throw new RuntimeException(\"one tag expected, but saw \" + tags.size());\n          }\n        }\n);\n        this.retry(context,() -> {\n          final List<Tag> tags=this.getObjectTags(bucketName,\"virus.txt\");\n          if (tags.size() == 1) {\n            final Tag tag=tags.get(0);\n            if (\"clamav-status\".equals(tag.getKey())) {\n              if (\"infected\".equals(tag.getValue())) {\n                return tags;\n              }\n else {\n                throw new RuntimeException(\"clamav-status tag value expected to be infected, but saw \" + tag.getValue());\n              }\n            }\n else {\n              throw new RuntimeException(\"one and only tag key expected to be clamav-status, but saw \" + tag.getKey());\n            }\n          }\n else {\n            throw new RuntimeException(\"one tag expected, but saw \" + tags.size());\n          }\n        }\n);\n        this.deleteObject(context,bucketName,\"no-virus.txt\");\n        this.deleteObject(context,bucketName,\"virus.txt\");\n      }\n  finally {\n        this.deleteBucket(context,bucketName);\n      }\n    }\n  finally {\n      this.deleteStack(context,stackName);\n    }\n  }\n  finally {\n    this.deleteStack(context,vpcStackName);\n  }\n}\n",
    "File_Path": "aws-s3-virusscan/test/src/test/java/de/widdix/awss3virusscan/TestEicarFile.java",
    "Start": 242,
    "Stop": 3981,
    "Project_Name": "data/projects/aws-s3-virusscan",
    "Method_Name": "testWithoutFileDeletion"
}