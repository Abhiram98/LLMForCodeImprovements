{
    "Method_Improvements": {
        "Improvements": [{
            "Improvement": "Use Optional to handle null values",
            "Change_Diff": "- final String env=System.getenv(key.name);\n-  if (env == null) {\n-    if (key.defaultValue == null) {\n-      throw new RuntimeException(\"config not found: \" + key.name);\n-    }\n- else {\n-      return key.defaultValue;\n-    }\n-  }\n- else {\n-    return env;\n-  }\n+ return Optional.ofNullable(System.getenv(key.name))\n+ .orElseThrow(() -> new RuntimeException(\"config not found: \" + key.name))\n+ .orElse(key.defaultValue);",
            "Description": "Using Optional can help us to avoid null pointer exceptions and make the code cleaner and easier to understand. In this case, we can use Optional.ofNullable() to wrap the system environment variable, and then use .orElseThrow() and .orElse() to handle the cases where the value is null or not.",
            "Start": 2,
            "End": 13
        }],
        "Final code": "public static String get(final Key key){\n    return Optional.ofNullable(System.getenv(key.name))\n        .orElseThrow(() -> new RuntimeException(\"config not found: \" + key.name))\n        .orElse(key.defaultValue);\n}"
    },
    "Old_Method": "public static String get(final Key key){\n  final String env=System.getenv(key.name);\n  if (env == null) {\n    if (key.defaultValue == null) {\n      throw new RuntimeException(\"config not found: \" + key.name);\n    }\n else {\n      return key.defaultValue;\n    }\n  }\n else {\n    return env;\n  }\n}\n",
    "File_Path": "aws-s3-virusscan/test/src/test/java/de/widdix/awss3virusscan/Config.java",
    "Start": 813,
    "Stop": 1187,
    "Project_Name": "data/projects/aws-s3-virusscan",
    "Method_Name": "get"
}