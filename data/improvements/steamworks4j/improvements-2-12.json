{
    "Method_Improvements": {
        "Improvements": [
            {
                "Improvement": "Extract method for processing digital action data",
                "Change_Diff": "- if (digitalActionHandle != null) {\n-     controller.getDigitalActionData(handle,digitalActionHandle,digitalActionData);\n-     if (digitalActionData.getActive() && digitalActionData.getState()) {\n-         System.out.println(\"  digital action: \" + getNativeHandle(digitalActionHandle));\n-     }\n- }\n+ processDigitalActionData(handle);",
                "Description": "The code block for processing digital action data is a good candidate to be extracted into a separate method. It improves readability and maintainability.",
                "Start": 8,
                "End": 12
            },
            {
                "Improvement": "Extract method for processing analog action data",
                "Change_Diff": "- if (analogActionHandle != null) {\n-     controller.getAnalogActionData(handle,analogActionHandle,analogActionData);\n-     if (analogActionData.getActive()) {\n-         float x=analogActionData.getX();\n-         float y=analogActionData.getY();\n-         SteamController.SourceMode mode=analogActionData.getMode();\n-         if (Math.abs(x) > 0.0001f && Math.abs(y) > 0.001f) {\n-             System.out.println(\"  analog action: \" + analogActionData.getX() + \", \"+ analogActionData.getY()+ \", \"+ mode.name());\n-         }\n-     }\n- }\n+ processAnalogActionData(handle);",
                "Description": "The code block for processing analog action data is a good candidate to be extracted into a separate method. This improves readability and maintainability.",
                "Start": 14,
                "End": 23
            }
        ],
        "Final code": "@Override protected void processUpdate() throws SteamException {\n  if (setHandle == null || getNativeHandle(setHandle) == 0) {\n    return;\n  }\n  for (int i=0; i < numControllers; i++) {\n    SteamControllerHandle handle=controllerHandles[i];\n    controller.activateActionSet(handle,setHandle);\n    processDigitalActionData(handle);\n    processAnalogActionData(handle);\n  }\n}\n\nprivate void processDigitalActionData(SteamControllerHandle handle) {\n  if (digitalActionHandle != null) {\n    controller.getDigitalActionData(handle,digitalActionHandle,digitalActionData);\n    if (digitalActionData.getActive() && digitalActionData.getState()) {\n      System.out.println(\"  digital action: \" + getNativeHandle(digitalActionHandle));\n    }\n  }\n}\n\nprivate void processAnalogActionData(SteamControllerHandle handle) {\n  if (analogActionHandle != null) {\n    controller.getAnalogActionData(handle,analogActionHandle,analogActionData);\n    if (analogActionData.getActive()) {\n      float x=analogActionData.getX();\n      float y=analogActionData.getY();\n      SteamController.SourceMode mode=analogActionData.getMode();\n      if (Math.abs(x) > 0.0001f && Math.abs(y) > 0.001f) {\n        System.out.println(\"  analog action: \" + analogActionData.getX() + \", \"+ analogActionData.getY()+ \", \"+ mode.name());\n      }\n    }\n  }\n}"
    },
    "Old_Method": "@Override protected void processUpdate() throws SteamException {\n  if (setHandle == null || getNativeHandle(setHandle) == 0) {\n    return;\n  }\n  for (int i=0; i < numControllers; i++) {\n    SteamControllerHandle handle=controllerHandles[i];\n    controller.activateActionSet(handle,setHandle);\n    if (digitalActionHandle != null) {\n      controller.getDigitalActionData(handle,digitalActionHandle,digitalActionData);\n      if (digitalActionData.getActive() && digitalActionData.getState()) {\n        System.out.println(\"  digital action: \" + getNativeHandle(digitalActionHandle));\n      }\n    }\n    if (analogActionHandle != null) {\n      controller.getAnalogActionData(handle,analogActionHandle,analogActionData);\n      if (analogActionData.getActive()) {\n        float x=analogActionData.getX();\n        float y=analogActionData.getY();\n        SteamController.SourceMode mode=analogActionData.getMode();\n        if (Math.abs(x) > 0.0001f && Math.abs(y) > 0.001f) {\n          System.out.println(\"  analog action: \" + analogActionData.getX() + \", \"+ analogActionData.getY()+ \", \"+ mode.name());\n        }\n      }\n    }\n  }\n}\n",
    "File_Path": "steamworks4j/tests/src/main/java/com/codedisaster/steamworks/test/SteamControllerTest.java",
    "Start": 1216,
    "Stop": 3060,
    "Project_Name": "data/projects/steamworks4j",
    "Method_Name": "processUpdate"
}