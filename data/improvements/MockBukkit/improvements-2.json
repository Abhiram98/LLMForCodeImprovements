{
    "Method_Improvements": [{
        "Improvements": [
            {
                "Improvement": "Use a foreach loop instead of an indexed for loop",
                "Change_Diff": "- for (ScheduledTask task : oldTasks) {\n+ for (ScheduledTask task : scheduledTasks.getCurrentTaskList()) {",
                "Description": "Instead of using an indexed for loop, use a foreach loop to iterate over the `oldTasks` list directly.",
                "Start": 5,
                "End": 5
            },
            {
                "Improvement": "Merge the nested if-else conditions",
                "Change_Diff": "- if (task.isSync()) {\n+ if (task.isSync()) {\n     wrapTask(task).run();\n- }\n- else {\n+ } else {\n     pool.submit(wrapTask(task));\n     task.submitted();\n   }",
                "Description": "Merge the nested if-else conditions to improve readability and reduce unnecessary repeated code.",
                "Start": 7,
                "End": 10
            }
        ],
        "Final code": "public synchronized void performOneTick(){\n  currentTick++;\n  for (ScheduledTask task : scheduledTasks.getCurrentTaskList()) {\n    if (task.getScheduledTick() == currentTick && !task.isCancelled()) {\n      if (task.isSync()) {\n        wrapTask(task).run();\n      } else {\n        pool.submit(wrapTask(task));\n        task.submitted();\n      }\n      if (task instanceof RepeatingTask) {\n        if (!task.isCancelled()) {\n          repeatingTask.updateScheduledTick();\n          scheduledTasks.addTask(task);\n        }\n      } else {\n        task.cancel();\n      }\n    }\n  }\n}"
    }],
    "Old_Method": "/** \n * Perform one tick on the server.\n */\npublic synchronized void performOneTick(){\n  currentTick++;\n  List<ScheduledTask> oldTasks=scheduledTasks.getCurrentTaskList();\n  for (  ScheduledTask task : oldTasks) {\n    if (task.getScheduledTick() == currentTick && !task.isCancelled()) {\n      if (task.isSync()) {\n        wrapTask(task).run();\n      }\n else {\n        pool.submit(wrapTask(task));\n        task.submitted();\n      }\n      if (task instanceof RepeatingTask) {\n        if (!task.isCancelled()) {\n          repeatingTask.updateScheduledTick();\n          scheduledTasks.addTask(task);\n        }\n      }\n else {\n        task.cancel();\n      }\n    }\n  }\n}\n",
    "File_Path": "MockBukkit/src/main/java/be/seeseemelk/mockbukkit/scheduler/BukkitSchedulerMock.java",
    "Start": 4806,
    "Stop": 5483,
    "Project_Name": "data/projects/MockBukkit",
    "Method_Name": "performOneTick"
}