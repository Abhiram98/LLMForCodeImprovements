{
    "Method_Improvements": {
        "Improvements": [{
            "Improvement": "Use Objects.hash() for hashCode computation",
            "Change_Diff": "- result=prime * result + ((displayName == null) ? 0 : displayName.hashCode());\n- result=prime * result + ((lore == null) ? 0 : lore.hashCode());\n- result=prime * result + ((customModelData == null) ? 0 : customModelData.hashCode());\n- result=prime * result + (enchants.isEmpty() ? 0 : enchants.hashCode());\n- result=prime * result + (hasRepairCost() ? this.repairCost : 0);\n- result=prime * result + (!persistentDataContainer.isEmpty() ? persistentDataContainer.hashCode() : 0);\n- result=prime * result + (hideFlags.isEmpty() ? 0 : hideFlags.hashCode());\n- result=prime * result + Boolean.hashCode(unbreakable);\n- result=prime * result + (hasDamage() ? this.damage : 0);\n- result=prime * result + (hasDestroyableKeys() ? this.destroyableKeys.hashCode() : 0);\n- result=prime * result + (hasPlaceableKeys() ? this.placeableKeys.hashCode() : 0);\n+ return Objects.hash(displayName, lore, customModelData, enchants, repairCost, persistentDataContainer, hideFlags, unbreakable, damage, destroyableKeys, placeableKeys);",
            "Description": "Use Objects.hash(Objects) method to calculate the hash code, as it can handle null values and is more concise.",
            "Start": 3,
            "End": 16
        }],
        "Final code": "@Override public int hashCode(){\n  return Objects.hash(displayName, lore, customModelData, enchants, repairCost, persistentDataContainer, hideFlags, unbreakable, damage, destroyableKeys, placeableKeys);\n}"
    },
    "Old_Method": "@Override public int hashCode(){\n  final int prime=31;\n  int result=1;\n  result=prime * result + ((displayName == null) ? 0 : displayName.hashCode());\n  result=prime * result + ((lore == null) ? 0 : lore.hashCode());\n  result=prime * result + ((customModelData == null) ? 0 : customModelData.hashCode());\n  result=prime * result + (enchants.isEmpty() ? 0 : enchants.hashCode());\n  result=prime * result + (hasRepairCost() ? this.repairCost : 0);\n  result=prime * result + (!persistentDataContainer.isEmpty() ? persistentDataContainer.hashCode() : 0);\n  result=prime * result + (hideFlags.isEmpty() ? 0 : hideFlags.hashCode());\n  result=prime * result + Boolean.hashCode(unbreakable);\n  result=prime * result + (hasDamage() ? this.damage : 0);\n  result=prime * result + (hasDestroyableKeys() ? this.destroyableKeys.hashCode() : 0);\n  result=prime * result + (hasPlaceableKeys() ? this.placeableKeys.hashCode() : 0);\n  return result;\n}\n",
    "File_Path": "MockBukkit/src/main/java/be/seeseemelk/mockbukkit/inventory/meta/ItemMetaMock.java",
    "Start": 7167,
    "Stop": 8130,
    "Project_Name": "data/projects/MockBukkit",
    "Method_Name": "hashCode"
}