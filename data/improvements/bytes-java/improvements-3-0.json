{
    "Method_Improvements": {
        "Improvements": [
            {
                "Improvement": "Remove console output in unit tests",
                "Change_Diff": "- System.out.println(Bytes.parseHex(\"d8b6239569b184eb7991\").transform(new HmacTransformer(Bytes.parseHex(\"671536819982\").array(),\"HmacSHA256\")).encodeHex());",
                "Description": "It is considered a good practice to avoid console output in unit tests, as it may clutter the output and make it difficult to understand the test results. The System.out.println statement at the beginning of the method should be removed.",
                "Start": 1,
                "End": 1
            },
            {
                "Improvement": "Extract common code into variables",
                "Change_Diff": "- Bytes.parseHex(\"d8b6239569b184eb7991\").transform(new HmacTransformer(Bytes.parseHex(\"671536819982\").array(),\"HmacSHA256\"));\n+ byte[] parsedHex = Bytes.parseHex(\"d8b6239569b184eb7991\").array();\n+ byte[] key = Bytes.parseHex(\"671536819982\").array();\n+ Bytes.parseHex(\"d8b6239569b184eb7991\").transform(new HmacTransformer(key,\"HmacSHA256\"));",
                "Description": "The same transformation operation is performed multiple times with the same parameters. To make the code more maintainable and easier to read, this common operation could be extracted into a separate variable.",
                "Start": 6,
                "End": 9
            }
        ],
        "Final code": "@Test public void transformHmac(){\n  byte[] parsedHex = Bytes.parseHex(\"d8b6239569b184eb7991\").array();\n  byte[] key = Bytes.parseHex(\"671536819982\").array();\n  assertEquals(Bytes.parseHex(\"d8f0eda7a00192091ad8fefa501753ae\"),Bytes.allocate(16).transform(new HmacTransformer(new byte[16],\"HmacMd5\")));\n  assertEquals(Bytes.parseHex(\"c69c13e005ae8ec628ec1869f334ca056bb38958\"),Bytes.allocate(16).transform(new HmacTransformer(new byte[20],\"HmacSHA1\")));\n  assertEquals(Bytes.parseHex(\"c69c13e005ae8ec628ec1869f334ca056bb38958\"),Bytes.allocate(16).transform(BytesTransformers.hmacSha1(new byte[20])));\n  assertEquals(Bytes.parseHex(\"853c7403937d8b6239569b184eb7993fc5f751aefcea28f2c863858e2d29c50b\"),Bytes.allocate(16).transform(new HmacTransformer(new byte[32],\"HmacSHA256\")));\n  assertEquals(Bytes.parseHex(\"9aff87db4fd8df58c9081d8386ccc71c9a0f5fe9491235b7bb17e1be20bbe82b\"),Bytes.parseHex(parsedHex).transform(new HmacTransformer(key,\"HmacSHA256\")));\n  assertEquals(Bytes.parseHex(\"9aff87db4fd8df58c9081d8386ccc71c9a0f5fe9491235b7bb17e1be20bbe82b\"),Bytes.parseHex(parsedHex).transform(BytesTransformers.hmacSha256(key)));\n  assertEquals(Bytes.parseHex(\"9aff87db4fd8df58c9081d8386ccc71c9a0f5fe9491235b7bb17e1be20bbe82b\"),Bytes.parseHex(parsedHex).transform(BytesTransformers.hmac(key,\"HmacSHA256\")));\n  assertEquals(Bytes.parseHex(\"9294727a3638bb1c13f48ef8158bfc9d\"),Bytes.from(\"Hi There\").transform(new HmacTransformer(Bytes.parseHex(\"0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b\").array(),\"HmacMd5\")));\n  assertEquals(Bytes.parseHex(\"56be34521d144c88dbb8c733f0e8b3f6\"),Bytes.parseHex(\"DDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD\").transform(new HmacTransformer(Bytes.parseHex(\"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\").array(),\"HmacMd5\")));\n}"
    },
    "Old_Method": "@Test public void transformHmac(){\n  System.out.println(Bytes.parseHex(\"d8b6239569b184eb7991\").transform(new HmacTransformer(Bytes.parseHex(\"671536819982\").array(),\"HmacSHA256\")).encodeHex());\n  assertEquals(Bytes.parseHex(\"d8f0eda7a00192091ad8fefa501753ae\"),Bytes.allocate(16).transform(new HmacTransformer(new byte[16],\"HmacMd5\")));\n  assertEquals(Bytes.parseHex(\"c69c13e005ae8ec628ec1869f334ca056bb38958\"),Bytes.allocate(16).transform(new HmacTransformer(new byte[20],\"HmacSHA1\")));\n  assertEquals(Bytes.parseHex(\"c69c13e005ae8ec628ec1869f334ca056bb38958\"),Bytes.allocate(16).transform(BytesTransformers.hmacSha1(new byte[20])));\n  assertEquals(Bytes.parseHex(\"853c7403937d8b6239569b184eb7993fc5f751aefcea28f2c863858e2d29c50b\"),Bytes.allocate(16).transform(new HmacTransformer(new byte[32],\"HmacSHA256\")));\n  assertEquals(Bytes.parseHex(\"9aff87db4fd8df58c9081d8386ccc71c9a0f5fe9491235b7bb17e1be20bbe82b\"),Bytes.parseHex(\"d8b6239569b184eb7991\").transform(new HmacTransformer(Bytes.parseHex(\"671536819982\").array(),\"HmacSHA256\")));\n  assertEquals(Bytes.parseHex(\"9aff87db4fd8df58c9081d8386ccc71c9a0f5fe9491235b7bb17e1be20bbe82b\"),Bytes.parseHex(\"d8b6239569b184eb7991\").transform(BytesTransformers.hmacSha256(Bytes.parseHex(\"671536819982\").array())));\n  assertEquals(Bytes.parseHex(\"9aff87db4fd8df58c9081d8386ccc71c9a0f5fe9491235b7bb17e1be20bbe82b\"),Bytes.parseHex(\"d8b6239569b184eb7991\").transform(BytesTransformers.hmac(Bytes.parseHex(\"671536819982\").array(),\"HmacSHA256\")));\n  assertEquals(Bytes.parseHex(\"9294727a3638bb1c13f48ef8158bfc9d\"),Bytes.from(\"Hi There\").transform(new HmacTransformer(Bytes.parseHex(\"0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b\").array(),\"HmacMd5\")));\n  assertEquals(Bytes.parseHex(\"56be34521d144c88dbb8c733f0e8b3f6\"),Bytes.parseHex(\"DDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD\").transform(new HmacTransformer(Bytes.parseHex(\"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\").array(),\"HmacMd5\")));\n}\n",
    "File_Path": "bytes-java/src/test/java/at/favre/lib/bytes/BytesTransformTest.java",
    "Start": 27804,
    "Stop": 29926,
    "Project_Name": "data/projects/bytes-java",
    "Method_Name": "transformHmac"
}