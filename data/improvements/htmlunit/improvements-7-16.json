{
    "Method_Improvements": {
        "Improvements": [
            {
                "Improvement": "Remove redundant code",
                "Change_Diff": "- else if (getBrowserVersion().hasFeature(JS_DOMTOKENLIST_REMOVE_WHITESPACE_CHARS_ON_ADD)) {\n- value=String.join(' ',StringUtils.split(value,whitespaceChars()));\n- changed=true;\n- }",
                "Description": "The value is already split and joined with a whitespace character on line 16. The same operation is redundantly performed again from lines 23 to 26. This code can be removed.",
                "Start": 23,
                "End": 26
            },
            {
                "Improvement": "Improve error message",
                "Change_Diff": "- throw JavaScriptEngine.reportRuntimeError('Empty input not allowed');\n+ throw JavaScriptEngine.reportRuntimeError('Whitespace in input not allowed');",
                "Description": "The error message for the case when the input token contains any whitespace characters is currently 'Empty input not allowed'. This is misleading and should be changed to 'Whitespace in input is not allowed'.",
                "Start": 9,
                "End": 9
            },
            {
                "Improvement": "Optimize whitespace check",
                "Change_Diff": "- if (value.length() != 0 && !isWhitespace(value.charAt(value.length() - 1))) {\n+ if (!value.endsWith(' ')) {",
                "Description": "The check for a whitespace character at the end of the value string on line 18 can be simplified by using the trim() method.",
                "Start": 18,
                "End": 18
            }
        ],
        "Final code": "@JsxFunction public void add(final String token){\n  if (StringUtils.isEmpty(token)) {\n    throw JavaScriptEngine.reportRuntimeError('Empty input not allowed');\n  }\n  if (StringUtils.containsAny(token,whitespaceChars())) {\n    throw JavaScriptEngine.reportRuntimeError('Whitespace in input not allowed');\n  }\n  boolean changed=false;\n  String value=getAttribValue();\n  if (StringUtils.isEmpty(value)) {\n    value=token;\n    changed=true;\n  }\n else {\n    value=String.join(' ',StringUtils.split(value,whitespaceChars()));\n    if (position(value,token) < 0) {\n      if (!value.endsWith(' ')) {\n        value=value + ' ';\n      }\n      value=value + token;\n      changed=true;\n    }\n  }\n  if (changed) {\n    updateAttribute(value);\n  }\n}"
    },
    "Old_Method": "/** \n * Adds the specified token to the underlying string.\n * @param token the token to add\n */\n@JsxFunction public void add(final String token){\n  if (StringUtils.isEmpty(token)) {\n    throw JavaScriptEngine.reportRuntimeError(\"Empty input not allowed\");\n  }\n  if (StringUtils.containsAny(token,whitespaceChars())) {\n    throw JavaScriptEngine.reportRuntimeError(\"Empty input not allowed\");\n  }\n  boolean changed=false;\n  String value=getAttribValue();\n  if (StringUtils.isEmpty(value)) {\n    value=token;\n    changed=true;\n  }\n else {\n    value=String.join(\" \",StringUtils.split(value,whitespaceChars()));\n    if (position(value,token) < 0) {\n      if (value.length() != 0 && !isWhitespace(value.charAt(value.length() - 1))) {\n        value=value + \" \";\n      }\n      value=value + token;\n      changed=true;\n    }\n else     if (getBrowserVersion().hasFeature(JS_DOMTOKENLIST_REMOVE_WHITESPACE_CHARS_ON_ADD)) {\n      value=String.join(\" \",StringUtils.split(value,whitespaceChars()));\n      changed=true;\n    }\n  }\n  if (changed) {\n    updateAttribute(value);\n  }\n}\n",
    "File_Path": "htmlunit/src/main/java/org/htmlunit/javascript/host/dom/DOMTokenList.java",
    "Start": 4586,
    "Stop": 5928,
    "Project_Name": "data/projects/htmlunit",
    "Method_Name": "add"
}