{
    "Method_Improvements": {
        "Improvements": [
            {
                "Improvement": "Use private constants for the URLs",
                "Change_Diff": "- conn.setResponse(URL_FIRST,\"<html><body><iframe><\/iframe><\/body><\/html>\");\n- conn.setResponse(URL_SECOND,\"<html><body><\/body><\/html>\");\n+ private static final String URL_FIRST = \"<html><body><iframe><\/iframe><\/body><\/html>\";\n+ private static final String URL_SECOND = \"<html><body><\/body><\/html>\";\n+ conn.setResponse(URL_FIRST, URL_FIRST);\n+ conn.setResponse(URL_SECOND, URL_SECOND);",
                "Description": "URL_FIRST and URL_SECOND are hard-coded and used multiple times in the code. It would be better to declare them as private constants.",
                "Start": 5,
                "End": 6
            },
            {
                "Improvement": "Extract repeated code into a method",
                "Change_Diff": "- assertEquals(1,client.getWebWindows().size());\n- assertEquals(1,client.getTopLevelWindows().size());\n- assertEquals(client.getCurrentWindow(),client.getWebWindows().get(0));\n- assertEquals(client.getCurrentWindow(),client.getTopLevelWindows().get(0));\n- assertEquals(firstWindow,client.getWebWindows().get(0));\n- assertEquals(firstWindow,client.getTopLevelWindows().get(0));\n+ assertWindowsAndAssertions(client, firstWindow, 1, 1);",
                "Description": "The block of assertions is repeated several times in the code. This block can be extracted into a separate method to reduce redundancy and improve readability.",
                "Start": 10,
                "End": 37
            }
        ],
        "Final code": "private static final String URL_FIRST = \"<html><body><iframe><\/iframe><\/body><\/html>\";\nprivate static final String URL_SECOND = \"<html><body><\/body><\/html>\";\n\n@Test public void getTopLevelWindows() throws Exception {\n  @SuppressWarnings(\"resource\") final WebClient client=getWebClient();\n  final MockWebConnection conn=new MockWebConnection();\n  conn.setResponse(URL_FIRST, URL_FIRST);\n  conn.setResponse(URL_SECOND, URL_SECOND);\n  client.setWebConnection(conn);\n  final WebWindow firstWindow=client.getWebWindows().get(0);\n  assertWindowsAndAssertions(client, firstWindow, 1, 1);\n  client.getPage(URL_FIRST);\n  assertWindowsAndAssertions(client, firstWindow, 2, 1);\n  client.getPage(URL_SECOND);\n  assertWindowsAndAssertions(client, firstWindow, 1, 1);\n  client.openWindow(URL_SECOND,\"a\");\n  assertWindowsAndAssertions(client, firstWindow, 2, 2);\n  client.openWindow(URL_SECOND,\"b\");\n  assertWindowsAndAssertions(client, firstWindow, 3, 3);\n  client.close();\n  assertEquals(0,client.getWebWindows().size());\n  assertEquals(0,client.getTopLevelWindows().size());\n  assertNull(client.getCurrentWindow());\n}\n\nprivate void assertWindowsAndAssertions(WebClient client, WebWindow firstWindow, int webWindowsSize, int topLevelWindowsSize) {\n  assertEquals(webWindowsSize,client.getWebWindows().size());\n  assertEquals(topLevelWindowsSize,client.getTopLevelWindows().size());\n  assertEquals(client.getCurrentWindow(),client.getWebWindows().get(0));\n  assertEquals(client.getCurrentWindow(),client.getTopLevelWindows().get(0));\n  assertEquals(firstWindow,client.getWebWindows().get(0));\n  assertEquals(firstWindow,client.getTopLevelWindows().get(0));\n}"
    },
    "Old_Method": "/** \n * @throws Exception if an error occurs\n */\n@Test public void getTopLevelWindows() throws Exception {\n  @SuppressWarnings(\"resource\") final WebClient client=getWebClient();\n  final MockWebConnection conn=new MockWebConnection();\n  conn.setResponse(URL_FIRST,\"<html><body><iframe><\/iframe><\/body><\/html>\");\n  conn.setResponse(URL_SECOND,\"<html><body><\/body><\/html>\");\n  client.setWebConnection(conn);\n  final WebWindow firstWindow=client.getWebWindows().get(0);\n  assertEquals(1,client.getWebWindows().size());\n  assertEquals(1,client.getTopLevelWindows().size());\n  assertEquals(client.getCurrentWindow(),client.getWebWindows().get(0));\n  assertEquals(client.getCurrentWindow(),client.getTopLevelWindows().get(0));\n  assertEquals(firstWindow,client.getWebWindows().get(0));\n  assertEquals(firstWindow,client.getTopLevelWindows().get(0));\n  client.getPage(URL_FIRST);\n  assertEquals(2,client.getWebWindows().size());\n  assertEquals(1,client.getTopLevelWindows().size());\n  assertEquals(client.getCurrentWindow(),client.getWebWindows().get(0));\n  assertEquals(client.getCurrentWindow(),client.getTopLevelWindows().get(0));\n  assertEquals(firstWindow,client.getWebWindows().get(0));\n  assertEquals(firstWindow,client.getTopLevelWindows().get(0));\n  client.getPage(URL_SECOND);\n  assertEquals(1,client.getWebWindows().size());\n  assertEquals(1,client.getTopLevelWindows().size());\n  assertEquals(client.getCurrentWindow(),client.getWebWindows().get(0));\n  assertEquals(client.getCurrentWindow(),client.getTopLevelWindows().get(0));\n  assertEquals(firstWindow,client.getWebWindows().get(0));\n  assertEquals(firstWindow,client.getTopLevelWindows().get(0));\n  client.openWindow(URL_SECOND,\"a\");\n  assertEquals(2,client.getWebWindows().size());\n  assertEquals(2,client.getTopLevelWindows().size());\n  assertEquals(client.getCurrentWindow(),client.getWebWindows().get(1));\n  assertEquals(client.getCurrentWindow(),client.getTopLevelWindows().get(1));\n  assertEquals(client.getWebWindows().get(1),client.getTopLevelWindows().get(1));\n  assertEquals(firstWindow,client.getWebWindows().get(0));\n  assertEquals(firstWindow,client.getTopLevelWindows().get(0));\n  assertNotEquals(firstWindow,client.getWebWindows().get(1));\n  assertNotEquals(firstWindow,client.getTopLevelWindows().get(1));\n  client.openWindow(URL_SECOND,\"b\");\n  assertEquals(3,client.getWebWindows().size());\n  assertEquals(3,client.getTopLevelWindows().size());\n  assertEquals(client.getCurrentWindow(),client.getWebWindows().get(2));\n  assertEquals(client.getCurrentWindow(),client.getTopLevelWindows().get(2));\n  assertEquals(firstWindow,client.getWebWindows().get(0));\n  assertEquals(firstWindow,client.getTopLevelWindows().get(0));\n  assertEquals(client.getWebWindows().get(1),client.getTopLevelWindows().get(1));\n  assertNotEquals(firstWindow,client.getWebWindows().get(1));\n  assertNotEquals(firstWindow,client.getTopLevelWindows().get(1));\n  assertEquals(client.getWebWindows().get(2),client.getTopLevelWindows().get(2));\n  assertNotEquals(firstWindow,client.getWebWindows().get(2));\n  assertNotEquals(firstWindow,client.getTopLevelWindows().get(2));\n  client.close();\n  assertEquals(0,client.getWebWindows().size());\n  assertEquals(0,client.getTopLevelWindows().size());\n  assertNull(client.getCurrentWindow());\n}\n",
    "File_Path": "htmlunit/src/test/java/org/htmlunit/WebClientTest.java",
    "Start": 99638,
    "Stop": 103326,
    "Project_Name": "data/projects/htmlunit",
    "Method_Name": "getTopLevelWindows"
}