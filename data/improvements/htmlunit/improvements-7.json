{
    "Method_Improvements": [{
        "Improvements": [
            {
                "Improvement": "Combine multiple if statements into a single if-else statement",
                "Change_Diff": "- if (StringUtils.isEmpty(value)) {\n+ else if (StringUtils.isEmpty(value)) {",
                "Description": "Combine the first if statement and the subsequent else if statement into a single if-else statement.",
                "Start": 16,
                "End": 19
            },
            {
                "Improvement": "Remove unnecessary call to isWhitespace method",
                "Change_Diff": "- if (value.length() != 0 && !isWhitespace(value.charAt(value.length() - 1))) {\n+ if (value.length() != 0 && !StringUtils.isWhitespace(value.charAt(value.length() - 1))) {",
                "Description": "Replace the call to `isWhitespace` method with `StringUtils.isWhitespace` method to remove unnecessary method call.",
                "Start": 26,
                "End": 26
            }
        ],
        "Final code": " /**\n * Adds the specified token to the underlying string.\n * @param token the token to add\n */\n@JsxFunction\npublic void add(final String token) {\n  if (StringUtils.isEmpty(token)) {\n    throw JavaScriptEngine.reportRuntimeError(\"Empty input not allowed\");\n  }\n  if (StringUtils.containsAny(token, whitespaceChars())) {\n    throw JavaScriptEngine.reportRuntimeError(\"Empty input not allowed\");\n  }\n  boolean changed = false;\n  String value = getAttribValue();\n  if (StringUtils.isEmpty(value)) {\n    value = token;\n    changed = true;\n  }\n  else {\n    value = String.join(\" \", StringUtils.split(value, whitespaceChars()));\n    if (position(value, token) < 0) {\n      if (value.length() != 0 && !StringUtils.isWhitespace(value.charAt(value.length() - 1))) {\n        value = value + \" \";\n      }\n      value = value + token;\n      changed = true;\n    }\n    else if (getBrowserVersion().hasFeature(JS_DOMTOKENLIST_REMOVE_WHITESPACE_CHARS_ON_ADD)) {\n      value = String.join(\" \", StringUtils.split(value, whitespaceChars()));\n      changed = true;\n    }\n  }\n  if (changed) {\n    updateAttribute(value);\n  }\n}"
    }],
    "Old_Method": "/** \n * Adds the specified token to the underlying string.\n * @param token the token to add\n */\n@JsxFunction public void add(final String token){\n  if (StringUtils.isEmpty(token)) {\n    throw JavaScriptEngine.reportRuntimeError(\"Empty input not allowed\");\n  }\n  if (StringUtils.containsAny(token,whitespaceChars())) {\n    throw JavaScriptEngine.reportRuntimeError(\"Empty input not allowed\");\n  }\n  boolean changed=false;\n  String value=getAttribValue();\n  if (StringUtils.isEmpty(value)) {\n    value=token;\n    changed=true;\n  }\n else {\n    value=String.join(\" \",StringUtils.split(value,whitespaceChars()));\n    if (position(value,token) < 0) {\n      if (value.length() != 0 && !isWhitespace(value.charAt(value.length() - 1))) {\n        value=value + \" \";\n      }\n      value=value + token;\n      changed=true;\n    }\n else     if (getBrowserVersion().hasFeature(JS_DOMTOKENLIST_REMOVE_WHITESPACE_CHARS_ON_ADD)) {\n      value=String.join(\" \",StringUtils.split(value,whitespaceChars()));\n      changed=true;\n    }\n  }\n  if (changed) {\n    updateAttribute(value);\n  }\n}\n",
    "File_Path": "htmlunit/src/main/java/org/htmlunit/javascript/host/dom/DOMTokenList.java",
    "Start": 4586,
    "Stop": 5928,
    "Project_Name": "data/projects/htmlunit",
    "Method_Name": "add"
}