{
    "Method_Improvements": {
        "Improvements": [
            {
                "Improvement": "Use clearer error message",
                "Change_Diff": "- throw JavaScriptEngine.reportRuntimeError(\"Empty input not allowed\");\n+ throw JavaScriptEngine.reportRuntimeError(\"Input cannot contain whitespace characters\");",
                "Description": "The error message for the condition `StringUtils.containsAny(token,whitespaceChars())` should be more specific.",
                "Start": 10,
                "End": 12
            },
            {
                "Improvement": "Refactor repetitive code",
                "Change_Diff": "- value=String.join(\" \",StringUtils.split(value,whitespaceChars()));\n- if (position(value,token) < 0) {\n...\n- } else if (getBrowserVersion().hasFeature(JS_DOMTOKENLIST_REMOVE_WHITESPACE_CHARS_ON_ADD)) {\n-     value=String.join(\" \",StringUtils.split(value,whitespaceChars()));\n-     changed=true;\n- }\n+ value = replaceWhitespaceChars(value);\n+ if (position(value, token) < 0) {\n+     value = addToken(value, token);\n+     changed = true;\n+ }",
                "Description": "The logic to replace all whitespace characters with a single space character is repeated twice. This can be refactored.",
                "Start": 19,
                "End": 34
            }
        ],
        "Final code": "public void add(final String token){\n  if (StringUtils.isEmpty(token)) {\n    throw JavaScriptEngine.reportRuntimeError(\"Empty input not allowed\");\n  }\n  if (StringUtils.containsAny(token,whitespaceChars())) {\n    throw JavaScriptEngine.reportRuntimeError(\"Input cannot contain whitespace characters\");\n  }\n  boolean changed=false;\n  String value=getAttribValue();\n  if (StringUtils.isEmpty(value)) {\n    value=token;\n    changed=true;\n  }\n else {\n    value=replaceWhitespaceChars(value);\n    if (position(value,token) < 0) {\n      value=addToken(value, token);\n      changed=true;\n    }\n  }\n  if (changed) {\n    updateAttribute(value);\n  }\n}\n\nprivate String replaceWhitespaceChars(String value) {\n  return String.join(\" \", StringUtils.split(value, whitespaceChars()));\n}\n\nprivate String addToken(String value, String token) {\n  if (value.length() != 0 && !isWhitespace(value.charAt(value.length() - 1))) {\n    value = value + \" \";\n  }\n  return value + token;\n}"
    },
    "Old_Method": "/** \n * Adds the specified token to the underlying string.\n * @param token the token to add\n */\n@JsxFunction public void add(final String token){\n  if (StringUtils.isEmpty(token)) {\n    throw JavaScriptEngine.reportRuntimeError(\"Empty input not allowed\");\n  }\n  if (StringUtils.containsAny(token,whitespaceChars())) {\n    throw JavaScriptEngine.reportRuntimeError(\"Empty input not allowed\");\n  }\n  boolean changed=false;\n  String value=getAttribValue();\n  if (StringUtils.isEmpty(value)) {\n    value=token;\n    changed=true;\n  }\n else {\n    value=String.join(\" \",StringUtils.split(value,whitespaceChars()));\n    if (position(value,token) < 0) {\n      if (value.length() != 0 && !isWhitespace(value.charAt(value.length() - 1))) {\n        value=value + \" \";\n      }\n      value=value + token;\n      changed=true;\n    }\n else     if (getBrowserVersion().hasFeature(JS_DOMTOKENLIST_REMOVE_WHITESPACE_CHARS_ON_ADD)) {\n      value=String.join(\" \",StringUtils.split(value,whitespaceChars()));\n      changed=true;\n    }\n  }\n  if (changed) {\n    updateAttribute(value);\n  }\n}\n",
    "File_Path": "htmlunit/src/main/java/org/htmlunit/javascript/host/dom/DOMTokenList.java",
    "Start": 4586,
    "Stop": 5928,
    "Project_Name": "data/projects/htmlunit",
    "Method_Name": "add"
}