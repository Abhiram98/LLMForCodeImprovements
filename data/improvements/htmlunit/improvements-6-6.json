{
    "Method_Improvements": {
        "Improvements": [{
            "Improvement": "Improve readability by reducing nested conditions",
            "Change_Diff": "- if (sheet_ != null) {\n-   return sheet_;\n- }\n- final Cache cache=getPage().getWebClient().getCache();\n- final CSSStyleSheetImpl cached=cache.getCachedStyleSheet(getTextContent());\n- final String uri=getPage().getWebResponse().getWebRequest().getUrl().toExternalForm();\n- if (cached != null) {\n+ if (sheet_ != null) return sheet_;\n+ final Cache cache=getPage().getWebClient().getCache();\n+ final CSSStyleSheetImpl cached=cache.getCachedStyleSheet(getTextContent());\n+ final String uri = getPage().getWebResponse().getWebRequest().getUrl().toExternalForm();\n+ if (cached == null) {",
            "Description": "The method currently has multiple nested conditions which can be flattened to improve readability. This can be done by returning immediately when `sheet_` is not null and by storing `getPage().getWebResponse().getWebRequest().getUrl().toExternalForm();` in a variable for reuse.",
            "Start": 3,
            "End": 18
        }],
        "Final code": "public CssStyleSheet getSheet(){\n  if (sheet_ != null) return sheet_;\n  final Cache cache=getPage().getWebClient().getCache();\n  final CSSStyleSheetImpl cached=cache.getCachedStyleSheet(getTextContent());\n  final String uri = getPage().getWebResponse().getWebRequest().getUrl().toExternalForm();\n  if (cached == null) {\n    final String css=getTextContent();\n    try (InputSource source=new InputSource(new StringReader(css))){\n      sheet_=new CssStyleSheet(this,source,uri);\n      cache.cache(css,sheet_.getWrappedSheet());\n    }\n catch (    final IOException e) {\n      LOG.error(e.getMessage(),e);\n    }\n  } else {\n    sheet_=new CssStyleSheet(this,cached,uri);\n  }\n  return sheet_;\n}"
    },
    "Old_Method": "/** \n * @return the referenced style sheet\n */\npublic CssStyleSheet getSheet(){\n  if (sheet_ != null) {\n    return sheet_;\n  }\n  final Cache cache=getPage().getWebClient().getCache();\n  final CSSStyleSheetImpl cached=cache.getCachedStyleSheet(getTextContent());\n  final String uri=getPage().getWebResponse().getWebRequest().getUrl().toExternalForm();\n  if (cached != null) {\n    sheet_=new CssStyleSheet(this,cached,uri);\n  }\n else {\n    final String css=getTextContent();\n    try (InputSource source=new InputSource(new StringReader(css))){\n      sheet_=new CssStyleSheet(this,source,uri);\n      cache.cache(css,sheet_.getWrappedSheet());\n    }\n catch (    final IOException e) {\n      LOG.error(e.getMessage(),e);\n    }\n  }\n  return sheet_;\n}\n",
    "File_Path": "htmlunit/src/main/java/org/htmlunit/html/HtmlStyle.java",
    "Start": 3916,
    "Stop": 4846,
    "Project_Name": "data/projects/htmlunit",
    "Method_Name": "getSheet"
}