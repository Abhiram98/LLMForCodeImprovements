{
    "Method_Improvements": {
        "Improvements": [
            {
                "Improvement": "Extract repetitive code into a separate method",
                "Change_Diff": "- if (browserVersion_ == BrowserVersion.INTERNET_EXPLORER) {\n- expectedAlerts=firstDefined(alerts.IE(),alerts.DEFAULT());\n- }\n- else if (browserVersion_ == BrowserVersion.EDGE) {\n- expectedAlerts=firstDefined(alerts.EDGE(),alerts.DEFAULT());\n- }\n...\n+ expectedAlerts = assignAlertsBasedOnBrowser(alerts, NO_ALERTS_DEFINED);",
                "Description": "The process of assigning expected alerts based on the browser version is repeated multiple times. This can be extracted into a separate method, which accepts the appropriate annotation and a default value as parameters.",
                "Start": 8,
                "End": 51
            },
            {
                "Improvement": "Use switch statement instead of multiple if-else statements",
                "Change_Diff": "- if (browserVersion_ == BrowserVersion.INTERNET_EXPLORER) {\n- ...\n- } else if (browserVersion_ == BrowserVersion.EDGE) {\n- ...\n- }\n...\n+ switch (browserVersion_) {\n+ case BrowserVersion.INTERNET_EXPLORER:\n+ ...\n+ break;\n+ case BrowserVersion.EDGE:\n+ ...\n+ break;\n+ ...\n+ }",
                "Description": "The numerous if-else statements checking the value of `browserVersion_` can be replaced with a switch statement for cleaner code.",
                "Start": 8,
                "End": 51
            }
        ],
        "Final code": "private void setAlerts(final WebTestCase testCase,final Method method){\n  final Alerts alerts=method.getAnnotation(Alerts.class);\n  String[] expectedAlerts={};\n  if (alerts != null) {\n    expectedAlerts=NO_ALERTS_DEFINED;\n    if (isDefined(alerts.value())) {\n      expectedAlerts=alerts.value();\n    } else {\n      expectedAlerts = assignAlertsBasedOnBrowser(alerts, NO_ALERTS_DEFINED);\n    }\n  }\n  if (isRealBrowser()) {\n    final BuggyWebDriver buggyWebDriver=method.getAnnotation(BuggyWebDriver.class);\n    if (buggyWebDriver != null) {\n      if (isDefined(buggyWebDriver.value())) {\n        expectedAlerts=buggyWebDriver.value();\n      } else {\n        expectedAlerts = assignAlertsBasedOnBrowser(buggyWebDriver, expectedAlerts);\n      }\n    }\n  } else {\n    final HtmlUnitNYI htmlUnitNYI=method.getAnnotation(HtmlUnitNYI.class);\n    if (htmlUnitNYI != null) {\n      expectedAlerts = assignAlertsBasedOnBrowser(htmlUnitNYI, expectedAlerts);\n    }\n  }\n  testCase.setExpectedAlerts(expectedAlerts);\n}\n\nprivate String[] assignAlertsBasedOnBrowser(Object annotation, String[] defaultValue) {\n  switch (browserVersion_) {\n    case BrowserVersion.INTERNET_EXPLORER:\n      return firstDefinedOrGiven(defaultValue, annotation.IE(), annotation.DEFAULT());\n    case BrowserVersion.EDGE:\n      return firstDefinedOrGiven(defaultValue, annotation.EDGE(), annotation.DEFAULT());\n    case BrowserVersion.FIREFOX_ESR:\n      return firstDefinedOrGiven(defaultValue, annotation.FF_ESR(), annotation.DEFAULT());\n    case BrowserVersion.FIREFOX:\n      return firstDefinedOrGiven(defaultValue, annotation.FF(), annotation.DEFAULT());\n    case BrowserVersion.CHROME:\n      return firstDefinedOrGiven(defaultValue, annotation.CHROME(), annotation.DEFAULT());\n    default:\n      throw new IllegalArgumentException(\"Unsupported browser version: \" + browserVersion_);\n  }\n}"
    },
    "Old_Method": "private void setAlerts(final WebTestCase testCase,final Method method){\n  final Alerts alerts=method.getAnnotation(Alerts.class);\n  String[] expectedAlerts={};\n  if (alerts != null) {\n    expectedAlerts=NO_ALERTS_DEFINED;\n    if (isDefined(alerts.value())) {\n      expectedAlerts=alerts.value();\n    }\n else {\n      if (browserVersion_ == BrowserVersion.INTERNET_EXPLORER) {\n        expectedAlerts=firstDefined(alerts.IE(),alerts.DEFAULT());\n      }\n else       if (browserVersion_ == BrowserVersion.EDGE) {\n        expectedAlerts=firstDefined(alerts.EDGE(),alerts.DEFAULT());\n      }\n else       if (browserVersion_ == BrowserVersion.FIREFOX_ESR) {\n        expectedAlerts=firstDefined(alerts.FF_ESR(),alerts.DEFAULT());\n      }\n else       if (browserVersion_ == BrowserVersion.FIREFOX) {\n        expectedAlerts=firstDefined(alerts.FF(),alerts.DEFAULT());\n      }\n else       if (browserVersion_ == BrowserVersion.CHROME) {\n        expectedAlerts=firstDefined(alerts.CHROME(),alerts.DEFAULT());\n      }\n    }\n  }\n  if (isRealBrowser()) {\n    final BuggyWebDriver buggyWebDriver=method.getAnnotation(BuggyWebDriver.class);\n    if (buggyWebDriver != null) {\n      if (isDefined(buggyWebDriver.value())) {\n        expectedAlerts=buggyWebDriver.value();\n      }\n else {\n        if (browserVersion_ == BrowserVersion.INTERNET_EXPLORER) {\n          expectedAlerts=firstDefinedOrGiven(expectedAlerts,buggyWebDriver.IE(),buggyWebDriver.DEFAULT());\n        }\n else         if (browserVersion_ == BrowserVersion.EDGE) {\n          expectedAlerts=firstDefinedOrGiven(expectedAlerts,buggyWebDriver.EDGE(),buggyWebDriver.DEFAULT());\n        }\n else         if (browserVersion_ == BrowserVersion.FIREFOX_ESR) {\n          expectedAlerts=firstDefinedOrGiven(expectedAlerts,buggyWebDriver.FF_ESR(),buggyWebDriver.DEFAULT());\n        }\n else         if (browserVersion_ == BrowserVersion.FIREFOX) {\n          expectedAlerts=firstDefinedOrGiven(expectedAlerts,buggyWebDriver.FF(),buggyWebDriver.DEFAULT());\n        }\n else         if (browserVersion_ == BrowserVersion.CHROME) {\n          expectedAlerts=firstDefinedOrGiven(expectedAlerts,buggyWebDriver.CHROME(),buggyWebDriver.DEFAULT());\n        }\n      }\n    }\n  }\n else {\n    final HtmlUnitNYI htmlUnitNYI=method.getAnnotation(HtmlUnitNYI.class);\n    if (htmlUnitNYI != null) {\n      if (browserVersion_ == BrowserVersion.INTERNET_EXPLORER) {\n        expectedAlerts=firstDefinedOrGiven(expectedAlerts,htmlUnitNYI.IE());\n      }\n else       if (browserVersion_ == BrowserVersion.EDGE) {\n        expectedAlerts=firstDefinedOrGiven(expectedAlerts,htmlUnitNYI.EDGE());\n      }\n else       if (browserVersion_ == BrowserVersion.FIREFOX_ESR) {\n        expectedAlerts=firstDefinedOrGiven(expectedAlerts,htmlUnitNYI.FF_ESR());\n      }\n else       if (browserVersion_ == BrowserVersion.FIREFOX) {\n        expectedAlerts=firstDefinedOrGiven(expectedAlerts,htmlUnitNYI.FF());\n      }\n else       if (browserVersion_ == BrowserVersion.CHROME) {\n        expectedAlerts=firstDefinedOrGiven(expectedAlerts,htmlUnitNYI.CHROME());\n      }\n    }\n  }\n  testCase.setExpectedAlerts(expectedAlerts);\n}\n",
    "File_Path": "htmlunit/src/test/java/org/htmlunit/junit/BrowserVersionClassRunner.java",
    "Start": 2954,
    "Stop": 7071,
    "Project_Name": "data/projects/htmlunit",
    "Method_Name": "setAlerts"
}