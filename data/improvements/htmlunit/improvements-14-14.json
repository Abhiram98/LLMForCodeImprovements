{
    "Method_Improvements": {
        "Improvements": [{
            "Improvement": "Use Optional to avoid NullPointerException",
            "Change_Diff": "- if (javaScriptExecutor_ != null) {\n+ Optional.ofNullable(javaScriptExecutor_).ifPresent(JavaScriptExecutor::shutdown);\n- javaScriptExecutor_ = null;\n\n- if (postponedActions_ != null) {\n+ Optional.ofNullable(postponedActions_).ifPresent(Actions::remove);\n\n- if (javaScriptRunning_ != null) {\n+ Optional.ofNullable(javaScriptRunning_).ifPresent(Running::remove);",
            "Description": "The objects 'javaScriptExecutor_', 'postponedActions_' and 'javaScriptRunning_' are directly accessed which might cause NullPointerException if they are null. It's better to use Java 8's Optional class to prevent NullPointerException.",
            "Start": 6,
            "End": 14
        }],
        "Final code": "/** \n * Shutdown the JavaScriptEngine.\n */\n@Override public void shutdown(){\n  webClient_=null;\n  contextFactory_=null;\n  jsConfig_=null;\n  Optional.ofNullable(javaScriptExecutor_).ifPresent(JavaScriptExecutor::shutdown);\n  Optional.ofNullable(postponedActions_).ifPresent(Actions::remove);\n  Optional.ofNullable(javaScriptRunning_).ifPresent(Running::remove);\n  holdPostponedActions_=false;\n}"
    },
    "Old_Method": "/** \n * Shutdown the JavaScriptEngine.\n */\n@Override public void shutdown(){\n  webClient_=null;\n  contextFactory_=null;\n  jsConfig_=null;\n  if (javaScriptExecutor_ != null) {\n    javaScriptExecutor_.shutdown();\n    javaScriptExecutor_=null;\n  }\n  if (postponedActions_ != null) {\n    postponedActions_.remove();\n  }\n  if (javaScriptRunning_ != null) {\n    javaScriptRunning_.remove();\n  }\n  holdPostponedActions_=false;\n}\n",
    "File_Path": "htmlunit/src/main/java/org/htmlunit/javascript/JavaScriptEngine.java",
    "Start": 35868,
    "Stop": 36412,
    "Project_Name": "data/projects/htmlunit",
    "Method_Name": "shutdown"
}